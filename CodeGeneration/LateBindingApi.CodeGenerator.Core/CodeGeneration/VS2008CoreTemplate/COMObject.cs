// Generated by LateBindingApi.CodeGenerator
using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Collections.Generic;
using System.Text;

namespace LateBindingApi.Core
{
    public abstract class COMObject : IObject 
    {
        #region Fields

        private IObject        _parentObject;
        private List<IObject> _listChildObjects = new List<IObject>();
        private Type          _instanceType;
        private object        _comProxy;

        #endregion

        #region Properties

        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public object COMProxy
        {
            get
            {
                return _comProxy;
            }
        }


        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public IObject ParentObject
        {
            get
            {
                return _parentObject;
            }
            set
            {
                _parentObject = value;
            }
        }

        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public Type InstanceType
        {
            get
            {
                return _instanceType;
            }
        }

        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public List<IObject> ListChildObjects
        {
            get
            {
                return _listChildObjects;
            }
        }

        #endregion

        #region Construction

        internal COMObject(string progId)
        {           
            _instanceType = System.Type.GetTypeFromProgID(progId);
            if (null == _instanceType)
                throw (new ArgumentException("progId not found. " + progId));

            _comProxy = Activator.CreateInstance(_instanceType);
        }

        internal COMObject(object comProxy)
        {
            _comProxy     = comProxy;
            _instanceType = comProxy.GetType();
          
        }

        internal COMObject(IObject parentObject, object comProxy)
        {
            _parentObject = parentObject;
            _comProxy     = comProxy;
            _instanceType = comProxy.GetType();
        }

        #endregion

        #region Methods

        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public void ReleaseCOMProxy()
        {
            IEventBinding typeEvent = this as IEventBinding;
            if (null != typeEvent)
                typeEvent.DisposeSinkHelper();

            // remove himself from parent childlist
            if (null != _parentObject)
            {
                _parentObject.RemoveChildObject(this);
                _parentObject = null;
            }

            // finally release himself
            if (null != _comProxy)
            {
                Marshal.ReleaseComObject(_comProxy);
                _comProxy = null;
            }
        }

        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public void RemoveChildObject(IObject childObject)
        {
            _listChildObjects.Remove(childObject);
        }

        [EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public void RemoveChildObjects()
        {
            // release all childs
            foreach (IObject itemObject in _listChildObjects)
            {
                itemObject.ParentObject = null;
                itemObject.RemoveChildObjects();
                itemObject.ReleaseCOMProxy();
            }

            // and now clear
            _listChildObjects.Clear();
        }

        #endregion

        #region IDisposable Members

        public void Dispose()
        {
            IEventBinding eventBind = this as IEventBinding;
            if (null != eventBind)
                eventBind.DisposeSinkHelper();

            RemoveChildObjects();
            ReleaseCOMProxy();
        }

        #endregion
    }
}