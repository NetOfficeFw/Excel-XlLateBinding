//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.VBIDE
{
	[SupportByLibrary("VBE")]
	public class _CodeModule : COMObject
	{
		#region Construction

		public _CodeModule(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public _CodeModule(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public _CodeModule(COMObject replacedObject) : base(replacedObject)
		{
		}

		public _CodeModule()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("VBE")]
		public LateBindingApi.VBIDE.VBComponent Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				if(null == returnValue)
					return null;
				LateBindingApi.VBIDE.VBComponent newClass = new LateBindingApi.VBIDE.VBComponent(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("VBE")]
		public LateBindingApi.VBIDE.VBE VBE
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VBE");
				if(null == returnValue)
					return null;
				LateBindingApi.VBIDE.VBE newClass = new LateBindingApi.VBIDE.VBE(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("VBE")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("VBE")]
		public string get_Lines(Int32 startLine, Int32 count)
		{
			object[] paramArray = new object[2];
			paramArray[0] = startLine;
			paramArray[1] = count;
			object returnValue = Invoker.PropertyGet(this, "Lines", paramArray);
			return (string)returnValue;
		}

		[SupportByLibrary("VBE")]
		public Int32 CountOfLines
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CountOfLines");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("VBE")]
		public Int32 get_ProcStartLine(string procName, LateBindingApi.VBIDE.Enums.Vbext_ProcKind procKind)
		{
			object[] paramArray = new object[2];
			paramArray[0] = procName;
			paramArray[1] = procKind;
			object returnValue = Invoker.PropertyGet(this, "ProcStartLine", paramArray);
			return (Int32)returnValue;
		}

		[SupportByLibrary("VBE")]
		public Int32 get_ProcCountLines(string procName, LateBindingApi.VBIDE.Enums.Vbext_ProcKind procKind)
		{
			object[] paramArray = new object[2];
			paramArray[0] = procName;
			paramArray[1] = procKind;
			object returnValue = Invoker.PropertyGet(this, "ProcCountLines", paramArray);
			return (Int32)returnValue;
		}

		[SupportByLibrary("VBE")]
		public Int32 get_ProcBodyLine(string procName, LateBindingApi.VBIDE.Enums.Vbext_ProcKind procKind)
		{
			object[] paramArray = new object[2];
			paramArray[0] = procName;
			paramArray[1] = procKind;
			object returnValue = Invoker.PropertyGet(this, "ProcBodyLine", paramArray);
			return (Int32)returnValue;
		}

		[SupportByLibrary("VBE")]
		public string get_ProcOfLine(Int32 line, LateBindingApi.VBIDE.Enums.Vbext_ProcKind procKind)
		{
			object[] paramArray = new object[2];
			paramArray[0] = line;
			paramArray[1] = procKind;
			object returnValue = Invoker.PropertyGet(this, "ProcOfLine", paramArray);
			return (string)returnValue;
		}

		[SupportByLibrary("VBE")]
		public Int32 CountOfDeclarationLines
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CountOfDeclarationLines");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("VBE")]
		public LateBindingApi.VBIDE.CodePane CodePane
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CodePane");
				if(null == returnValue)
					return null;
				LateBindingApi.VBIDE.CodePane newClass = new LateBindingApi.VBIDE.CodePane(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("VBE")]
		public void AddFromString(string _string)
		{
			object[] paramArray = new object[1];
			paramArray[0] = _string;
			Invoker.Method(this, "AddFromString", paramArray);
		}

		[SupportByLibrary("VBE")]
		public void AddFromFile(string fileName)
		{
			object[] paramArray = new object[1];
			paramArray[0] = fileName;
			Invoker.Method(this, "AddFromFile", paramArray);
		}

		[SupportByLibrary("VBE")]
		public void InsertLines(Int32 line, string _string)
		{
			object[] paramArray = new object[2];
			paramArray[0] = line;
			paramArray[1] = _string;
			Invoker.Method(this, "InsertLines", paramArray);
		}

		[SupportByLibrary("VBE")]
		public void DeleteLines(Int32 startLine, Int32 count)
		{
			object[] paramArray = new object[2];
			paramArray[0] = startLine;
			paramArray[1] = count;
			Invoker.Method(this, "DeleteLines", paramArray);
		}

		[SupportByLibrary("VBE")]
		public void ReplaceLine(Int32 line, string _string)
		{
			object[] paramArray = new object[2];
			paramArray[0] = line;
			paramArray[1] = _string;
			Invoker.Method(this, "ReplaceLine", paramArray);
		}

		[SupportByLibrary("VBE")]
		public Int32 CreateEventProc(string eventName, string objectName)
		{
			object[] paramArray = new object[2];
			paramArray[0] = eventName;
			paramArray[1] = objectName;
			object returnValue = Invoker.MethodReturn(this, "CreateEventProc", paramArray);
			return (Int32)returnValue;
		}

		[SupportByLibrary("VBE")]
		public bool Find(string target, Int32 startLine, Int32 startColumn, Int32 endLine, Int32 endColumn, bool wholeWord, bool matchCase, bool patternSearch)
		{
			object[] paramArray = new object[8];
			paramArray[0] = target;
			paramArray.SetValue(startLine,1);
			paramArray.SetValue(startColumn,2);
			paramArray.SetValue(endLine,3);
			paramArray.SetValue(endColumn,4);
			paramArray[5] = wholeWord;
			paramArray[6] = matchCase;
			paramArray[7] = patternSearch;
			object returnValue = Invoker.MethodReturn(this, "Find", paramArray);
			return (bool)returnValue;
		}

		#endregion

	}
}
