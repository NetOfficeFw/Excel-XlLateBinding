//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF12","OF14")]
	public class IMsoChart : COMObject
	{
		#region Construction

		public IMsoChart(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public IMsoChart(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public IMsoChart(COMObject replacedObject) : base(replacedObject)
		{
		}

		public IMsoChart()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF12","OF14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public bool HasTitle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasTitle");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasTitle", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoChartTitle ChartTitle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChartTitle");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartTitle newClass = new LateBindingApi.Office.IMsoChartTitle(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 DepthPercent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DepthPercent");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DepthPercent", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public Int32 Elevation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Elevation");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Elevation", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public Int32 GapDepth
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GapDepth");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "GapDepth", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public Int32 HeightPercent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HeightPercent");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HeightPercent", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public Int32 Perspective
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Perspective");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Perspective", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public COMVariant RightAngleAxes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RightAngleAxes");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "RightAngleAxes", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public COMVariant Rotation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Rotation");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "Rotation", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.Enums.XlDisplayBlanksAs DisplayBlanksAs
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayBlanksAs");
				return (LateBindingApi.Office.Enums.XlDisplayBlanksAs)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayBlanksAs", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool ProtectData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectData");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ProtectData", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool ProtectFormatting
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectFormatting");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ProtectFormatting", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool ProtectGoalSeek
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectGoalSeek");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ProtectGoalSeek", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool ProtectSelection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectSelection");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ProtectSelection", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool ProtectChartObjects
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectChartObjects");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ProtectChartObjects", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public COMObject ChartGroups
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChartGroups", null);
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public COMObject get_ChartGroups(object pvarIndex, object varIgallery)
		{
			object[] paramArray = new object[2];
			paramArray[0] = pvarIndex;
			paramArray[1] = varIgallery;
			object returnValue = Invoker.PropertyGet(this, "ChartGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 SubType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SubType");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SubType", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public Int32 Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Type", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoCorners Corners
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Corners");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoCorners newClass = new LateBindingApi.Office.IMsoCorners(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.Enums.XlChartType ChartType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChartType");
				return (LateBindingApi.Office.Enums.XlChartType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ChartType", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool HasDataTable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasDataTable");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasDataTable", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.Enums.XlRowCol PlotBy
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PlotBy");
				return (LateBindingApi.Office.Enums.XlRowCol)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PlotBy", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool HasLegend
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasLegend");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasLegend", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoLegend Legend
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Legend");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoLegend newClass = new LateBindingApi.Office.IMsoLegend(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public COMVariant HasAxis
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasAxis", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "HasAxis", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public COMVariant get_HasAxis(object axisType, object axisGroup)
		{
			object[] paramArray = new object[2];
			paramArray[0] = axisType;
			paramArray[1] = axisGroup;
				object returnValue = Invoker.PropertyGet(this, "HasAxis", paramArray);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
		}
		
		[SupportByLibrary("OF12","OF14")]
		public void set_HasAxis(object axisType, object axisGroup, object value)
		{
			object[] paramArray = new object[2];
			paramArray[0] = axisType;
			paramArray[1] = axisGroup;
			Invoker.PropertySet(this, "HasAxis", paramArray, value);
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoWalls get_Walls(bool fBackWall)
		{
			object[] paramArray = new object[1];
			paramArray[0] = fBackWall;
			object returnValue = Invoker.PropertyGet(this, "Walls", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Office.IMsoWalls newClass = new LateBindingApi.Office.IMsoWalls(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoFloor Floor
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Floor");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoFloor newClass = new LateBindingApi.Office.IMsoFloor(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoPlotArea PlotArea
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PlotArea");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoPlotArea newClass = new LateBindingApi.Office.IMsoPlotArea(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public bool PlotVisibleOnly
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PlotVisibleOnly");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PlotVisibleOnly", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoChartArea ChartArea
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChartArea");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartArea newClass = new LateBindingApi.Office.IMsoChartArea(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public bool AutoScaling
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoScaling");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AutoScaling", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoDataTable DataTable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataTable");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoDataTable newClass = new LateBindingApi.Office.IMsoDataTable(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.Enums.XlBarShape BarShape
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BarShape");
				return (LateBindingApi.Office.Enums.XlBarShape)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "BarShape", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoWalls SideWall
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SideWall");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoWalls newClass = new LateBindingApi.Office.IMsoWalls(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoWalls BackWall
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BackWall");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoWalls newClass = new LateBindingApi.Office.IMsoWalls(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public COMVariant ChartStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChartStyle");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "ChartStyle", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public COMObject PivotLayout
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotLayout");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public bool HasPivotFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasPivotFields");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasPivotFields", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool ShowDataLabelsOverMaximum
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowDataLabelsOverMaximum");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowDataLabelsOverMaximum", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public COMObject Selection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Selection");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoChartData ChartData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChartData");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartData newClass = new LateBindingApi.Office.IMsoChartData(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.IMsoChartFormat Format
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Format");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartFormat newClass = new LateBindingApi.Office.IMsoChartFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.Shapes Shapes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Shapes");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.Shapes newClass = new LateBindingApi.Office.Shapes(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF14")]
		public COMObject Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF14")]
		public Int32 Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF14")]
		public LateBindingApi.Office.IMsoChartGroup Area3DGroup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Area3DGroup");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartGroup newClass = new LateBindingApi.Office.IMsoChartGroup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF14")]
		public LateBindingApi.Office.IMsoChartGroup Bar3DGroup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Bar3DGroup");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartGroup newClass = new LateBindingApi.Office.IMsoChartGroup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF14")]
		public LateBindingApi.Office.IMsoChartGroup Column3DGroup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Column3DGroup");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartGroup newClass = new LateBindingApi.Office.IMsoChartGroup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF14")]
		public LateBindingApi.Office.IMsoChartGroup Line3DGroup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Line3DGroup");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartGroup newClass = new LateBindingApi.Office.IMsoChartGroup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF14")]
		public LateBindingApi.Office.IMsoChartGroup Pie3DGroup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Pie3DGroup");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartGroup newClass = new LateBindingApi.Office.IMsoChartGroup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF14")]
		public LateBindingApi.Office.IMsoChartGroup SurfaceGroup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SurfaceGroup");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IMsoChartGroup newClass = new LateBindingApi.Office.IMsoChartGroup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF14")]
		public bool ShowReportFilterFieldButtons
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowReportFilterFieldButtons");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowReportFilterFieldButtons", value);
			}						
		}


		[SupportByLibrary("OF14")]
		public bool ShowLegendFieldButtons
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowLegendFieldButtons");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowLegendFieldButtons", value);
			}						
		}


		[SupportByLibrary("OF14")]
		public bool ShowAxisFieldButtons
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowAxisFieldButtons");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowAxisFieldButtons", value);
			}						
		}


		[SupportByLibrary("OF14")]
		public bool ShowValueFieldButtons
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowValueFieldButtons");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowValueFieldButtons", value);
			}						
		}


		[SupportByLibrary("OF14")]
		public bool ShowAllFieldButtons
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowAllFieldButtons");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowAllFieldButtons", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("OF12","OF14")]
		public void UnProtect()
		{
			Invoker.Method(this, "UnProtect", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void UnProtect(object password)
		{
			object[] paramArray = new object[1];
			paramArray[0] = password;
			Invoker.Method(this, "UnProtect", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Protect()
		{
			Invoker.Method(this, "Protect", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly)
		{
			object[] paramArray = new object[5];
			paramArray[0] = password;
			paramArray[1] = drawingObjects;
			paramArray[2] = contents;
			paramArray[3] = scenarios;
			paramArray[4] = userInterfaceOnly;
			Invoker.Method(this, "Protect", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public COMObject SeriesCollection()
		{
			object returnValue = Invoker.MethodReturn(this, "SeriesCollection", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF12","OF14")]
		public COMObject SeriesCollection(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "SeriesCollection", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF12","OF14")]
		public void _ApplyDataLabels(LateBindingApi.Office.Enums.XlDataLabelsType type)
		{
			object[] paramArray = new object[1];
			paramArray[0] = type;
			Invoker.Method(this, "_ApplyDataLabels", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void _ApplyDataLabels(LateBindingApi.Office.Enums.XlDataLabelsType type, object iMsoLegendKey, object autoText, object hasLeaderLines)
		{
			object[] paramArray = new object[4];
			paramArray[0] = type;
			paramArray[1] = iMsoLegendKey;
			paramArray[2] = autoText;
			paramArray[3] = hasLeaderLines;
			Invoker.Method(this, "_ApplyDataLabels", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ApplyDataLabels(LateBindingApi.Office.Enums.XlDataLabelsType type)
		{
			object[] paramArray = new object[1];
			paramArray[0] = type;
			Invoker.Method(this, "ApplyDataLabels", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ApplyDataLabels(LateBindingApi.Office.Enums.XlDataLabelsType type, object iMsoLegendKey, object autoText, object hasLeaderLines, object showSeriesName, object showCategoryName, object showValue, object showPercentage, object showBubbleSize, object separator)
		{
			object[] paramArray = new object[10];
			paramArray[0] = type;
			paramArray[1] = iMsoLegendKey;
			paramArray[2] = autoText;
			paramArray[3] = hasLeaderLines;
			paramArray[4] = showSeriesName;
			paramArray[5] = showCategoryName;
			paramArray[6] = showValue;
			paramArray[7] = showPercentage;
			paramArray[8] = showBubbleSize;
			paramArray[9] = separator;
			Invoker.Method(this, "ApplyDataLabels", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ApplyCustomType(LateBindingApi.Office.Enums.XlChartType chartType)
		{
			object[] paramArray = new object[1];
			paramArray[0] = chartType;
			Invoker.Method(this, "ApplyCustomType", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ApplyCustomType(LateBindingApi.Office.Enums.XlChartType chartType, object typeName)
		{
			object[] paramArray = new object[2];
			paramArray[0] = chartType;
			paramArray[1] = typeName;
			Invoker.Method(this, "ApplyCustomType", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void GetChartElement(Int32 x, Int32 y, Int32 elementID, Int32 arg1, Int32 arg2)
		{
			object[] paramArray = new object[5];
			paramArray[0] = x;
			paramArray[1] = y;
			paramArray.SetValue(elementID,2);
			paramArray.SetValue(arg1,3);
			paramArray.SetValue(arg2,4);
			Invoker.Method(this, "GetChartElement", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void SetSourceData(string source)
		{
			object[] paramArray = new object[1];
			paramArray[0] = source;
			Invoker.Method(this, "SetSourceData", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void SetSourceData(string source, object plotBy)
		{
			object[] paramArray = new object[2];
			paramArray[0] = source;
			paramArray[1] = plotBy;
			Invoker.Method(this, "SetSourceData", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public COMObject Axes(object type, LateBindingApi.Office.Enums.XlAxisGroup axisGroup)
		{
			object[] paramArray = new object[2];
			paramArray[0] = type;
			paramArray[1] = axisGroup;
			object returnValue = Invoker.MethodReturn(this, "Axes", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF12","OF14")]
		public void AutoFormat(Int32 rGallery)
		{
			object[] paramArray = new object[1];
			paramArray[0] = rGallery;
			Invoker.Method(this, "AutoFormat", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void AutoFormat(Int32 rGallery, object varFormat)
		{
			object[] paramArray = new object[2];
			paramArray[0] = rGallery;
			paramArray[1] = varFormat;
			Invoker.Method(this, "AutoFormat", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void SetBackgroundPicture(string bstr)
		{
			object[] paramArray = new object[1];
			paramArray[0] = bstr;
			Invoker.Method(this, "SetBackgroundPicture", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ChartWizard()
		{
			Invoker.Method(this, "ChartWizard", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ChartWizard(object varSource, object varGallery, object varFormat, object varPlotBy, object varCategoryLabels, object varSeriesLabels, object varHasLegend, object varTitle, object varCategoryTitle, object varValueTitle, object varExtraTitle)
		{
			object[] paramArray = new object[11];
			paramArray[0] = varSource;
			paramArray[1] = varGallery;
			paramArray[2] = varFormat;
			paramArray[3] = varPlotBy;
			paramArray[4] = varCategoryLabels;
			paramArray[5] = varSeriesLabels;
			paramArray[6] = varHasLegend;
			paramArray[7] = varTitle;
			paramArray[8] = varCategoryTitle;
			paramArray[9] = varValueTitle;
			paramArray[10] = varExtraTitle;
			Invoker.Method(this, "ChartWizard", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void CopyPicture(Int32 appearance, Int32 format, Int32 size)
		{
			object[] paramArray = new object[3];
			paramArray[0] = appearance;
			paramArray[1] = format;
			paramArray[2] = size;
			Invoker.Method(this, "CopyPicture", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public COMVariant Evaluate(object varName, Int32 localeID, Int32 objType)
		{
			object[] paramArray = new object[3];
			paramArray[0] = varName;
			paramArray[1] = localeID;
			paramArray.SetValue(objType,2);
			object returnValue = Invoker.MethodReturn(this, "Evaluate", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF12","OF14")]
		public COMVariant _Evaluate(object varName, Int32 localeID)
		{
			object[] paramArray = new object[2];
			paramArray[0] = varName;
			paramArray[1] = localeID;
			object returnValue = Invoker.MethodReturn(this, "_Evaluate", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF12","OF14")]
		public void Paste()
		{
			Invoker.Method(this, "Paste", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Paste(object varType)
		{
			object[] paramArray = new object[1];
			paramArray[0] = varType;
			Invoker.Method(this, "Paste", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public bool Export(string bstr)
		{
			object[] paramArray = new object[1];
			paramArray[0] = bstr;
			object returnValue = Invoker.MethodReturn(this, "Export", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("OF12","OF14")]
		public bool Export(string bstr, object varFilterName, object varInteractive)
		{
			object[] paramArray = new object[3];
			paramArray[0] = bstr;
			paramArray[1] = varFilterName;
			paramArray[2] = varInteractive;
			object returnValue = Invoker.MethodReturn(this, "Export", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("OF12","OF14")]
		public void SetDefaultChart(object varName)
		{
			object[] paramArray = new object[1];
			paramArray[0] = varName;
			Invoker.Method(this, "SetDefaultChart", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ApplyChartTemplate(string bstrFileName)
		{
			object[] paramArray = new object[1];
			paramArray[0] = bstrFileName;
			Invoker.Method(this, "ApplyChartTemplate", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void SaveChartTemplate(string bstrFileName)
		{
			object[] paramArray = new object[1];
			paramArray[0] = bstrFileName;
			Invoker.Method(this, "SaveChartTemplate", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ClearToMatchStyle()
		{
			Invoker.Method(this, "ClearToMatchStyle", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void RefreshPivotTable()
		{
			Invoker.Method(this, "RefreshPivotTable", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ApplyLayout(Int32 layout)
		{
			object[] paramArray = new object[1];
			paramArray[0] = layout;
			Invoker.Method(this, "ApplyLayout", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ApplyLayout(Int32 layout, object varChartType)
		{
			object[] paramArray = new object[2];
			paramArray[0] = layout;
			paramArray[1] = varChartType;
			Invoker.Method(this, "ApplyLayout", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Refresh()
		{
			Invoker.Method(this, "Refresh", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void SetElement(LateBindingApi.Office.Enums.MsoChartElementType rHS)
		{
			object[] paramArray = new object[1];
			paramArray[0] = rHS;
			Invoker.Method(this, "SetElement", paramArray);
		}

		[SupportByLibrary("OF14")]
		public COMObject AreaGroups()
		{
			object returnValue = Invoker.MethodReturn(this, "AreaGroups", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject AreaGroups(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "AreaGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject BarGroups()
		{
			object returnValue = Invoker.MethodReturn(this, "BarGroups", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject BarGroups(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "BarGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject ColumnGroups()
		{
			object returnValue = Invoker.MethodReturn(this, "ColumnGroups", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject ColumnGroups(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "ColumnGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject LineGroups()
		{
			object returnValue = Invoker.MethodReturn(this, "LineGroups", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject LineGroups(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "LineGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject PieGroups()
		{
			object returnValue = Invoker.MethodReturn(this, "PieGroups", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject PieGroups(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "PieGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject DoughnutGroups()
		{
			object returnValue = Invoker.MethodReturn(this, "DoughnutGroups", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject DoughnutGroups(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "DoughnutGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject RadarGroups()
		{
			object returnValue = Invoker.MethodReturn(this, "RadarGroups", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject RadarGroups(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "RadarGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject XYGroups()
		{
			object returnValue = Invoker.MethodReturn(this, "XYGroups", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMObject XYGroups(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "XYGroups", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMVariant Delete()
		{
			object returnValue = Invoker.MethodReturn(this, "Delete", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMVariant Copy()
		{
			object returnValue = Invoker.MethodReturn(this, "Copy", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMVariant Select()
		{
			object returnValue = Invoker.MethodReturn(this, "Select", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("OF14")]
		public COMVariant Select(object replace)
		{
			object[] paramArray = new object[1];
			paramArray[0] = replace;
			object returnValue = Invoker.MethodReturn(this, "Select", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		#endregion

	}
}
