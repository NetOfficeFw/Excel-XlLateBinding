//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF10","OF11","OF12","OF14")]
	public class FileDialog : _IMsoDispObj
	{
		#region Construction

		public FileDialog(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public FileDialog(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public FileDialog(COMObject replacedObject) : base(replacedObject)
		{
		}

		public FileDialog()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public LateBindingApi.Office.FileDialogFilters Filters
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Filters");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.FileDialogFilters newClass = new LateBindingApi.Office.FileDialogFilters(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public Int32 FilterIndex
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FilterIndex");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FilterIndex", value);
			}						
		}


		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public string Title
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Title");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Title", value);
			}						
		}


		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public string ButtonName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ButtonName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ButtonName", value);
			}						
		}


		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public bool AllowMultiSelect
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowMultiSelect");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AllowMultiSelect", value);
			}						
		}


		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public LateBindingApi.Office.Enums.MsoFileDialogView InitialView
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "InitialView");
				return (LateBindingApi.Office.Enums.MsoFileDialogView)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "InitialView", value);
			}						
		}


		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public string InitialFileName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "InitialFileName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "InitialFileName", value);
			}						
		}


		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public LateBindingApi.Office.FileDialogSelectedItems SelectedItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SelectedItems");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.FileDialogSelectedItems newClass = new LateBindingApi.Office.FileDialogSelectedItems(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public LateBindingApi.Office.Enums.MsoFileDialogType DialogType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DialogType");
				return (LateBindingApi.Office.Enums.MsoFileDialogType)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public string Item
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Item");
				return (string)returnValue;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public Int32 Show()
		{
			object returnValue = Invoker.MethodReturn(this, "Show", null);
			return (Int32)returnValue;
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public void Execute()
		{
			Invoker.Method(this, "Execute", null);
		}

		#endregion

	}
}
