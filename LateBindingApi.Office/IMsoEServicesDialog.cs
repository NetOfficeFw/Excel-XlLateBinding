//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF10","OF11","OF12","OF14")]
	public class IMsoEServicesDialog : COMObject
	{
		#region Construction

		public IMsoEServicesDialog(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public IMsoEServicesDialog(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public IMsoEServicesDialog(COMObject replacedObject) : base(replacedObject)
		{
		}

		public IMsoEServicesDialog()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public string ApplicationName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ApplicationName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public COMObject Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public COMObject WebComponent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "WebComponent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public COMObject ClipArt
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ClipArt");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public void Close(bool applyWebComponentChanges)
		{
			object[] paramArray = new object[1];
			paramArray[0] = applyWebComponentChanges;
			Invoker.Method(this, "Close", paramArray);
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public void AddTrustedDomain(string domain)
		{
			object[] paramArray = new object[1];
			paramArray[0] = domain;
			Invoker.Method(this, "AddTrustedDomain", paramArray);
		}

		#endregion

	}
}
