//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF10","OF11","OF12","OF14","OF9")]
	public class HTMLProjectItem : _IMsoDispObj
	{
		#region Construction

		public HTMLProjectItem(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public HTMLProjectItem(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public HTMLProjectItem(COMObject replacedObject) : base(replacedObject)
		{
		}

		public HTMLProjectItem()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF10","OF11","OF12","OF14","OF9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14","OF9")]
		public bool IsOpen
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsOpen");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14","OF9")]
		public string Text
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Text");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Text", value);
			}						
		}


		[SupportByLibrary("OF10","OF11","OF12","OF14","OF9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("OF10","OF11","OF12","OF14","OF9")]
		public void LoadFromFile(string fileName)
		{
			object[] paramArray = new object[1];
			paramArray[0] = fileName;
			Invoker.Method(this, "LoadFromFile", paramArray);
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14","OF9")]
		public void Open(LateBindingApi.Office.Enums.MsoHTMLProjectOpen openKind)
		{
			object[] paramArray = new object[1];
			paramArray[0] = openKind;
			Invoker.Method(this, "Open", paramArray);
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14","OF9")]
		public void SaveCopyAs(string fileName)
		{
			object[] paramArray = new object[1];
			paramArray[0] = fileName;
			Invoker.Method(this, "SaveCopyAs", paramArray);
		}

		#endregion

	}
}
