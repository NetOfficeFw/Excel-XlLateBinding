//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF12","OF14")]
	public class SignatureSetup : _IMsoDispObj
	{
		#region Construction

		public SignatureSetup(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public SignatureSetup(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public SignatureSetup(COMObject replacedObject) : base(replacedObject)
		{
		}

		public SignatureSetup()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF12","OF14")]
		public bool ReadOnly
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ReadOnly");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string Id
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Id");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string SignatureProvider
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SignatureProvider");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string SuggestedSigner
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SuggestedSigner");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SuggestedSigner", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public string SuggestedSignerLine2
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SuggestedSignerLine2");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SuggestedSignerLine2", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public string SuggestedSignerEmail
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SuggestedSignerEmail");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SuggestedSignerEmail", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public string SigningInstructions
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SigningInstructions");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SigningInstructions", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool AllowComments
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowComments");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AllowComments", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public bool ShowSignDate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowSignDate");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowSignDate", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public string AdditionalXml
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AdditionalXml");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AdditionalXml", value);
			}						
		}


		#endregion

		#region Methods

		#endregion

	}
}
