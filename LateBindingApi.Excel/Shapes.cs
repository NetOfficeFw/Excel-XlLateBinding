//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
using System.Collections;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class Shapes : COMObject
	{
		#region Construction

		public Shapes(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Shapes(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Shapes(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Shapes()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Count
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Count");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public IEnumerator GetEnumerator()
		{
			object enumProxy = Invoker.PropertyGet(this, "_NewEnum");
			COMObject enumerator = new COMObject(this, enumProxy);
			Invoker.Method(enumerator, "Reset", null);
			bool isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
            while (true == isMoveNextTrue)
            {
                object itemProxy = Invoker.PropertyGet(enumerator, "Current", null);
				LateBindingApi.Excel.Shape returnClass = new LateBindingApi.Excel.Shape (this, itemProxy);
				isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
				yield return returnClass;
            }
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.ShapeRange get_Range(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "Range", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.ShapeRange newClass = new LateBindingApi.Excel.ShapeRange(this, returnValue);
			return newClass;
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape this[object index]
		{
			get
			{
				object[] paramArray = new object[1];
				paramArray[0] = index;		
				object returnValue = Invoker.MethodReturn(this, "Item", paramArray);
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape _Default(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "_Default", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddCallout(LateBindingApi.Office.Enums.MsoCalloutType type, Double left, Double top, Double width, Double height)
		{
			object[] paramArray = new object[5];
			paramArray[0] = type;
			paramArray[1] = left;
			paramArray[2] = top;
			paramArray[3] = width;
			paramArray[4] = height;
			object returnValue = Invoker.MethodReturn(this, "AddCallout", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddConnector(LateBindingApi.Office.Enums.MsoConnectorType type, Double beginX, Double beginY, Double endX, Double endY)
		{
			object[] paramArray = new object[5];
			paramArray[0] = type;
			paramArray[1] = beginX;
			paramArray[2] = beginY;
			paramArray[3] = endX;
			paramArray[4] = endY;
			object returnValue = Invoker.MethodReturn(this, "AddConnector", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddCurve(object safeArrayOfPoints)
		{
			object[] paramArray = new object[1];
			paramArray[0] = safeArrayOfPoints;
			object returnValue = Invoker.MethodReturn(this, "AddCurve", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddLabel(LateBindingApi.Office.Enums.MsoTextOrientation orientation, Double left, Double top, Double width, Double height)
		{
			object[] paramArray = new object[5];
			paramArray[0] = orientation;
			paramArray[1] = left;
			paramArray[2] = top;
			paramArray[3] = width;
			paramArray[4] = height;
			object returnValue = Invoker.MethodReturn(this, "AddLabel", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddLine(Double beginX, Double beginY, Double endX, Double endY)
		{
			object[] paramArray = new object[4];
			paramArray[0] = beginX;
			paramArray[1] = beginY;
			paramArray[2] = endX;
			paramArray[3] = endY;
			object returnValue = Invoker.MethodReturn(this, "AddLine", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddPicture(string filename, LateBindingApi.Office.Enums.MsoTriState linkToFile, LateBindingApi.Office.Enums.MsoTriState saveWithDocument, Double left, Double top, Double width, Double height)
		{
			object[] paramArray = new object[7];
			paramArray[0] = filename;
			paramArray[1] = linkToFile;
			paramArray[2] = saveWithDocument;
			paramArray[3] = left;
			paramArray[4] = top;
			paramArray[5] = width;
			paramArray[6] = height;
			object returnValue = Invoker.MethodReturn(this, "AddPicture", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddPolyline(object safeArrayOfPoints)
		{
			object[] paramArray = new object[1];
			paramArray[0] = safeArrayOfPoints;
			object returnValue = Invoker.MethodReturn(this, "AddPolyline", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddShape(LateBindingApi.Office.Enums.MsoAutoShapeType type, Double left, Double top, Double width, Double height)
		{
			object[] paramArray = new object[5];
			paramArray[0] = type;
			paramArray[1] = left;
			paramArray[2] = top;
			paramArray[3] = width;
			paramArray[4] = height;
			object returnValue = Invoker.MethodReturn(this, "AddShape", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddTextEffect(LateBindingApi.Office.Enums.MsoPresetTextEffect presetTextEffect, string text, string fontName, Double fontSize, LateBindingApi.Office.Enums.MsoTriState fontBold, LateBindingApi.Office.Enums.MsoTriState fontItalic, Double left, Double top)
		{
			object[] paramArray = new object[8];
			paramArray[0] = presetTextEffect;
			paramArray[1] = text;
			paramArray[2] = fontName;
			paramArray[3] = fontSize;
			paramArray[4] = fontBold;
			paramArray[5] = fontItalic;
			paramArray[6] = left;
			paramArray[7] = top;
			object returnValue = Invoker.MethodReturn(this, "AddTextEffect", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddTextbox(LateBindingApi.Office.Enums.MsoTextOrientation orientation, Double left, Double top, Double width, Double height)
		{
			object[] paramArray = new object[5];
			paramArray[0] = orientation;
			paramArray[1] = left;
			paramArray[2] = top;
			paramArray[3] = width;
			paramArray[4] = height;
			object returnValue = Invoker.MethodReturn(this, "AddTextbox", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.FreeformBuilder BuildFreeform(LateBindingApi.Office.Enums.MsoEditingType editingType, Double x1, Double y1)
		{
			object[] paramArray = new object[3];
			paramArray[0] = editingType;
			paramArray[1] = x1;
			paramArray[2] = y1;
			object returnValue = Invoker.MethodReturn(this, "BuildFreeform", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.FreeformBuilder newClass = new LateBindingApi.Excel.FreeformBuilder(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SelectAll()
		{
			Invoker.Method(this, "SelectAll", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddFormControl(LateBindingApi.Excel.Enums.XlFormControl type, Int32 left, Int32 top, Int32 width, Int32 height)
		{
			object[] paramArray = new object[5];
			paramArray[0] = type;
			paramArray[1] = left;
			paramArray[2] = top;
			paramArray[3] = width;
			paramArray[4] = height;
			object returnValue = Invoker.MethodReturn(this, "AddFormControl", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddOLEObject()
		{
			object returnValue = Invoker.MethodReturn(this, "AddOLEObject", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape AddOLEObject(object classType, object filename, object link, object displayAsIcon, object iconFileName, object iconIndex, object iconLabel, object left, object top, object width, object height)
		{
			object[] paramArray = new object[11];
			paramArray[0] = classType;
			paramArray[1] = filename;
			paramArray[2] = link;
			paramArray[3] = displayAsIcon;
			paramArray[4] = iconFileName;
			paramArray[5] = iconIndex;
			paramArray[6] = iconLabel;
			paramArray[7] = left;
			paramArray[8] = top;
			paramArray[9] = width;
			paramArray[10] = height;
			object returnValue = Invoker.MethodReturn(this, "AddOLEObject", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Shape AddDiagram(LateBindingApi.Office.Enums.MsoDiagramType type, Double left, Double top, Double width, Double height)
		{
			object[] paramArray = new object[5];
			paramArray[0] = type;
			paramArray[1] = left;
			paramArray[2] = top;
			paramArray[3] = width;
			paramArray[4] = height;
			object returnValue = Invoker.MethodReturn(this, "AddDiagram", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Shape AddCanvas(Double left, Double top, Double width, Double height)
		{
			object[] paramArray = new object[4];
			paramArray[0] = left;
			paramArray[1] = top;
			paramArray[2] = width;
			paramArray[3] = height;
			object returnValue = Invoker.MethodReturn(this, "AddCanvas", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Shape AddChart()
		{
			object returnValue = Invoker.MethodReturn(this, "AddChart", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Shape AddChart(object xlChartType, object left, object top, object width, object height)
		{
			object[] paramArray = new object[5];
			paramArray[0] = xlChartType;
			paramArray[1] = left;
			paramArray[2] = top;
			paramArray[3] = width;
			paramArray[4] = height;
			object returnValue = Invoker.MethodReturn(this, "AddChart", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Shape AddSmartArt(LateBindingApi.Office.SmartArtLayout layout)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(layout,0);
			object returnValue = Invoker.MethodReturn(this, "AddSmartArt", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Shape AddSmartArt(LateBindingApi.Office.SmartArtLayout layout, object left, object top, object width, object height)
		{
			object[] paramArray = new object[5];
			paramArray.SetValue(layout,0);
			paramArray[1] = left;
			paramArray[2] = top;
			paramArray[3] = width;
			paramArray[4] = height;
			object returnValue = Invoker.MethodReturn(this, "AddSmartArt", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		#endregion

	}
}
