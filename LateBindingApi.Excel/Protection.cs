//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14")]
	public class Protection : COMObject
	{
		#region Construction

		public Protection(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Protection(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Protection(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Protection()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowFormattingCells
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowFormattingCells");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowFormattingColumns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowFormattingColumns");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowFormattingRows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowFormattingRows");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowInsertingColumns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowInsertingColumns");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowInsertingRows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowInsertingRows");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowInsertingHyperlinks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowInsertingHyperlinks");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowDeletingColumns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowDeletingColumns");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowDeletingRows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowDeletingRows");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowSorting
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowSorting");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowFiltering
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowFiltering");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AllowUsingPivotTables
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowUsingPivotTables");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.AllowEditRanges AllowEditRanges
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowEditRanges");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AllowEditRanges newClass = new LateBindingApi.Excel.AllowEditRanges(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		#endregion

	}
}
