//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class PictureFormat : LateBindingApi.Office._IMsoDispObj
	{
		#region Construction

		public PictureFormat(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public PictureFormat(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public PictureFormat(COMObject replacedObject) : base(replacedObject)
		{
		}

		public PictureFormat()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Brightness
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Brightness");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Brightness", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoPictureColorType ColorType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ColorType");
				return (LateBindingApi.Office.Enums.MsoPictureColorType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ColorType", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Contrast
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Contrast");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Contrast", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double CropBottom
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CropBottom");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CropBottom", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double CropLeft
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CropLeft");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CropLeft", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double CropRight
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CropRight");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CropRight", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double CropTop
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CropTop");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CropTop", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 TransparencyColor
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TransparencyColor");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TransparencyColor", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoTriState TransparentBackground
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TransparentBackground");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TransparentBackground", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Office.Crop Crop
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Crop");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.Crop newClass = new LateBindingApi.Office.Crop(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void IncrementBrightness(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "IncrementBrightness", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void IncrementContrast(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "IncrementContrast", paramArray);
		}

		#endregion

	}
}
