//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class DialogSheet : COMObject
	{
		#region Construction

		public DialogSheet(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public DialogSheet(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public DialogSheet(COMObject replacedObject) : base(replacedObject)
		{
		}

		public DialogSheet()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string CodeName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CodeName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string _CodeName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_CodeName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "_CodeName", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Index
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Index");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Next
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Next");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnDoubleClick
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnDoubleClick");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnDoubleClick", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnSheetActivate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnSheetActivate");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnSheetActivate", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnSheetDeactivate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnSheetDeactivate");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnSheetDeactivate", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.PageSetup PageSetup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PageSetup");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PageSetup newClass = new LateBindingApi.Excel.PageSetup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Previous
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Previous");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ProtectContents
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectContents");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ProtectDrawingObjects
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectDrawingObjects");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ProtectionMode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectionMode");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ProtectScenarios
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectScenarios");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlSheetVisibility Visible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Visible");
				return (LateBindingApi.Excel.Enums.XlSheetVisibility)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Visible", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shapes Shapes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Shapes");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Shapes newClass = new LateBindingApi.Excel.Shapes(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableCalculation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableCalculation");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableCalculation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayAutomaticPageBreaks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayAutomaticPageBreaks");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayAutomaticPageBreaks", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableAutoFilter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableAutoFilter");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableAutoFilter", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlEnableSelection EnableSelection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableSelection");
				return (LateBindingApi.Excel.Enums.XlEnableSelection)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableSelection", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableOutlining
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableOutlining");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableOutlining", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnablePivotTable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnablePivotTable");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnablePivotTable", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Names Names
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Names");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Names newClass = new LateBindingApi.Excel.Names(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string ScrollArea
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ScrollArea");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ScrollArea", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.HPageBreaks HPageBreaks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HPageBreaks");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.HPageBreaks newClass = new LateBindingApi.Excel.HPageBreaks(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.VPageBreaks VPageBreaks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VPageBreaks");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.VPageBreaks newClass = new LateBindingApi.Excel.VPageBreaks(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.QueryTables QueryTables
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "QueryTables");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.QueryTables newClass = new LateBindingApi.Excel.QueryTables(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayPageBreaks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayPageBreaks");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayPageBreaks", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Comments Comments
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Comments");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Comments newClass = new LateBindingApi.Excel.Comments(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Hyperlinks Hyperlinks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Hyperlinks");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Hyperlinks newClass = new LateBindingApi.Excel.Hyperlinks(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 _DisplayRightToLeft
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_DisplayRightToLeft");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "_DisplayRightToLeft", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.AutoFilter AutoFilter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoFilter");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AutoFilter newClass = new LateBindingApi.Excel.AutoFilter(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayRightToLeft
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayRightToLeft");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayRightToLeft", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Scripts Scripts
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Scripts");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.Scripts newClass = new LateBindingApi.Office.Scripts(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant DefaultButton
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DefaultButton");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "DefaultButton", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.DialogFrame DialogFrame
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DialogFrame");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.DialogFrame newClass = new LateBindingApi.Excel.DialogFrame(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Focus
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Focus");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "Focus", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Tab Tab
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Tab");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Tab newClass = new LateBindingApi.Excel.Tab(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Office.MsoEnvelope MailEnvelope
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MailEnvelope");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.MsoEnvelope newClass = new LateBindingApi.Office.MsoEnvelope(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.CustomProperties CustomProperties
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CustomProperties");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.CustomProperties newClass = new LateBindingApi.Excel.CustomProperties(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.SmartTags SmartTags
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SmartTags");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.SmartTags newClass = new LateBindingApi.Excel.SmartTags(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Protection Protection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Protection");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Protection newClass = new LateBindingApi.Excel.Protection(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool EnableFormatConditionsCalculation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableFormatConditionsCalculation");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableFormatConditionsCalculation", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Sort Sort
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Sort");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sort newClass = new LateBindingApi.Excel.Sort(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public Int32 PrintedCommentPages
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PrintedCommentPages");
				return (Int32)returnValue;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Activate()
		{
			Invoker.Method(this, "Activate", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Copy()
		{
			Invoker.Method(this, "Copy", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Copy(object before, object after)
		{
			object[] paramArray = new object[2];
			paramArray[0] = before;
			paramArray[1] = after;
			Invoker.Method(this, "Copy", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Move()
		{
			Invoker.Method(this, "Move", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Move(object before, object after)
		{
			object[] paramArray = new object[2];
			paramArray[0] = before;
			paramArray[1] = after;
			Invoker.Method(this, "Move", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _PrintOut()
		{
			Invoker.Method(this, "_PrintOut", null);
		}

		[SupportByLibrary("XL10","XL11","XL9")]
		public void _PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate)
		{
			object[] paramArray = new object[7];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			Invoker.Method(this, "_PrintOut", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void _PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName)
		{
			object[] paramArray = new object[8];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			paramArray[7] = prToFileName;
			Invoker.Method(this, "_PrintOut", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PrintPreview()
		{
			Invoker.Method(this, "PrintPreview", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PrintPreview(object enableChanges)
		{
			object[] paramArray = new object[1];
			paramArray[0] = enableChanges;
			Invoker.Method(this, "PrintPreview", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Protect()
		{
			Invoker.Method(this, "Protect", null);
		}

		[SupportByLibrary("XL9")]
		public void Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly)
		{
			object[] paramArray = new object[5];
			paramArray[0] = password;
			paramArray[1] = drawingObjects;
			paramArray[2] = contents;
			paramArray[3] = scenarios;
			paramArray[4] = userInterfaceOnly;
			Invoker.Method(this, "Protect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly, object allowFormattingCells, object allowFormattingColumns, object allowFormattingRows, object allowInsertingColumns, object allowInsertingRows, object allowInsertingHyperlinks, object allowDeletingColumns, object allowDeletingRows, object allowSorting, object allowFiltering, object allowUsingPivotTables)
		{
			object[] paramArray = new object[16];
			paramArray[0] = password;
			paramArray[1] = drawingObjects;
			paramArray[2] = contents;
			paramArray[3] = scenarios;
			paramArray[4] = userInterfaceOnly;
			paramArray[5] = allowFormattingCells;
			paramArray[6] = allowFormattingColumns;
			paramArray[7] = allowFormattingRows;
			paramArray[8] = allowInsertingColumns;
			paramArray[9] = allowInsertingRows;
			paramArray[10] = allowInsertingHyperlinks;
			paramArray[11] = allowDeletingColumns;
			paramArray[12] = allowDeletingRows;
			paramArray[13] = allowSorting;
			paramArray[14] = allowFiltering;
			paramArray[15] = allowUsingPivotTables;
			Invoker.Method(this, "Protect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SaveAs(string filename)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filename;
			Invoker.Method(this, "SaveAs", paramArray);
		}

		[SupportByLibrary("XL9")]
		public void SaveAs(string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout)
		{
			object[] paramArray = new object[9];
			paramArray[0] = filename;
			paramArray[1] = fileFormat;
			paramArray[2] = password;
			paramArray[3] = writeResPassword;
			paramArray[4] = readOnlyRecommended;
			paramArray[5] = createBackup;
			paramArray[6] = addToMru;
			paramArray[7] = textCodepage;
			paramArray[8] = textVisualLayout;
			Invoker.Method(this, "SaveAs", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void SaveAs(string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout, object local)
		{
			object[] paramArray = new object[10];
			paramArray[0] = filename;
			paramArray[1] = fileFormat;
			paramArray[2] = password;
			paramArray[3] = writeResPassword;
			paramArray[4] = readOnlyRecommended;
			paramArray[5] = createBackup;
			paramArray[6] = addToMru;
			paramArray[7] = textCodepage;
			paramArray[8] = textVisualLayout;
			paramArray[9] = local;
			Invoker.Method(this, "SaveAs", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Select()
		{
			Invoker.Method(this, "Select", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Select(object replace)
		{
			object[] paramArray = new object[1];
			paramArray[0] = replace;
			Invoker.Method(this, "Select", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Unprotect()
		{
			Invoker.Method(this, "Unprotect", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Unprotect(object password)
		{
			object[] paramArray = new object[1];
			paramArray[0] = password;
			Invoker.Method(this, "Unprotect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy29()
		{
			Invoker.Method(this, "_Dummy29", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Arcs()
		{
			object returnValue = Invoker.MethodReturn(this, "Arcs", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Arcs(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Arcs", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy31()
		{
			Invoker.Method(this, "_Dummy31", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy32()
		{
			Invoker.Method(this, "_Dummy32", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Buttons()
		{
			object returnValue = Invoker.MethodReturn(this, "Buttons", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Buttons(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Buttons", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy34()
		{
			Invoker.Method(this, "_Dummy34", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy36()
		{
			Invoker.Method(this, "_Dummy36", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ChartObjects()
		{
			object returnValue = Invoker.MethodReturn(this, "ChartObjects", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ChartObjects(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "ChartObjects", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject CheckBoxes()
		{
			object returnValue = Invoker.MethodReturn(this, "CheckBoxes", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject CheckBoxes(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "CheckBoxes", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void CheckSpelling()
		{
			Invoker.Method(this, "CheckSpelling", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void CheckSpelling(object customDictionary, object ignoreUppercase, object alwaysSuggest, object spellLang)
		{
			object[] paramArray = new object[4];
			paramArray[0] = customDictionary;
			paramArray[1] = ignoreUppercase;
			paramArray[2] = alwaysSuggest;
			paramArray[3] = spellLang;
			Invoker.Method(this, "CheckSpelling", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy40()
		{
			Invoker.Method(this, "_Dummy40", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy41()
		{
			Invoker.Method(this, "_Dummy41", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy42()
		{
			Invoker.Method(this, "_Dummy42", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy43()
		{
			Invoker.Method(this, "_Dummy43", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy44()
		{
			Invoker.Method(this, "_Dummy44", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy45()
		{
			Invoker.Method(this, "_Dummy45", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Drawings()
		{
			object returnValue = Invoker.MethodReturn(this, "Drawings", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Drawings(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Drawings", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject DrawingObjects()
		{
			object returnValue = Invoker.MethodReturn(this, "DrawingObjects", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject DrawingObjects(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "DrawingObjects", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject DropDowns()
		{
			object returnValue = Invoker.MethodReturn(this, "DropDowns", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject DropDowns(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "DropDowns", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Evaluate(object name)
		{
			object[] paramArray = new object[1];
			paramArray[0] = name;
			object returnValue = Invoker.MethodReturn(this, "Evaluate", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _Evaluate(object name)
		{
			object[] paramArray = new object[1];
			paramArray[0] = name;
			object returnValue = Invoker.MethodReturn(this, "_Evaluate", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy56()
		{
			Invoker.Method(this, "_Dummy56", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ResetAllPageBreaks()
		{
			Invoker.Method(this, "ResetAllPageBreaks", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject GroupBoxes()
		{
			object returnValue = Invoker.MethodReturn(this, "GroupBoxes", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject GroupBoxes(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "GroupBoxes", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject GroupObjects()
		{
			object returnValue = Invoker.MethodReturn(this, "GroupObjects", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject GroupObjects(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "GroupObjects", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Labels()
		{
			object returnValue = Invoker.MethodReturn(this, "Labels", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Labels(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Labels", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Lines()
		{
			object returnValue = Invoker.MethodReturn(this, "Lines", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Lines(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Lines", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ListBoxes()
		{
			object returnValue = Invoker.MethodReturn(this, "ListBoxes", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ListBoxes(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "ListBoxes", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject OLEObjects()
		{
			object returnValue = Invoker.MethodReturn(this, "OLEObjects", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject OLEObjects(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "OLEObjects", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy65()
		{
			Invoker.Method(this, "_Dummy65", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy66()
		{
			Invoker.Method(this, "_Dummy66", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy67()
		{
			Invoker.Method(this, "_Dummy67", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject OptionButtons()
		{
			object returnValue = Invoker.MethodReturn(this, "OptionButtons", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject OptionButtons(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "OptionButtons", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy69()
		{
			Invoker.Method(this, "_Dummy69", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Ovals()
		{
			object returnValue = Invoker.MethodReturn(this, "Ovals", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Ovals(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Ovals", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Paste()
		{
			Invoker.Method(this, "Paste", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Paste(object destination, object link)
		{
			object[] paramArray = new object[2];
			paramArray[0] = destination;
			paramArray[1] = link;
			Invoker.Method(this, "Paste", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PasteSpecial()
		{
			Invoker.Method(this, "PasteSpecial", null);
		}

		[SupportByLibrary("XL9")]
		public void PasteSpecial(object format, object link, object displayAsIcon, object iconFileName, object iconIndex, object iconLabel)
		{
			object[] paramArray = new object[6];
			paramArray[0] = format;
			paramArray[1] = link;
			paramArray[2] = displayAsIcon;
			paramArray[3] = iconFileName;
			paramArray[4] = iconIndex;
			paramArray[5] = iconLabel;
			Invoker.Method(this, "PasteSpecial", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void PasteSpecial(object format, object link, object displayAsIcon, object iconFileName, object iconIndex, object iconLabel, object noHTMLFormatting)
		{
			object[] paramArray = new object[7];
			paramArray[0] = format;
			paramArray[1] = link;
			paramArray[2] = displayAsIcon;
			paramArray[3] = iconFileName;
			paramArray[4] = iconIndex;
			paramArray[5] = iconLabel;
			paramArray[6] = noHTMLFormatting;
			Invoker.Method(this, "PasteSpecial", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Pictures()
		{
			object returnValue = Invoker.MethodReturn(this, "Pictures", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Pictures(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Pictures", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy74()
		{
			Invoker.Method(this, "_Dummy74", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy75()
		{
			Invoker.Method(this, "_Dummy75", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy76()
		{
			Invoker.Method(this, "_Dummy76", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Rectangles()
		{
			object returnValue = Invoker.MethodReturn(this, "Rectangles", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Rectangles(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Rectangles", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy78()
		{
			Invoker.Method(this, "_Dummy78", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy79()
		{
			Invoker.Method(this, "_Dummy79", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ScrollBars()
		{
			object returnValue = Invoker.MethodReturn(this, "ScrollBars", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ScrollBars(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "ScrollBars", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy82()
		{
			Invoker.Method(this, "_Dummy82", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy83()
		{
			Invoker.Method(this, "_Dummy83", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Spinners()
		{
			object returnValue = Invoker.MethodReturn(this, "Spinners", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Spinners(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "Spinners", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy85()
		{
			Invoker.Method(this, "_Dummy85", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy86()
		{
			Invoker.Method(this, "_Dummy86", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject TextBoxes()
		{
			object returnValue = Invoker.MethodReturn(this, "TextBoxes", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject TextBoxes(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "TextBoxes", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy88()
		{
			Invoker.Method(this, "_Dummy88", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy89()
		{
			Invoker.Method(this, "_Dummy89", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy90()
		{
			Invoker.Method(this, "_Dummy90", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ClearCircles()
		{
			Invoker.Method(this, "ClearCircles", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void CircleInvalid()
		{
			Invoker.Method(this, "CircleInvalid", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PrintOut()
		{
			Invoker.Method(this, "PrintOut", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName)
		{
			object[] paramArray = new object[8];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			paramArray[7] = prToFileName;
			Invoker.Method(this, "PrintOut", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _CheckSpelling()
		{
			Invoker.Method(this, "_CheckSpelling", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _CheckSpelling(object customDictionary, object ignoreUppercase, object alwaysSuggest, object spellLang, object ignoreFinalYaa, object spellScript)
		{
			object[] paramArray = new object[6];
			paramArray[0] = customDictionary;
			paramArray[1] = ignoreUppercase;
			paramArray[2] = alwaysSuggest;
			paramArray[3] = spellLang;
			paramArray[4] = ignoreFinalYaa;
			paramArray[5] = spellScript;
			Invoker.Method(this, "_CheckSpelling", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject EditBoxes()
		{
			object returnValue = Invoker.MethodReturn(this, "EditBoxes", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject EditBoxes(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "EditBoxes", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Hide()
		{
			object returnValue = Invoker.MethodReturn(this, "Hide", null);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Hide(object cancel)
		{
			object[] paramArray = new object[1];
			paramArray[0] = cancel;
			object returnValue = Invoker.MethodReturn(this, "Hide", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Show()
		{
			object returnValue = Invoker.MethodReturn(this, "Show", null);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _Protect()
		{
			Invoker.Method(this, "_Protect", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly)
		{
			object[] paramArray = new object[5];
			paramArray[0] = password;
			paramArray[1] = drawingObjects;
			paramArray[2] = contents;
			paramArray[3] = scenarios;
			paramArray[4] = userInterfaceOnly;
			Invoker.Method(this, "_Protect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _SaveAs(string filename)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filename;
			Invoker.Method(this, "_SaveAs", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _SaveAs(string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout)
		{
			object[] paramArray = new object[9];
			paramArray[0] = filename;
			paramArray[1] = fileFormat;
			paramArray[2] = password;
			paramArray[3] = writeResPassword;
			paramArray[4] = readOnlyRecommended;
			paramArray[5] = createBackup;
			paramArray[6] = addToMru;
			paramArray[7] = textCodepage;
			paramArray[8] = textVisualLayout;
			Invoker.Method(this, "_SaveAs", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _PasteSpecial()
		{
			Invoker.Method(this, "_PasteSpecial", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _PasteSpecial(object format, object link, object displayAsIcon, object iconFileName, object iconIndex, object iconLabel)
		{
			object[] paramArray = new object[6];
			paramArray[0] = format;
			paramArray[1] = link;
			paramArray[2] = displayAsIcon;
			paramArray[3] = iconFileName;
			paramArray[4] = iconIndex;
			paramArray[5] = iconLabel;
			Invoker.Method(this, "_PasteSpecial", paramArray);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void _Dummy113()
		{
			Invoker.Method(this, "_Dummy113", null);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void _Dummy114()
		{
			Invoker.Method(this, "_Dummy114", null);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void _Dummy115()
		{
			Invoker.Method(this, "_Dummy115", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void __PrintOut()
		{
			Invoker.Method(this, "__PrintOut", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void __PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate)
		{
			object[] paramArray = new object[7];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			Invoker.Method(this, "__PrintOut", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ExportAsFixedFormat(LateBindingApi.Excel.Enums.XlFixedFormatType type)
		{
			object[] paramArray = new object[1];
			paramArray[0] = type;
			Invoker.Method(this, "ExportAsFixedFormat", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ExportAsFixedFormat(LateBindingApi.Excel.Enums.XlFixedFormatType type, object filename, object quality, object includeDocProperties, object ignorePrintAreas, object from, object to, object openAfterPublish, object fixedFormatExtClassPtr)
		{
			object[] paramArray = new object[9];
			paramArray[0] = type;
			paramArray[1] = filename;
			paramArray[2] = quality;
			paramArray[3] = includeDocProperties;
			paramArray[4] = ignorePrintAreas;
			paramArray[5] = from;
			paramArray[6] = to;
			paramArray[7] = openAfterPublish;
			paramArray[8] = fixedFormatExtClassPtr;
			Invoker.Method(this, "ExportAsFixedFormat", paramArray);
		}

		#endregion

	}
}
