//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14")]
	public class Speech : COMObject
	{
		#region Construction

		public Speech(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Speech(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Speech(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Speech()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlSpeakDirection Direction
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Direction");
				return (LateBindingApi.Excel.Enums.XlSpeakDirection)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Direction", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool SpeakCellOnEnter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SpeakCellOnEnter");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SpeakCellOnEnter", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void Speak(string text)
		{
			object[] paramArray = new object[1];
			paramArray[0] = text;
			Invoker.Method(this, "Speak", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void Speak(string text, object speakAsync, object speakXML, object purge)
		{
			object[] paramArray = new object[4];
			paramArray[0] = text;
			paramArray[1] = speakAsync;
			paramArray[2] = speakXML;
			paramArray[3] = purge;
			Invoker.Method(this, "Speak", paramArray);
		}

		#endregion

	}
}
