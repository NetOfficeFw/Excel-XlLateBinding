//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
using System.Collections;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL14")]
	public class SparklineGroup : COMObject
	{
		#region Construction

		public SparklineGroup(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public SparklineGroup(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public SparklineGroup(COMObject replacedObject) : base(replacedObject)
		{
		}

		public SparklineGroup()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL14")]
		public Int32 Count
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Count");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Sparkline this[object index]
		{
			get
			{
				object[] paramArray = new object[1];
				paramArray[0] = index;		
				object returnValue = Invoker.PropertyGet(this, "Item", paramArray);
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sparkline newClass = new LateBindingApi.Excel.Sparkline(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public IEnumerator GetEnumerator()
		{
			object enumProxy = Invoker.PropertyGet(this, "_NewEnum");
			COMObject enumerator = new COMObject(this, enumProxy);
			Invoker.Method(enumerator, "Reset", null);
			bool isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
            while (true == isMoveNextTrue)
            {
                object itemProxy = Invoker.PropertyGet(enumerator, "Current", null);
				LateBindingApi.Excel.Sparkline returnClass = new LateBindingApi.Excel.Sparkline (this, itemProxy);
				isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
				yield return returnClass;
            }
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Range Location
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Location");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
			set
			{
				Invoker.PropertySet(this, "Location", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public string SourceData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SourceData");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SourceData", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public string DateRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DateRange");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DateRange", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlSparkType Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (LateBindingApi.Excel.Enums.XlSparkType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Type", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.FormatColor SeriesColor
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SeriesColor");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.FormatColor newClass = new LateBindingApi.Excel.FormatColor(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.SparkPoints Points
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Points");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.SparkPoints newClass = new LateBindingApi.Excel.SparkPoints(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.SparkAxes Axes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Axes");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.SparkAxes newClass = new LateBindingApi.Excel.SparkAxes(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlDisplayBlanksAs DisplayBlanksAs
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayBlanksAs");
				return (LateBindingApi.Excel.Enums.XlDisplayBlanksAs)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayBlanksAs", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool DisplayHidden
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayHidden");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayHidden", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public COMVariant LineWeight
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LineWeight");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "LineWeight", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlSparklineRowCol PlotBy
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PlotBy");
				return (LateBindingApi.Excel.Enums.XlSparklineRowCol)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PlotBy", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL14")]
		public void ModifyLocation(LateBindingApi.Excel.Range location)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(location,0);
			Invoker.Method(this, "ModifyLocation", paramArray);
		}

		[SupportByLibrary("XL14")]
		public void ModifySourceData(string sourceData)
		{
			object[] paramArray = new object[1];
			paramArray[0] = sourceData;
			Invoker.Method(this, "ModifySourceData", paramArray);
		}

		[SupportByLibrary("XL14")]
		public void Modify(LateBindingApi.Excel.Range location, string sourceData)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(location,0);
			paramArray[1] = sourceData;
			Invoker.Method(this, "Modify", paramArray);
		}

		[SupportByLibrary("XL14")]
		public void ModifyDateRange(string dateRange)
		{
			object[] paramArray = new object[1];
			paramArray[0] = dateRange;
			Invoker.Method(this, "ModifyDateRange", paramArray);
		}

		[SupportByLibrary("XL14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		#endregion

	}
}
