//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class PivotField : COMObject
	{
		#region Construction

		public PivotField(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public PivotField(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public PivotField(COMObject replacedObject) : base(replacedObject)
		{
		}

		public PivotField()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlPivotFieldCalculation Calculation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Calculation");
				return (LateBindingApi.Excel.Enums.XlPivotFieldCalculation)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Calculation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.PivotField ChildField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChildField");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotField newClass = new LateBindingApi.Excel.PivotField(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ChildItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChildItems", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_ChildItems(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "ChildItems", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant CurrentPage
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CurrentPage");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "CurrentPage", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range DataRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlPivotFieldDataType DataType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataType");
				return (LateBindingApi.Excel.Enums.XlPivotFieldDataType)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string _Default
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_Default");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "_Default", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlConsolidationFunction Function
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Function");
				return (LateBindingApi.Excel.Enums.XlConsolidationFunction)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Function", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant GroupLevel
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GroupLevel");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant HiddenItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HiddenItems", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_HiddenItems(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "HiddenItems", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range LabelRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LabelRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string NumberFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "NumberFormat");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "NumberFormat", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlPivotFieldOrientation Orientation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Orientation");
				return (LateBindingApi.Excel.Enums.XlPivotFieldOrientation)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Orientation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ShowAllItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowAllItems");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowAllItems", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.PivotField ParentField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ParentField");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotField newClass = new LateBindingApi.Excel.PivotField(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ParentItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ParentItems", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_ParentItems(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "ParentItems", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Position
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Position");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "Position", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string SourceName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SourceName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Subtotals
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Subtotals", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "Subtotals", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_Subtotals(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
				object returnValue = Invoker.PropertyGet(this, "Subtotals", paramArray);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
		}
		
		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void set_Subtotals(object index, object value)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			Invoker.PropertySet(this, "Subtotals", paramArray, value);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant BaseField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BaseField");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "BaseField", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant BaseItem
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BaseItem");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "BaseItem", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant TotalLevels
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TotalLevels");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Value
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Value");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Value", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant VisibleItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VisibleItems", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_VisibleItems(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "VisibleItems", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToColumn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToColumn");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToColumn", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToHide
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToHide");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToHide", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToPage
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToPage");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToPage", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToRow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToRow");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToRow", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToData");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToData", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Formula
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Formula");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Formula", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool IsCalculated
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsCalculated");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 MemoryUsed
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MemoryUsed");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ServerBased
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ServerBased");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ServerBased", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 AutoSortOrder
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoSortOrder");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string AutoSortField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoSortField");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 AutoShowType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoShowType");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 AutoShowRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoShowRange");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 AutoShowCount
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoShowCount");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string AutoShowField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoShowField");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool LayoutBlankLine
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LayoutBlankLine");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LayoutBlankLine", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlSubtototalLocationType LayoutSubtotalLocation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LayoutSubtotalLocation");
				return (LateBindingApi.Excel.Enums.XlSubtototalLocationType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LayoutSubtotalLocation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool LayoutPageBreak
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LayoutPageBreak");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LayoutPageBreak", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlLayoutFormType LayoutForm
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LayoutForm");
				return (LateBindingApi.Excel.Enums.XlLayoutFormType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LayoutForm", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string SubtotalName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SubtotalName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SubtotalName", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Caption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Caption");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Caption", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DrilledDown
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DrilledDown");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DrilledDown", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.CubeField CubeField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CubeField");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.CubeField newClass = new LateBindingApi.Excel.CubeField(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string CurrentPageName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CurrentPageName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CurrentPageName", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public string StandardFormula
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "StandardFormula");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "StandardFormula", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public COMVariant HiddenItemsList
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HiddenItemsList");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "HiddenItemsList", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool DatabaseSort
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DatabaseSort");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DatabaseSort", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool IsMemberProperty
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsMemberProperty");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotField PropertyParentField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PropertyParentField");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotField newClass = new LateBindingApi.Excel.PivotField(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public Int32 PropertyOrder
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PropertyOrder");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PropertyOrder", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool EnableItemSelection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableItemSelection");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableItemSelection", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public COMVariant CurrentPageList
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CurrentPageList");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "CurrentPageList", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool Hidden
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Hidden");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Hidden", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool UseMemberPropertyAsCaption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UseMemberPropertyAsCaption");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "UseMemberPropertyAsCaption", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public string MemberPropertyCaption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MemberPropertyCaption");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MemberPropertyCaption", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DisplayAsTooltip
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayAsTooltip");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayAsTooltip", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DisplayInReport
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayInReport");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayInReport", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DisplayAsCaption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayAsCaption");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool LayoutCompactRow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LayoutCompactRow");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LayoutCompactRow", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool IncludeNewItemsInFilter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IncludeNewItemsInFilter");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "IncludeNewItemsInFilter", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public COMVariant VisibleItemsList
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VisibleItemsList");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "VisibleItemsList", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.PivotFilters PivotFilters
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotFilters");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotFilters newClass = new LateBindingApi.Excel.PivotFilters(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.PivotLine AutoSortPivotLine
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoSortPivotLine");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotLine newClass = new LateBindingApi.Excel.PivotLine(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public Int32 AutoSortCustomSubtotal
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoSortCustomSubtotal");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool ShowingInAxis
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowingInAxis");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool EnableMultiplePageItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableMultiplePageItems");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableMultiplePageItems", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool AllItemsVisible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllItemsVisible");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public string SourceCaption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SourceCaption");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool ShowDetail
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowDetail");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowDetail", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool RepeatLabels
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RepeatLabels");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "RepeatLabels", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant PivotItems()
		{
			object returnValue = Invoker.MethodReturn(this, "PivotItems", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant PivotItems(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "PivotItems", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.CalculatedItems CalculatedItems()
		{
			object returnValue = Invoker.MethodReturn(this, "CalculatedItems", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.CalculatedItems newClass = new LateBindingApi.Excel.CalculatedItems(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void AutoSort(Int32 order, string field)
		{
			object[] paramArray = new object[2];
			paramArray[0] = order;
			paramArray[1] = field;
			Invoker.Method(this, "AutoSort", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void AutoSort(Int32 order, string field, object pivotLine, object customSubtotal)
		{
			object[] paramArray = new object[4];
			paramArray[0] = order;
			paramArray[1] = field;
			paramArray[2] = pivotLine;
			paramArray[3] = customSubtotal;
			Invoker.Method(this, "AutoSort", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void AutoShow(Int32 type, Int32 range, Int32 count, string field)
		{
			object[] paramArray = new object[4];
			paramArray[0] = type;
			paramArray[1] = range;
			paramArray[2] = count;
			paramArray[3] = field;
			Invoker.Method(this, "AutoShow", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void AddPageItem(string item)
		{
			object[] paramArray = new object[1];
			paramArray[0] = item;
			Invoker.Method(this, "AddPageItem", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void AddPageItem(string item, object clearList)
		{
			object[] paramArray = new object[2];
			paramArray[0] = item;
			paramArray[1] = clearList;
			Invoker.Method(this, "AddPageItem", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void _AutoSort(Int32 order, string field)
		{
			object[] paramArray = new object[2];
			paramArray[0] = order;
			paramArray[1] = field;
			Invoker.Method(this, "_AutoSort", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void DrillTo(string field)
		{
			object[] paramArray = new object[1];
			paramArray[0] = field;
			Invoker.Method(this, "DrillTo", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ClearManualFilter()
		{
			Invoker.Method(this, "ClearManualFilter", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ClearAllFilters()
		{
			Invoker.Method(this, "ClearAllFilters", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ClearValueFilters()
		{
			Invoker.Method(this, "ClearValueFilters", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ClearLabelFilters()
		{
			Invoker.Method(this, "ClearLabelFilters", null);
		}

		#endregion

	}
}
