//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL11","XL12","XL14")]
	public class XmlMap : COMObject
	{
		#region Construction

		public XmlMap(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public XmlMap(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public XmlMap(COMObject replacedObject) : base(replacedObject)
		{
		}

		public XmlMap()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public string _Default
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_Default");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public bool IsExportable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsExportable");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public bool ShowImportExportValidationErrors
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowImportExportValidationErrors");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowImportExportValidationErrors", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public bool SaveDataSourceDefinition
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SaveDataSourceDefinition");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SaveDataSourceDefinition", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public bool AdjustColumnWidth
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AdjustColumnWidth");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AdjustColumnWidth", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public bool PreserveColumnFilter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PreserveColumnFilter");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PreserveColumnFilter", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public bool PreserveNumberFormatting
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PreserveNumberFormatting");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PreserveNumberFormatting", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public bool AppendOnImport
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AppendOnImport");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AppendOnImport", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public string RootElementName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RootElementName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.XmlNamespace RootElementNamespace
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RootElementNamespace");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.XmlNamespace newClass = new LateBindingApi.Excel.XmlNamespace(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.XmlSchemas Schemas
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Schemas");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.XmlSchemas newClass = new LateBindingApi.Excel.XmlSchemas(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.XmlDataBinding DataBinding
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataBinding");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.XmlDataBinding newClass = new LateBindingApi.Excel.XmlDataBinding(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.WorkbookConnection WorkbookConnection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "WorkbookConnection");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.WorkbookConnection newClass = new LateBindingApi.Excel.WorkbookConnection(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL11","XL12","XL14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlXmlImportResult Import(string url)
		{
			object[] paramArray = new object[1];
			paramArray[0] = url;
			object returnValue = Invoker.MethodReturn(this, "Import", paramArray);
			return (LateBindingApi.Excel.Enums.XlXmlImportResult)returnValue;
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlXmlImportResult Import(string url, object overwrite)
		{
			object[] paramArray = new object[2];
			paramArray[0] = url;
			paramArray[1] = overwrite;
			object returnValue = Invoker.MethodReturn(this, "Import", paramArray);
			return (LateBindingApi.Excel.Enums.XlXmlImportResult)returnValue;
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlXmlImportResult ImportXml(string xmlData)
		{
			object[] paramArray = new object[1];
			paramArray[0] = xmlData;
			object returnValue = Invoker.MethodReturn(this, "ImportXml", paramArray);
			return (LateBindingApi.Excel.Enums.XlXmlImportResult)returnValue;
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlXmlImportResult ImportXml(string xmlData, object overwrite)
		{
			object[] paramArray = new object[2];
			paramArray[0] = xmlData;
			paramArray[1] = overwrite;
			object returnValue = Invoker.MethodReturn(this, "ImportXml", paramArray);
			return (LateBindingApi.Excel.Enums.XlXmlImportResult)returnValue;
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlXmlExportResult Export(string url)
		{
			object[] paramArray = new object[1];
			paramArray[0] = url;
			object returnValue = Invoker.MethodReturn(this, "Export", paramArray);
			return (LateBindingApi.Excel.Enums.XlXmlExportResult)returnValue;
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlXmlExportResult Export(string url, object overwrite)
		{
			object[] paramArray = new object[2];
			paramArray[0] = url;
			paramArray[1] = overwrite;
			object returnValue = Invoker.MethodReturn(this, "Export", paramArray);
			return (LateBindingApi.Excel.Enums.XlXmlExportResult)returnValue;
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlXmlExportResult ExportXml(string data)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(data,0);
			object returnValue = Invoker.MethodReturn(this, "ExportXml", paramArray);
			return (LateBindingApi.Excel.Enums.XlXmlExportResult)returnValue;
		}

		#endregion

	}
}
