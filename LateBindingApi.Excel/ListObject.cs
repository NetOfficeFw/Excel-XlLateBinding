//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL11","XL12","XL14")]
	public class ListObject : COMObject
	{
		#region Construction

		public ListObject(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public ListObject(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public ListObject(COMObject replacedObject) : base(replacedObject)
		{
		}

		public ListObject()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public string _Default
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_Default");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public bool Active
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Active");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range DataBodyRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataBodyRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public bool DisplayRightToLeft
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayRightToLeft");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range HeaderRowRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HeaderRowRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range InsertRowRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "InsertRowRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.ListColumns ListColumns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ListColumns");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ListColumns newClass = new LateBindingApi.Excel.ListColumns(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.ListRows ListRows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ListRows");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ListRows newClass = new LateBindingApi.Excel.ListRows(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.QueryTable QueryTable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "QueryTable");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.QueryTable newClass = new LateBindingApi.Excel.QueryTable(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range Range
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Range");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public bool ShowAutoFilter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowAutoFilter");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowAutoFilter", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public bool ShowTotals
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTotals");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTotals", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlListObjectSourceType SourceType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SourceType");
				return (LateBindingApi.Excel.Enums.XlListObjectSourceType)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range TotalsRowRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TotalsRowRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public string SharePointURL
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SharePointURL");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public LateBindingApi.Excel.XmlMap XmlMap
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "XmlMap");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.XmlMap newClass = new LateBindingApi.Excel.XmlMap(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public string DisplayName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayName", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowHeaders
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowHeaders");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowHeaders", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.AutoFilter AutoFilter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoFilter");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AutoFilter newClass = new LateBindingApi.Excel.AutoFilter(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public COMVariant TableStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TableStyle");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "TableStyle", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleFirstColumn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleFirstColumn");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleFirstColumn", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleLastColumn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleLastColumn");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleLastColumn", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleRowStripes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleRowStripes");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleRowStripes", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleColumnStripes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleColumnStripes");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleColumnStripes", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Sort Sort
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Sort");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sort newClass = new LateBindingApi.Excel.Sort(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public string Comment
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Comment");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Comment", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public string AlternativeText
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AlternativeText");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AlternativeText", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public string Summary
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Summary");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Summary", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL11","XL12","XL14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public string Publish(object target, bool linkSource)
		{
			object[] paramArray = new object[2];
			paramArray[0] = target;
			paramArray[1] = linkSource;
			object returnValue = Invoker.MethodReturn(this, "Publish", paramArray);
			return (string)returnValue;
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void Refresh()
		{
			Invoker.Method(this, "Refresh", null);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void Unlink()
		{
			Invoker.Method(this, "Unlink", null);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void Unlist()
		{
			Invoker.Method(this, "Unlist", null);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void UpdateChanges(LateBindingApi.Excel.Enums.XlListConflict iConflictType)
		{
			object[] paramArray = new object[1];
			paramArray[0] = iConflictType;
			Invoker.Method(this, "UpdateChanges", paramArray);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void Resize(LateBindingApi.Excel.Range range)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(range,0);
			Invoker.Method(this, "Resize", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ExportToVisio()
		{
			Invoker.Method(this, "ExportToVisio", null);
		}

		#endregion

	}
}
