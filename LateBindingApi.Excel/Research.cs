//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL12","XL14")]
	public class Research : COMObject
	{
		#region Construction

		public Research(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Research(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Research(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Research()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL12","XL14")]
		public COMVariant Query(string serviceID)
		{
			object[] paramArray = new object[1];
			paramArray[0] = serviceID;
			object returnValue = Invoker.MethodReturn(this, "Query", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL12","XL14")]
		public COMVariant Query(string serviceID, object queryString, object queryLanguage, object useSelection, object launchQuery)
		{
			object[] paramArray = new object[5];
			paramArray[0] = serviceID;
			paramArray[1] = queryString;
			paramArray[2] = queryLanguage;
			paramArray[3] = useSelection;
			paramArray[4] = launchQuery;
			object returnValue = Invoker.MethodReturn(this, "Query", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL12","XL14")]
		public bool IsResearchService(string serviceID)
		{
			object[] paramArray = new object[1];
			paramArray[0] = serviceID;
			object returnValue = Invoker.MethodReturn(this, "IsResearchService", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL12","XL14")]
		public COMVariant SetLanguagePair(Int32 languageFrom, Int32 languageTo)
		{
			object[] paramArray = new object[2];
			paramArray[0] = languageFrom;
			paramArray[1] = languageTo;
			object returnValue = Invoker.MethodReturn(this, "SetLanguagePair", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		#endregion

	}
}
