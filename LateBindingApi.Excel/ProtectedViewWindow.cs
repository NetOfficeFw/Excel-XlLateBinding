//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL14")]
	public class ProtectedViewWindow : COMObject
	{
		#region Construction

		public ProtectedViewWindow(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public ProtectedViewWindow(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public ProtectedViewWindow(COMObject replacedObject) : base(replacedObject)
		{
		}

		public ProtectedViewWindow()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL14")]
		public string _Default
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_Default");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public string Caption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Caption");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Caption", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool EnableResize
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableResize");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableResize", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public Double Height
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Height");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Height", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public Double Left
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Left");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Left", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public Double Top
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Top");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Top", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public Double Width
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Width");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Width", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool Visible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Visible");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Visible", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public string SourceName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SourceName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public string SourcePath
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SourcePath");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlProtectedViewWindowState WindowState
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "WindowState");
				return (LateBindingApi.Excel.Enums.XlProtectedViewWindowState)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "WindowState", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Workbook Workbook
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Workbook");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Workbook newClass = new LateBindingApi.Excel.Workbook(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL14")]
		public void Activate()
		{
			Invoker.Method(this, "Activate", null);
		}

		[SupportByLibrary("XL14")]
		public bool Close()
		{
			object returnValue = Invoker.MethodReturn(this, "Close", null);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Workbook Edit()
		{
			object returnValue = Invoker.MethodReturn(this, "Edit", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Workbook newClass = new LateBindingApi.Excel.Workbook(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Workbook Edit(object writeResPassword, object updateLinks)
		{
			object[] paramArray = new object[2];
			paramArray[0] = writeResPassword;
			paramArray[1] = updateLinks;
			object returnValue = Invoker.MethodReturn(this, "Edit", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Workbook newClass = new LateBindingApi.Excel.Workbook(this, returnValue);
			return newClass;
		}

		#endregion

	}
}
