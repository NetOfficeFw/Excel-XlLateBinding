//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14")]
	public class PivotCell : COMObject
	{
		#region Construction

		public PivotCell(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public PivotCell(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public PivotCell(COMObject replacedObject) : base(replacedObject)
		{
		}

		public PivotCell()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlPivotCellType PivotCellType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotCellType");
				return (LateBindingApi.Excel.Enums.XlPivotCellType)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotTable PivotTable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotTable");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotTable newClass = new LateBindingApi.Excel.PivotTable(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotField DataField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataField");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotField newClass = new LateBindingApi.Excel.PivotField(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotField PivotField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotField");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotField newClass = new LateBindingApi.Excel.PivotField(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotItem PivotItem
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotItem");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotItem newClass = new LateBindingApi.Excel.PivotItem(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotItemList RowItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RowItems");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotItemList newClass = new LateBindingApi.Excel.PivotItemList(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotItemList ColumnItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ColumnItems");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotItemList newClass = new LateBindingApi.Excel.PivotItemList(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range Range
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Range");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public string Dummy18
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Dummy18");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlConsolidationFunction CustomSubtotalFunction
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CustomSubtotalFunction");
				return (LateBindingApi.Excel.Enums.XlConsolidationFunction)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.PivotLine PivotRowLine
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotRowLine");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotLine newClass = new LateBindingApi.Excel.PivotLine(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.PivotLine PivotColumnLine
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotColumnLine");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotLine newClass = new LateBindingApi.Excel.PivotLine(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public COMVariant DataSourceValue
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataSourceValue");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlCellChangedState CellChanged
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CellChanged");
				return (LateBindingApi.Excel.Enums.XlCellChangedState)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public string MDX
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MDX");
				return (string)returnValue;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL14")]
		public void AllocateChange()
		{
			Invoker.Method(this, "AllocateChange", null);
		}

		[SupportByLibrary("XL14")]
		public void DiscardChange()
		{
			Invoker.Method(this, "DiscardChange", null);
		}

		#endregion

	}
}
