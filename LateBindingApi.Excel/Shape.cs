//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class Shape : COMObject
	{
		#region Construction

		public Shape(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Shape(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Shape(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Shape()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Adjustments Adjustments
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Adjustments");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Adjustments newClass = new LateBindingApi.Excel.Adjustments(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.TextFrame TextFrame
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TextFrame");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.TextFrame newClass = new LateBindingApi.Excel.TextFrame(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoAutoShapeType AutoShapeType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoShapeType");
				return (LateBindingApi.Office.Enums.MsoAutoShapeType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AutoShapeType", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.CalloutFormat Callout
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Callout");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.CalloutFormat newClass = new LateBindingApi.Excel.CalloutFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 ConnectionSiteCount
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ConnectionSiteCount");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoTriState Connector
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Connector");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.ConnectorFormat ConnectorFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ConnectorFormat");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ConnectorFormat newClass = new LateBindingApi.Excel.ConnectorFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.FillFormat Fill
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Fill");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.FillFormat newClass = new LateBindingApi.Excel.FillFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.GroupShapes GroupItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GroupItems");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.GroupShapes newClass = new LateBindingApi.Excel.GroupShapes(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Height
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Height");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Height", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoTriState HorizontalFlip
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HorizontalFlip");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public float Left
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Left");
                return (float)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Left", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.LineFormat Line
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Line");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.LineFormat newClass = new LateBindingApi.Excel.LineFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoTriState LockAspectRatio
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LockAspectRatio");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LockAspectRatio", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.ShapeNodes Nodes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Nodes");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ShapeNodes newClass = new LateBindingApi.Excel.ShapeNodes(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
        public float Rotation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Rotation");
                return (float)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Rotation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.PictureFormat PictureFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PictureFormat");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PictureFormat newClass = new LateBindingApi.Excel.PictureFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.ShadowFormat Shadow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Shadow");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ShadowFormat newClass = new LateBindingApi.Excel.ShadowFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.TextEffectFormat TextEffect
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TextEffect");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.TextEffectFormat newClass = new LateBindingApi.Excel.TextEffectFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.ThreeDFormat ThreeD
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ThreeD");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ThreeDFormat newClass = new LateBindingApi.Excel.ThreeDFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
        public float Top
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Top");
                return (float)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Top", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoShapeType Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (LateBindingApi.Office.Enums.MsoShapeType)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoTriState VerticalFlip
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VerticalFlip");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Vertices
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Vertices");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoTriState Visible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Visible");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Visible", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Width
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Width");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Width", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 ZOrderPosition
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ZOrderPosition");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Hyperlink Hyperlink
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Hyperlink");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Hyperlink newClass = new LateBindingApi.Excel.Hyperlink(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoBlackWhiteMode BlackWhiteMode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BlackWhiteMode");
				return (LateBindingApi.Office.Enums.MsoBlackWhiteMode)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "BlackWhiteMode", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject DrawingObject
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DrawingObject");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnAction
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnAction");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnAction", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Locked
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Locked");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Locked", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range TopLeftCell
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TopLeftCell");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range BottomRightCell
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BottomRightCell");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlPlacement Placement
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Placement");
				return (LateBindingApi.Excel.Enums.XlPlacement)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Placement", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.ControlFormat ControlFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ControlFormat");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ControlFormat newClass = new LateBindingApi.Excel.ControlFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.LinkFormat LinkFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LinkFormat");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.LinkFormat newClass = new LateBindingApi.Excel.LinkFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.OLEFormat OLEFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OLEFormat");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.OLEFormat newClass = new LateBindingApi.Excel.OLEFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlFormControl FormControlType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FormControlType");
				return (LateBindingApi.Excel.Enums.XlFormControl)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string AlternativeText
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AlternativeText");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AlternativeText", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Script Script
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Script");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.Script newClass = new LateBindingApi.Office.Script(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.DiagramNode DiagramNode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DiagramNode");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.DiagramNode newClass = new LateBindingApi.Excel.DiagramNode(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Office.Enums.MsoTriState HasDiagramNode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasDiagramNode");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Diagram Diagram
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Diagram");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Diagram newClass = new LateBindingApi.Excel.Diagram(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Office.Enums.MsoTriState HasDiagram
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasDiagram");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Office.Enums.MsoTriState Child
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Child");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Shape ParentGroup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ParentGroup");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Office.CanvasShapes CanvasItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CanvasItems");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.CanvasShapes newClass = new LateBindingApi.Office.CanvasShapes(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public Int32 ID
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ID");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Chart Chart
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Chart");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Chart newClass = new LateBindingApi.Excel.Chart(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Office.Enums.MsoTriState HasChart
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasChart");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.TextFrame2 TextFrame2
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TextFrame2");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.TextFrame2 newClass = new LateBindingApi.Excel.TextFrame2(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Office.Enums.MsoShapeStyleIndex ShapeStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShapeStyle");
				return (LateBindingApi.Office.Enums.MsoShapeStyleIndex)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShapeStyle", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Office.Enums.MsoBackgroundStyleIndex BackgroundStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BackgroundStyle");
				return (LateBindingApi.Office.Enums.MsoBackgroundStyleIndex)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "BackgroundStyle", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Office.SoftEdgeFormat SoftEdge
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SoftEdge");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.SoftEdgeFormat newClass = new LateBindingApi.Office.SoftEdgeFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Office.GlowFormat Glow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Glow");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.GlowFormat newClass = new LateBindingApi.Office.GlowFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Office.ReflectionFormat Reflection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Reflection");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.ReflectionFormat newClass = new LateBindingApi.Office.ReflectionFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Office.Enums.MsoTriState HasSmartArt
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasSmartArt");
				return (LateBindingApi.Office.Enums.MsoTriState)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Office.SmartArt SmartArt
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SmartArt");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.SmartArt newClass = new LateBindingApi.Office.SmartArt(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public string Title
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Title");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Title", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Apply()
		{
			Invoker.Method(this, "Apply", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape Duplicate()
		{
			object returnValue = Invoker.MethodReturn(this, "Duplicate", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Flip(LateBindingApi.Office.Enums.MsoFlipCmd flipCmd)
		{
			object[] paramArray = new object[1];
			paramArray[0] = flipCmd;
			Invoker.Method(this, "Flip", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void IncrementLeft(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "IncrementLeft", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void IncrementRotation(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "IncrementRotation", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void IncrementTop(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "IncrementTop", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PickUp()
		{
			Invoker.Method(this, "PickUp", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void RerouteConnections()
		{
			Invoker.Method(this, "RerouteConnections", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ScaleHeight(Double factor, LateBindingApi.Office.Enums.MsoTriState relativeToOriginalSize)
		{
			object[] paramArray = new object[2];
			paramArray[0] = factor;
			paramArray[1] = relativeToOriginalSize;
			Invoker.Method(this, "ScaleHeight", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ScaleHeight(Double factor, LateBindingApi.Office.Enums.MsoTriState relativeToOriginalSize, object scale)
		{
			object[] paramArray = new object[3];
			paramArray[0] = factor;
			paramArray[1] = relativeToOriginalSize;
			paramArray[2] = scale;
			Invoker.Method(this, "ScaleHeight", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ScaleWidth(Double factor, LateBindingApi.Office.Enums.MsoTriState relativeToOriginalSize)
		{
			object[] paramArray = new object[2];
			paramArray[0] = factor;
			paramArray[1] = relativeToOriginalSize;
			Invoker.Method(this, "ScaleWidth", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ScaleWidth(Double factor, LateBindingApi.Office.Enums.MsoTriState relativeToOriginalSize, object scale)
		{
			object[] paramArray = new object[3];
			paramArray[0] = factor;
			paramArray[1] = relativeToOriginalSize;
			paramArray[2] = scale;
			Invoker.Method(this, "ScaleWidth", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Select()
		{
			Invoker.Method(this, "Select", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Select(object replace)
		{
			object[] paramArray = new object[1];
			paramArray[0] = replace;
			Invoker.Method(this, "Select", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SetShapesDefaultProperties()
		{
			Invoker.Method(this, "SetShapesDefaultProperties", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.ShapeRange Ungroup()
		{
			object returnValue = Invoker.MethodReturn(this, "Ungroup", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.ShapeRange newClass = new LateBindingApi.Excel.ShapeRange(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ZOrder(LateBindingApi.Office.Enums.MsoZOrderCmd zOrderCmd)
		{
			object[] paramArray = new object[1];
			paramArray[0] = zOrderCmd;
			Invoker.Method(this, "ZOrder", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Copy()
		{
			Invoker.Method(this, "Copy", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Cut()
		{
			Invoker.Method(this, "Cut", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void CopyPicture()
		{
			Invoker.Method(this, "CopyPicture", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void CopyPicture(object appearance, object format)
		{
			object[] paramArray = new object[2];
			paramArray[0] = appearance;
			paramArray[1] = format;
			Invoker.Method(this, "CopyPicture", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void CanvasCropLeft(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "CanvasCropLeft", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void CanvasCropTop(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "CanvasCropTop", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void CanvasCropRight(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "CanvasCropRight", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void CanvasCropBottom(Double increment)
		{
			object[] paramArray = new object[1];
			paramArray[0] = increment;
			Invoker.Method(this, "CanvasCropBottom", paramArray);
		}

		#endregion

	}
}
