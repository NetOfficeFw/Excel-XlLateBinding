//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class Axis : COMObject
	{
		#region Construction

		public Axis(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Axis(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Axis(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Axis()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool AxisBetweenCategories
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AxisBetweenCategories");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AxisBetweenCategories", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlAxisGroup AxisGroup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AxisGroup");
				return (LateBindingApi.Excel.Enums.XlAxisGroup)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.AxisTitle AxisTitle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AxisTitle");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AxisTitle newClass = new LateBindingApi.Excel.AxisTitle(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Border Border
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Border");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Border newClass = new LateBindingApi.Excel.Border(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant CategoryNames
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CategoryNames");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "CategoryNames", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlAxisCrosses Crosses
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Crosses");
				return (LateBindingApi.Excel.Enums.XlAxisCrosses)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Crosses", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double CrossesAt
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CrossesAt");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CrossesAt", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool HasMajorGridlines
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasMajorGridlines");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasMajorGridlines", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool HasMinorGridlines
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasMinorGridlines");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasMinorGridlines", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool HasTitle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasTitle");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasTitle", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Gridlines MajorGridlines
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MajorGridlines");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Gridlines newClass = new LateBindingApi.Excel.Gridlines(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlTickMark MajorTickMark
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MajorTickMark");
				return (LateBindingApi.Excel.Enums.XlTickMark)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MajorTickMark", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double MajorUnit
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MajorUnit");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MajorUnit", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool MajorUnitIsAuto
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MajorUnitIsAuto");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MajorUnitIsAuto", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double MaximumScale
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MaximumScale");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MaximumScale", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool MaximumScaleIsAuto
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MaximumScaleIsAuto");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MaximumScaleIsAuto", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double MinimumScale
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MinimumScale");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MinimumScale", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool MinimumScaleIsAuto
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MinimumScaleIsAuto");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MinimumScaleIsAuto", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Gridlines MinorGridlines
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MinorGridlines");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Gridlines newClass = new LateBindingApi.Excel.Gridlines(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlTickMark MinorTickMark
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MinorTickMark");
				return (LateBindingApi.Excel.Enums.XlTickMark)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MinorTickMark", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double MinorUnit
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MinorUnit");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MinorUnit", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool MinorUnitIsAuto
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MinorUnitIsAuto");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MinorUnitIsAuto", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ReversePlotOrder
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ReversePlotOrder");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ReversePlotOrder", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlScaleType ScaleType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ScaleType");
				return (LateBindingApi.Excel.Enums.XlScaleType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ScaleType", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlTickLabelPosition TickLabelPosition
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TickLabelPosition");
				return (LateBindingApi.Excel.Enums.XlTickLabelPosition)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TickLabelPosition", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.TickLabels TickLabels
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TickLabels");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.TickLabels newClass = new LateBindingApi.Excel.TickLabels(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 TickLabelSpacing
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TickLabelSpacing");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TickLabelSpacing", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 TickMarkSpacing
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TickMarkSpacing");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TickMarkSpacing", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlAxisType Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (LateBindingApi.Excel.Enums.XlAxisType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Type", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlTimeUnit BaseUnit
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BaseUnit");
				return (LateBindingApi.Excel.Enums.XlTimeUnit)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "BaseUnit", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool BaseUnitIsAuto
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BaseUnitIsAuto");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "BaseUnitIsAuto", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlTimeUnit MajorUnitScale
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MajorUnitScale");
				return (LateBindingApi.Excel.Enums.XlTimeUnit)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MajorUnitScale", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlTimeUnit MinorUnitScale
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MinorUnitScale");
				return (LateBindingApi.Excel.Enums.XlTimeUnit)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MinorUnitScale", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCategoryType CategoryType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CategoryType");
				return (LateBindingApi.Excel.Enums.XlCategoryType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CategoryType", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Left
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Left");
				return (Double)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Top
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Top");
				return (Double)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Width
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Width");
				return (Double)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Height
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Height");
				return (Double)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlDisplayUnit DisplayUnit
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayUnit");
				return (LateBindingApi.Excel.Enums.XlDisplayUnit)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayUnit", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double DisplayUnitCustom
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayUnitCustom");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayUnitCustom", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool HasDisplayUnitLabel
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasDisplayUnitLabel");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasDisplayUnitLabel", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.DisplayUnitLabel DisplayUnitLabel
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayUnitLabel");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.DisplayUnitLabel newClass = new LateBindingApi.Excel.DisplayUnitLabel(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public Double LogBase
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LogBase");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LogBase", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool TickLabelSpacingIsAuto
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TickLabelSpacingIsAuto");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TickLabelSpacingIsAuto", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.ChartFormat Format
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Format");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ChartFormat newClass = new LateBindingApi.Excel.ChartFormat(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Delete()
		{
			object returnValue = Invoker.MethodReturn(this, "Delete", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Select()
		{
			object returnValue = Invoker.MethodReturn(this, "Select", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		#endregion

	}
}
