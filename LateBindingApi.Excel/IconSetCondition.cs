//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL12","XL14")]
	public class IconSetCondition : COMObject
	{
		#region Construction

		public IconSetCondition(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public IconSetCondition(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public IconSetCondition(COMObject replacedObject) : base(replacedObject)
		{
		}

		public IconSetCondition()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public Int32 Priority
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Priority");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Priority", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool StopIfTrue
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "StopIfTrue");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Range AppliesTo
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AppliesTo");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public Int32 Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool PTCondition
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PTCondition");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlPivotConditionScope ScopeType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ScopeType");
				return (LateBindingApi.Excel.Enums.XlPivotConditionScope)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ScopeType", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ReverseOrder
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ReverseOrder");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ReverseOrder", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool PercentileValues
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PercentileValues");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PercentileValues", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowIconOnly
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowIconOnly");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowIconOnly", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public string Formula
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Formula");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Formula", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public COMVariant IconSet
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IconSet");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "IconSet", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.IconCriteria IconCriteria
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IconCriteria");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.IconCriteria newClass = new LateBindingApi.Excel.IconCriteria(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL12","XL14")]
		public void ModifyAppliesToRange(LateBindingApi.Excel.Range range)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(range,0);
			Invoker.Method(this, "ModifyAppliesToRange", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void SetFirstPriority()
		{
			Invoker.Method(this, "SetFirstPriority", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void SetLastPriority()
		{
			Invoker.Method(this, "SetLastPriority", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		#endregion

	}
}
