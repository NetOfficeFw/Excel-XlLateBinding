//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class _Application : COMObject
	{
		#region Construction

		public _Application(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public _Application(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public _Application(COMObject replacedObject) : base(replacedObject)
		{
		}

		public _Application()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range ActiveCell
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveCell");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Chart ActiveChart
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveChart");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Chart newClass = new LateBindingApi.Excel.Chart(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.DialogSheet ActiveDialog
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveDialog");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.DialogSheet newClass = new LateBindingApi.Excel.DialogSheet(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.MenuBar ActiveMenuBar
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveMenuBar");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.MenuBar newClass = new LateBindingApi.Excel.MenuBar(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string ActivePrinter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActivePrinter");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ActivePrinter", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ActiveSheet
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveSheet");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Window ActiveWindow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveWindow");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Window newClass = new LateBindingApi.Excel.Window(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Workbook ActiveWorkbook
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveWorkbook");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Workbook newClass = new LateBindingApi.Excel.Workbook(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.AddIns AddIns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AddIns");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AddIns newClass = new LateBindingApi.Excel.AddIns(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Assistant Assistant
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Assistant");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.Assistant newClass = new LateBindingApi.Office.Assistant(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Cells
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Cells");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Charts
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Charts");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Columns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Columns");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.CommandBars CommandBars
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CommandBars");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.CommandBars newClass = new LateBindingApi.Office.CommandBars(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 DDEAppReturnCode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DDEAppReturnCode");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets DialogSheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DialogSheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.MenuBars MenuBars
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MenuBars");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.MenuBars newClass = new LateBindingApi.Excel.MenuBars(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Modules Modules
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Modules");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Modules newClass = new LateBindingApi.Excel.Modules(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Names Names
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Names");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Names newClass = new LateBindingApi.Excel.Names(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range get_Range(object cell1)
		{
			object[] paramArray = new object[1];
			paramArray[0] = cell1;
			object returnValue = Invoker.PropertyGet(this, "Range", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range get_Range(object cell1, object cell2)
		{
			object[] paramArray = new object[2];
			paramArray[0] = cell1;
			paramArray[1] = cell2;
			object returnValue = Invoker.PropertyGet(this, "Range", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Rows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Rows");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Selection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Selection");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Sheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Sheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Menu get_ShortcutMenus(Int32 index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "ShortcutMenus", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Menu newClass = new LateBindingApi.Excel.Menu(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Workbook ThisWorkbook
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ThisWorkbook");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Workbook newClass = new LateBindingApi.Excel.Workbook(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Toolbars Toolbars
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Toolbars");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Toolbars newClass = new LateBindingApi.Excel.Toolbars(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Windows Windows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Windows");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Windows newClass = new LateBindingApi.Excel.Windows(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Workbooks Workbooks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Workbooks");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Workbooks newClass = new LateBindingApi.Excel.Workbooks(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.WorksheetFunction WorksheetFunction
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "WorksheetFunction");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.WorksheetFunction newClass = new LateBindingApi.Excel.WorksheetFunction(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Worksheets Worksheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Worksheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Worksheets newClass = new LateBindingApi.Excel.Worksheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Excel4IntlMacroSheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Excel4IntlMacroSheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Excel4MacroSheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Excel4MacroSheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool AlertBeforeOverwriting
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AlertBeforeOverwriting");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AlertBeforeOverwriting", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string AltStartupPath
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AltStartupPath");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AltStartupPath", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool AskToUpdateLinks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AskToUpdateLinks");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AskToUpdateLinks", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableAnimations
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableAnimations");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableAnimations", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.AutoCorrect AutoCorrect
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoCorrect");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AutoCorrect newClass = new LateBindingApi.Excel.AutoCorrect(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Build
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Build");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool CalculateBeforeSave
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CalculateBeforeSave");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CalculateBeforeSave", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCalculation Calculation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Calculation");
				return (LateBindingApi.Excel.Enums.XlCalculation)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Calculation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Caller
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Caller", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_Caller(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "Caller", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool CanPlaySounds
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CanPlaySounds");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool CanRecordSounds
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CanRecordSounds");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Caption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Caption");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Caption", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool CellDragAndDrop
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CellDragAndDrop");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CellDragAndDrop", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ClipboardFormats
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ClipboardFormats", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_ClipboardFormats(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "ClipboardFormats", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayClipboardWindow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayClipboardWindow");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayClipboardWindow", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ColorButtons
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ColorButtons");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ColorButtons", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCommandUnderlines CommandUnderlines
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CommandUnderlines");
				return (LateBindingApi.Excel.Enums.XlCommandUnderlines)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CommandUnderlines", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ConstrainNumeric
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ConstrainNumeric");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ConstrainNumeric", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool CopyObjectsWithCells
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CopyObjectsWithCells");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CopyObjectsWithCells", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlMousePointer Cursor
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Cursor");
				return (LateBindingApi.Excel.Enums.XlMousePointer)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Cursor", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 CustomListCount
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CustomListCount");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCutCopyMode CutCopyMode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CutCopyMode");
				return (LateBindingApi.Excel.Enums.XlCutCopyMode)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CutCopyMode", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 DataEntryMode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataEntryMode");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DataEntryMode", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string _Default
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_Default");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string DefaultFilePath
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DefaultFilePath");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DefaultFilePath", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Dialogs Dialogs
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Dialogs");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Dialogs newClass = new LateBindingApi.Excel.Dialogs(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayAlerts
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayAlerts");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayAlerts", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayFormulaBar
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayFormulaBar");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayFormulaBar", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayFullScreen
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayFullScreen");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayFullScreen", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayNoteIndicator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayNoteIndicator");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayNoteIndicator", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCommentDisplayMode DisplayCommentIndicator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayCommentIndicator");
				return (LateBindingApi.Excel.Enums.XlCommentDisplayMode)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayCommentIndicator", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayExcel4Menus
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayExcel4Menus");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayExcel4Menus", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayRecentFiles
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayRecentFiles");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayRecentFiles", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayScrollBars
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayScrollBars");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayScrollBars", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayStatusBar
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayStatusBar");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayStatusBar", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EditDirectlyInCell
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EditDirectlyInCell");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EditDirectlyInCell", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableAutoComplete
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableAutoComplete");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableAutoComplete", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlEnableCancelKey EnableCancelKey
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableCancelKey");
				return (LateBindingApi.Excel.Enums.XlEnableCancelKey)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableCancelKey", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableSound
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableSound");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableSound", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableTipWizard
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableTipWizard");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableTipWizard", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant FileConverters
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FileConverters", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_FileConverters(object index1, object index2)
		{
			object[] paramArray = new object[2];
			paramArray[0] = index1;
			paramArray[1] = index2;
			object returnValue = Invoker.PropertyGet(this, "FileConverters", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.FileSearch FileSearch
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FileSearch");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.FileSearch newClass = new LateBindingApi.Office.FileSearch(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.IFind FileFind
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FileFind");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IFind newClass = new LateBindingApi.Office.IFind(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool FixedDecimal
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FixedDecimal");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FixedDecimal", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 FixedDecimalPlaces
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FixedDecimalPlaces");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FixedDecimalPlaces", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Height
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Height");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Height", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool IgnoreRemoteRequests
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IgnoreRemoteRequests");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "IgnoreRemoteRequests", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Interactive
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Interactive");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Interactive", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant International
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "International", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_International(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "International", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Iteration
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Iteration");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Iteration", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool LargeButtons
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LargeButtons");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LargeButtons", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Left
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Left");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Left", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string LibraryPath
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LibraryPath");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant MailSession
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MailSession");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlMailSystem MailSystem
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MailSystem");
				return (LateBindingApi.Excel.Enums.XlMailSystem)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool MathCoprocessorAvailable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MathCoprocessorAvailable");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double MaxChange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MaxChange");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MaxChange", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 MaxIterations
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MaxIterations");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MaxIterations", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 MemoryFree
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MemoryFree");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 MemoryTotal
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MemoryTotal");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 MemoryUsed
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MemoryUsed");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool MouseAvailable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MouseAvailable");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool MoveAfterReturn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MoveAfterReturn");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MoveAfterReturn", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlDirection MoveAfterReturnDirection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MoveAfterReturnDirection");
				return (LateBindingApi.Excel.Enums.XlDirection)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MoveAfterReturnDirection", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.RecentFiles RecentFiles
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RecentFiles");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.RecentFiles newClass = new LateBindingApi.Excel.RecentFiles(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string NetworkTemplatesPath
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "NetworkTemplatesPath");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.ODBCErrors ODBCErrors
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ODBCErrors");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ODBCErrors newClass = new LateBindingApi.Excel.ODBCErrors(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 ODBCTimeout
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ODBCTimeout");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ODBCTimeout", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnCalculate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnCalculate");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnCalculate", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnData");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnData", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnDoubleClick
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnDoubleClick");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnDoubleClick", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnEntry
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnEntry");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnEntry", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnSheetActivate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnSheetActivate");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnSheetActivate", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnSheetDeactivate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnSheetDeactivate");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnSheetDeactivate", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnWindow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnWindow");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnWindow", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OperatingSystem
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OperatingSystem");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OrganizationName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OrganizationName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Path
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Path");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string PathSeparator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PathSeparator");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant PreviousSelections
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PreviousSelections", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_PreviousSelections(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "PreviousSelections", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool PivotTableSelection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotTableSelection");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PivotTableSelection", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool PromptForSummaryInfo
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PromptForSummaryInfo");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PromptForSummaryInfo", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool RecordRelative
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RecordRelative");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlReferenceStyle ReferenceStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ReferenceStyle");
				return (LateBindingApi.Excel.Enums.XlReferenceStyle)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ReferenceStyle", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant RegisteredFunctions
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RegisteredFunctions", null);
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant get_RegisteredFunctions(object index1, object index2)
		{
			object[] paramArray = new object[2];
			paramArray[0] = index1;
			paramArray[1] = index2;
			object returnValue = Invoker.PropertyGet(this, "RegisteredFunctions", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool RollZoom
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RollZoom");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "RollZoom", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ScreenUpdating
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ScreenUpdating");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ScreenUpdating", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 SheetsInNewWorkbook
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SheetsInNewWorkbook");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SheetsInNewWorkbook", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ShowChartTipNames
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowChartTipNames");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowChartTipNames", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ShowChartTipValues
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowChartTipValues");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowChartTipValues", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string StandardFont
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "StandardFont");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "StandardFont", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double StandardFontSize
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "StandardFontSize");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "StandardFontSize", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string StartupPath
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "StartupPath");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant StatusBar
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "StatusBar");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "StatusBar", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string TemplatesPath
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TemplatesPath");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ShowToolTips
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowToolTips");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowToolTips", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Top
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Top");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Top", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlFileFormat DefaultSaveFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DefaultSaveFormat");
				return (LateBindingApi.Excel.Enums.XlFileFormat)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DefaultSaveFormat", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string TransitionMenuKey
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TransitionMenuKey");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TransitionMenuKey", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 TransitionMenuKeyAction
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TransitionMenuKeyAction");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TransitionMenuKeyAction", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool TransitionNavigKeys
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TransitionNavigKeys");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TransitionNavigKeys", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double UsableHeight
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UsableHeight");
				return (Double)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double UsableWidth
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UsableWidth");
				return (Double)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool UserControl
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UserControl");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "UserControl", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string UserName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UserName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "UserName", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Value
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Value");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.VBIDE.VBE VBE
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VBE");
				if(null == returnValue)
					return null;
				LateBindingApi.VBIDE.VBE newClass = new LateBindingApi.VBIDE.VBE(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Version
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Version");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Visible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Visible");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Visible", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Width
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Width");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Width", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool WindowsForPens
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "WindowsForPens");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlWindowState WindowState
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "WindowState");
				return (LateBindingApi.Excel.Enums.XlWindowState)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "WindowState", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 UILanguage
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UILanguage");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "UILanguage", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 DefaultSheetDirection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DefaultSheetDirection");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DefaultSheetDirection", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 CursorMovement
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CursorMovement");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CursorMovement", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ControlCharacters
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ControlCharacters");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ControlCharacters", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableEvents
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableEvents");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableEvents", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayInfoWindow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayInfoWindow");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayInfoWindow", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ExtendList
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ExtendList");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ExtendList", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.OLEDBErrors OLEDBErrors
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OLEDBErrors");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.OLEDBErrors newClass = new LateBindingApi.Excel.OLEDBErrors(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.COMAddIns COMAddIns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "COMAddIns");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.COMAddIns newClass = new LateBindingApi.Office.COMAddIns(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.DefaultWebOptions DefaultWebOptions
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DefaultWebOptions");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.DefaultWebOptions newClass = new LateBindingApi.Excel.DefaultWebOptions(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string ProductCode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProductCode");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string UserLibraryPath
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UserLibraryPath");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool AutoPercentEntry
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoPercentEntry");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AutoPercentEntry", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.LanguageSettings LanguageSettings
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LanguageSettings");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.LanguageSettings newClass = new LateBindingApi.Office.LanguageSettings(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.AnswerWizard AnswerWizard
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AnswerWizard");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.AnswerWizard newClass = new LateBindingApi.Office.AnswerWizard(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 CalculationVersion
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CalculationVersion");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ShowWindowsInTaskbar
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowWindowsInTaskbar");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowWindowsInTaskbar", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Enums.MsoFeatureInstall FeatureInstall
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FeatureInstall");
				return (LateBindingApi.Office.Enums.MsoFeatureInstall)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FeatureInstall", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool Ready
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Ready");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.CellFormat FindFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FindFormat");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.CellFormat newClass = new LateBindingApi.Excel.CellFormat(this, returnValue);
				return newClass;
			}
			set
			{
				Invoker.PropertySet(this, "FindFormat", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.CellFormat ReplaceFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ReplaceFormat");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.CellFormat newClass = new LateBindingApi.Excel.CellFormat(this, returnValue);
				return newClass;
			}
			set
			{
				Invoker.PropertySet(this, "ReplaceFormat", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.UsedObjects UsedObjects
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UsedObjects");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.UsedObjects newClass = new LateBindingApi.Excel.UsedObjects(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCalculationState CalculationState
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CalculationState");
				return (LateBindingApi.Excel.Enums.XlCalculationState)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCalculationInterruptKey CalculationInterruptKey
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CalculationInterruptKey");
				return (LateBindingApi.Excel.Enums.XlCalculationInterruptKey)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CalculationInterruptKey", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Watches Watches
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Watches");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Watches newClass = new LateBindingApi.Excel.Watches(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool DisplayFunctionToolTips
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayFunctionToolTips");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayFunctionToolTips", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Office.Enums.MsoAutomationSecurity AutomationSecurity
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutomationSecurity");
				return (LateBindingApi.Office.Enums.MsoAutomationSecurity)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AutomationSecurity", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Office.FileDialog get_FileDialog(LateBindingApi.Office.Enums.MsoFileDialogType fileDialogType)
		{
			object[] paramArray = new object[1];
			paramArray[0] = fileDialogType;
			object returnValue = Invoker.PropertyGet(this, "FileDialog", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Office.FileDialog newClass = new LateBindingApi.Office.FileDialog(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool DisplayPasteOptions
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayPasteOptions");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayPasteOptions", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool DisplayInsertOptions
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayInsertOptions");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayInsertOptions", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool GenerateGetPivotData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GenerateGetPivotData");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "GenerateGetPivotData", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.AutoRecover AutoRecover
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoRecover");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AutoRecover newClass = new LateBindingApi.Excel.AutoRecover(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public Int32 Hwnd
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Hwnd");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public Int32 Hinstance
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Hinstance");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.ErrorCheckingOptions ErrorCheckingOptions
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ErrorCheckingOptions");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ErrorCheckingOptions newClass = new LateBindingApi.Excel.ErrorCheckingOptions(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool AutoFormatAsYouTypeReplaceHyperlinks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AutoFormatAsYouTypeReplaceHyperlinks");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AutoFormatAsYouTypeReplaceHyperlinks", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.SmartTagRecognizers SmartTagRecognizers
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SmartTagRecognizers");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.SmartTagRecognizers newClass = new LateBindingApi.Excel.SmartTagRecognizers(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Office.NewFile NewWorkbook
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "NewWorkbook");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.NewFile newClass = new LateBindingApi.Office.NewFile(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.SpellingOptions SpellingOptions
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SpellingOptions");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.SpellingOptions newClass = new LateBindingApi.Excel.SpellingOptions(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Speech Speech
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Speech");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Speech newClass = new LateBindingApi.Excel.Speech(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool MapPaperSize
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MapPaperSize");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MapPaperSize", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool ShowStartupDialog
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowStartupDialog");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowStartupDialog", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public string DecimalSeparator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DecimalSeparator");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DecimalSeparator", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public string ThousandsSeparator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ThousandsSeparator");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ThousandsSeparator", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool UseSystemSeparators
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UseSystemSeparators");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "UseSystemSeparators", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range ThisCell
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ThisCell");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.RTD RTD
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RTD");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.RTD newClass = new LateBindingApi.Excel.RTD(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public bool DisplayDocumentActionTaskPane
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayDocumentActionTaskPane");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayDocumentActionTaskPane", value);
			}						
		}


		[SupportByLibrary("XL11","XL12","XL14")]
		public bool ArbitraryXMLSupportAvailable
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ArbitraryXMLSupportAvailable");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public Int32 MeasurementUnit
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MeasurementUnit");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MeasurementUnit", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowSelectionFloaties
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowSelectionFloaties");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowSelectionFloaties", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowMenuFloaties
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowMenuFloaties");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowMenuFloaties", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowDevTools
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowDevTools");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowDevTools", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool EnableLivePreview
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableLivePreview");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableLivePreview", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DisplayDocumentInformationPanel
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayDocumentInformationPanel");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayDocumentInformationPanel", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool AlwaysUseClearType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AlwaysUseClearType");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AlwaysUseClearType", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool WarnOnFunctionNameConflict
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "WarnOnFunctionNameConflict");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "WarnOnFunctionNameConflict", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public Int32 FormulaBarHeight
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FormulaBarHeight");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FormulaBarHeight", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DisplayFormulaAutoComplete
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayFormulaAutoComplete");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayFormulaAutoComplete", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlGenerateTableRefs GenerateTableRefs
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GenerateTableRefs");
				return (LateBindingApi.Excel.Enums.XlGenerateTableRefs)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "GenerateTableRefs", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Office.IAssistance Assistance
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Assistance");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.IAssistance newClass = new LateBindingApi.Office.IAssistance(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool EnableLargeOperationAlert
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableLargeOperationAlert");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableLargeOperationAlert", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public Int32 LargeOperationCellThousandCount
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LargeOperationCellThousandCount");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LargeOperationCellThousandCount", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DeferAsyncQueries
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DeferAsyncQueries");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DeferAsyncQueries", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.MultiThreadedCalculation MultiThreadedCalculation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MultiThreadedCalculation");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.MultiThreadedCalculation newClass = new LateBindingApi.Excel.MultiThreadedCalculation(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public Int32 ActiveEncryptionSession
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveEncryptionSession");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool HighQualityModeForGraphics
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HighQualityModeForGraphics");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HighQualityModeForGraphics", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.FileExportConverters FileExportConverters
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FileExportConverters");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.FileExportConverters newClass = new LateBindingApi.Excel.FileExportConverters(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Office.SmartArtLayouts SmartArtLayouts
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SmartArtLayouts");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.SmartArtLayouts newClass = new LateBindingApi.Office.SmartArtLayouts(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Office.SmartArtQuickStyles SmartArtQuickStyles
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SmartArtQuickStyles");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.SmartArtQuickStyles newClass = new LateBindingApi.Office.SmartArtQuickStyles(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Office.SmartArtColors SmartArtColors
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SmartArtColors");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.SmartArtColors newClass = new LateBindingApi.Office.SmartArtColors(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.AddIns2 AddIns2
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AddIns2");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AddIns2 newClass = new LateBindingApi.Excel.AddIns2(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public bool PrintCommunication
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PrintCommunication");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PrintCommunication", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool UseClusterConnector
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "UseClusterConnector");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "UseClusterConnector", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public string ClusterConnector
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ClusterConnector");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ClusterConnector", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool Quitting
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Quitting");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public bool Dummy22
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Dummy22");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Dummy22", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool Dummy23
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Dummy23");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Dummy23", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.ProtectedViewWindows ProtectedViewWindows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectedViewWindows");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ProtectedViewWindows newClass = new LateBindingApi.Excel.ProtectedViewWindows(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.ProtectedViewWindow ActiveProtectedViewWindow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveProtectedViewWindow");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ProtectedViewWindow newClass = new LateBindingApi.Excel.ProtectedViewWindow(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public bool IsSandboxed
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsSandboxed");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public bool SaveISO8601Dates
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SaveISO8601Dates");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SaveISO8601Dates", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public COMVariant HinstancePtr
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HinstancePtr");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Office.Enums.MsoFileValidationMode FileValidation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FileValidation");
				return (LateBindingApi.Office.Enums.MsoFileValidationMode)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FileValidation", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlFileValidationPivotMode FileValidationPivot
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FileValidationPivot");
				return (LateBindingApi.Excel.Enums.XlFileValidationPivotMode)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FileValidationPivot", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Calculate()
		{
			Invoker.Method(this, "Calculate", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DDEExecute(Int32 channel, string _string)
		{
			object[] paramArray = new object[2];
			paramArray[0] = channel;
			paramArray[1] = _string;
			Invoker.Method(this, "DDEExecute", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 DDEInitiate(string app, string topic)
		{
			object[] paramArray = new object[2];
			paramArray[0] = app;
			paramArray[1] = topic;
			object returnValue = Invoker.MethodReturn(this, "DDEInitiate", paramArray);
			return (Int32)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DDEPoke(Int32 channel, object item, object data)
		{
			object[] paramArray = new object[3];
			paramArray[0] = channel;
			paramArray[1] = item;
			paramArray[2] = data;
			Invoker.Method(this, "DDEPoke", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant DDERequest(Int32 channel, string item)
		{
			object[] paramArray = new object[2];
			paramArray[0] = channel;
			paramArray[1] = item;
			object returnValue = Invoker.MethodReturn(this, "DDERequest", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DDETerminate(Int32 channel)
		{
			object[] paramArray = new object[1];
			paramArray[0] = channel;
			Invoker.Method(this, "DDETerminate", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Evaluate(object name)
		{
			object[] paramArray = new object[1];
			paramArray[0] = name;
			object returnValue = Invoker.MethodReturn(this, "Evaluate", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _Evaluate(object name)
		{
			object[] paramArray = new object[1];
			paramArray[0] = name;
			object returnValue = Invoker.MethodReturn(this, "_Evaluate", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ExecuteExcel4Macro(string _string)
		{
			object[] paramArray = new object[1];
			paramArray[0] = _string;
			object returnValue = Invoker.MethodReturn(this, "ExecuteExcel4Macro", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Intersect(LateBindingApi.Excel.Range arg1, LateBindingApi.Excel.Range arg2)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(arg1,0);
			paramArray.SetValue(arg2,1);
			object returnValue = Invoker.MethodReturn(this, "Intersect", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Intersect(LateBindingApi.Excel.Range arg1, LateBindingApi.Excel.Range arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[30];
			paramArray.SetValue(arg1,0);
			paramArray.SetValue(arg2,1);
			paramArray[2] = arg3;
			paramArray[3] = arg4;
			paramArray[4] = arg5;
			paramArray[5] = arg6;
			paramArray[6] = arg7;
			paramArray[7] = arg8;
			paramArray[8] = arg9;
			paramArray[9] = arg10;
			paramArray[10] = arg11;
			paramArray[11] = arg12;
			paramArray[12] = arg13;
			paramArray[13] = arg14;
			paramArray[14] = arg15;
			paramArray[15] = arg16;
			paramArray[16] = arg17;
			paramArray[17] = arg18;
			paramArray[18] = arg19;
			paramArray[19] = arg20;
			paramArray[20] = arg21;
			paramArray[21] = arg22;
			paramArray[22] = arg23;
			paramArray[23] = arg24;
			paramArray[24] = arg25;
			paramArray[25] = arg26;
			paramArray[26] = arg27;
			paramArray[27] = arg28;
			paramArray[28] = arg29;
			paramArray[29] = arg30;
			object returnValue = Invoker.MethodReturn(this, "Intersect", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Run()
		{
			object returnValue = Invoker.MethodReturn(this, "Run", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Run(object macro, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[31];
			paramArray[0] = macro;
			paramArray[1] = arg1;
			paramArray[2] = arg2;
			paramArray[3] = arg3;
			paramArray[4] = arg4;
			paramArray[5] = arg5;
			paramArray[6] = arg6;
			paramArray[7] = arg7;
			paramArray[8] = arg8;
			paramArray[9] = arg9;
			paramArray[10] = arg10;
			paramArray[11] = arg11;
			paramArray[12] = arg12;
			paramArray[13] = arg13;
			paramArray[14] = arg14;
			paramArray[15] = arg15;
			paramArray[16] = arg16;
			paramArray[17] = arg17;
			paramArray[18] = arg18;
			paramArray[19] = arg19;
			paramArray[20] = arg20;
			paramArray[21] = arg21;
			paramArray[22] = arg22;
			paramArray[23] = arg23;
			paramArray[24] = arg24;
			paramArray[25] = arg25;
			paramArray[26] = arg26;
			paramArray[27] = arg27;
			paramArray[28] = arg28;
			paramArray[29] = arg29;
			paramArray[30] = arg30;
			object returnValue = Invoker.MethodReturn(this, "Run", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _Run2()
		{
			object returnValue = Invoker.MethodReturn(this, "_Run2", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _Run2(object macro, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[31];
			paramArray[0] = macro;
			paramArray[1] = arg1;
			paramArray[2] = arg2;
			paramArray[3] = arg3;
			paramArray[4] = arg4;
			paramArray[5] = arg5;
			paramArray[6] = arg6;
			paramArray[7] = arg7;
			paramArray[8] = arg8;
			paramArray[9] = arg9;
			paramArray[10] = arg10;
			paramArray[11] = arg11;
			paramArray[12] = arg12;
			paramArray[13] = arg13;
			paramArray[14] = arg14;
			paramArray[15] = arg15;
			paramArray[16] = arg16;
			paramArray[17] = arg17;
			paramArray[18] = arg18;
			paramArray[19] = arg19;
			paramArray[20] = arg20;
			paramArray[21] = arg21;
			paramArray[22] = arg22;
			paramArray[23] = arg23;
			paramArray[24] = arg24;
			paramArray[25] = arg25;
			paramArray[26] = arg26;
			paramArray[27] = arg27;
			paramArray[28] = arg28;
			paramArray[29] = arg29;
			paramArray[30] = arg30;
			object returnValue = Invoker.MethodReturn(this, "_Run2", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SendKeys(object keys)
		{
			object[] paramArray = new object[1];
			paramArray[0] = keys;
			Invoker.Method(this, "SendKeys", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SendKeys(object keys, object wait)
		{
			object[] paramArray = new object[2];
			paramArray[0] = keys;
			paramArray[1] = wait;
			Invoker.Method(this, "SendKeys", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Union(LateBindingApi.Excel.Range arg1, LateBindingApi.Excel.Range arg2)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(arg1,0);
			paramArray.SetValue(arg2,1);
			object returnValue = Invoker.MethodReturn(this, "Union", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Union(LateBindingApi.Excel.Range arg1, LateBindingApi.Excel.Range arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[30];
			paramArray.SetValue(arg1,0);
			paramArray.SetValue(arg2,1);
			paramArray[2] = arg3;
			paramArray[3] = arg4;
			paramArray[4] = arg5;
			paramArray[5] = arg6;
			paramArray[6] = arg7;
			paramArray[7] = arg8;
			paramArray[8] = arg9;
			paramArray[9] = arg10;
			paramArray[10] = arg11;
			paramArray[11] = arg12;
			paramArray[12] = arg13;
			paramArray[13] = arg14;
			paramArray[14] = arg15;
			paramArray[15] = arg16;
			paramArray[16] = arg17;
			paramArray[17] = arg18;
			paramArray[18] = arg19;
			paramArray[19] = arg20;
			paramArray[20] = arg21;
			paramArray[21] = arg22;
			paramArray[22] = arg23;
			paramArray[23] = arg24;
			paramArray[24] = arg25;
			paramArray[25] = arg26;
			paramArray[26] = arg27;
			paramArray[27] = arg28;
			paramArray[28] = arg29;
			paramArray[29] = arg30;
			object returnValue = Invoker.MethodReturn(this, "Union", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ActivateMicrosoftApp(LateBindingApi.Excel.Enums.XlMSApplication index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			Invoker.Method(this, "ActivateMicrosoftApp", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void AddChartAutoFormat(object chart, string name)
		{
			object[] paramArray = new object[2];
			paramArray[0] = chart;
			paramArray[1] = name;
			Invoker.Method(this, "AddChartAutoFormat", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void AddChartAutoFormat(object chart, string name, object description)
		{
			object[] paramArray = new object[3];
			paramArray[0] = chart;
			paramArray[1] = name;
			paramArray[2] = description;
			Invoker.Method(this, "AddChartAutoFormat", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void AddCustomList(object listArray)
		{
			object[] paramArray = new object[1];
			paramArray[0] = listArray;
			Invoker.Method(this, "AddCustomList", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void AddCustomList(object listArray, object byRow)
		{
			object[] paramArray = new object[2];
			paramArray[0] = listArray;
			paramArray[1] = byRow;
			Invoker.Method(this, "AddCustomList", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double CentimetersToPoints(Double centimeters)
		{
			object[] paramArray = new object[1];
			paramArray[0] = centimeters;
			object returnValue = Invoker.MethodReturn(this, "CentimetersToPoints", paramArray);
			return (Double)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool CheckSpelling(string word)
		{
			object[] paramArray = new object[1];
			paramArray[0] = word;
			object returnValue = Invoker.MethodReturn(this, "CheckSpelling", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool CheckSpelling(string word, object customDictionary, object ignoreUppercase)
		{
			object[] paramArray = new object[3];
			paramArray[0] = word;
			paramArray[1] = customDictionary;
			paramArray[2] = ignoreUppercase;
			object returnValue = Invoker.MethodReturn(this, "CheckSpelling", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ConvertFormula(object formula, LateBindingApi.Excel.Enums.XlReferenceStyle fromReferenceStyle)
		{
			object[] paramArray = new object[2];
			paramArray[0] = formula;
			paramArray[1] = fromReferenceStyle;
			object returnValue = Invoker.MethodReturn(this, "ConvertFormula", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ConvertFormula(object formula, LateBindingApi.Excel.Enums.XlReferenceStyle fromReferenceStyle, object toReferenceStyle, object toAbsolute, object relativeTo)
		{
			object[] paramArray = new object[5];
			paramArray[0] = formula;
			paramArray[1] = fromReferenceStyle;
			paramArray[2] = toReferenceStyle;
			paramArray[3] = toAbsolute;
			paramArray[4] = relativeTo;
			object returnValue = Invoker.MethodReturn(this, "ConvertFormula", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DeleteChartAutoFormat(string name)
		{
			object[] paramArray = new object[1];
			paramArray[0] = name;
			Invoker.Method(this, "DeleteChartAutoFormat", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DeleteCustomList(Int32 listNum)
		{
			object[] paramArray = new object[1];
			paramArray[0] = listNum;
			Invoker.Method(this, "DeleteCustomList", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DoubleClick()
		{
			Invoker.Method(this, "DoubleClick", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _FindFile()
		{
			Invoker.Method(this, "_FindFile", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant GetCustomListContents(Int32 listNum)
		{
			object[] paramArray = new object[1];
			paramArray[0] = listNum;
			object returnValue = Invoker.MethodReturn(this, "GetCustomListContents", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 GetCustomListNum(object listArray)
		{
			object[] paramArray = new object[1];
			paramArray[0] = listArray;
			object returnValue = Invoker.MethodReturn(this, "GetCustomListNum", paramArray);
			return (Int32)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
        public COMVariant GetOpenFilename(object fileFilter)
        {
            object[] paramArray = new object[1];
            paramArray[0] = fileFilter;
            object returnValue = Invoker.MethodReturn(this, "GetOpenFilename", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant GetOpenFilename(object fileFilter, object filterIndex, object title, object buttonText, object multiSelect)
		{
			object[] paramArray = new object[5];
			paramArray[0] = fileFilter;
			paramArray[1] = filterIndex;
			paramArray[2] = title;
			paramArray[3] = buttonText;
			paramArray[4] = multiSelect;
			object returnValue = Invoker.MethodReturn(this, "GetOpenFilename", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant GetSaveAsFilename()
		{
			object returnValue = Invoker.MethodReturn(this, "GetSaveAsFilename", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant GetSaveAsFilename(object initialFilename, object fileFilter, object filterIndex, object title, object buttonText)
		{
			object[] paramArray = new object[5];
			paramArray[0] = initialFilename;
			paramArray[1] = fileFilter;
			paramArray[2] = filterIndex;
			paramArray[3] = title;
			paramArray[4] = buttonText;
			object returnValue = Invoker.MethodReturn(this, "GetSaveAsFilename", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Goto()
		{
			Invoker.Method(this, "Goto", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Goto(object reference, object scroll)
		{
			object[] paramArray = new object[2];
			paramArray[0] = reference;
			paramArray[1] = scroll;
			Invoker.Method(this, "Goto", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Help()
		{
			Invoker.Method(this, "Help", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Help(object helpFile, object helpContextID)
		{
			object[] paramArray = new object[2];
			paramArray[0] = helpFile;
			paramArray[1] = helpContextID;
			Invoker.Method(this, "Help", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double InchesToPoints(Double inches)
		{
			object[] paramArray = new object[1];
			paramArray[0] = inches;
			object returnValue = Invoker.MethodReturn(this, "InchesToPoints", paramArray);
			return (Double)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant InputBox(string prompt)
		{
			object[] paramArray = new object[1];
			paramArray[0] = prompt;
			object returnValue = Invoker.MethodReturn(this, "InputBox", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant InputBox(string prompt, object title, object _default, object left, object top, object helpFile, object helpContextID, object type)
		{
			object[] paramArray = new object[8];
			paramArray[0] = prompt;
			paramArray[1] = title;
			paramArray[2] = _default;
			paramArray[3] = left;
			paramArray[4] = top;
			paramArray[5] = helpFile;
			paramArray[6] = helpContextID;
			paramArray[7] = type;
			object returnValue = Invoker.MethodReturn(this, "InputBox", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void MacroOptions()
		{
			Invoker.Method(this, "MacroOptions", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL9")]
		public void MacroOptions(object macro, object description, object hasMenu, object menuText, object hasShortcutKey, object shortcutKey, object category, object statusBar, object helpContextID, object helpFile)
		{
			object[] paramArray = new object[10];
			paramArray[0] = macro;
			paramArray[1] = description;
			paramArray[2] = hasMenu;
			paramArray[3] = menuText;
			paramArray[4] = hasShortcutKey;
			paramArray[5] = shortcutKey;
			paramArray[6] = category;
			paramArray[7] = statusBar;
			paramArray[8] = helpContextID;
			paramArray[9] = helpFile;
			Invoker.Method(this, "MacroOptions", paramArray);
		}

		[SupportByLibrary("XL14")]
		public void MacroOptions(object macro, object description, object hasMenu, object menuText, object hasShortcutKey, object shortcutKey, object category, object statusBar, object helpContextID, object helpFile, object argumentDescriptions)
		{
			object[] paramArray = new object[11];
			paramArray[0] = macro;
			paramArray[1] = description;
			paramArray[2] = hasMenu;
			paramArray[3] = menuText;
			paramArray[4] = hasShortcutKey;
			paramArray[5] = shortcutKey;
			paramArray[6] = category;
			paramArray[7] = statusBar;
			paramArray[8] = helpContextID;
			paramArray[9] = helpFile;
			paramArray[10] = argumentDescriptions;
			Invoker.Method(this, "MacroOptions", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void MailLogoff()
		{
			Invoker.Method(this, "MailLogoff", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void MailLogon()
		{
			Invoker.Method(this, "MailLogon", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void MailLogon(object name, object password, object downloadNewMail)
		{
			object[] paramArray = new object[3];
			paramArray[0] = name;
			paramArray[1] = password;
			paramArray[2] = downloadNewMail;
			Invoker.Method(this, "MailLogon", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Workbook NextLetter()
		{
			object returnValue = Invoker.MethodReturn(this, "NextLetter", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Workbook newClass = new LateBindingApi.Excel.Workbook(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void OnKey(string key)
		{
			object[] paramArray = new object[1];
			paramArray[0] = key;
			Invoker.Method(this, "OnKey", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void OnKey(string key, object procedure)
		{
			object[] paramArray = new object[2];
			paramArray[0] = key;
			paramArray[1] = procedure;
			Invoker.Method(this, "OnKey", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void OnRepeat(string text, string procedure)
		{
			object[] paramArray = new object[2];
			paramArray[0] = text;
			paramArray[1] = procedure;
			Invoker.Method(this, "OnRepeat", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void OnTime(object earliestTime, string procedure)
		{
			object[] paramArray = new object[2];
			paramArray[0] = earliestTime;
			paramArray[1] = procedure;
			Invoker.Method(this, "OnTime", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void OnTime(object earliestTime, string procedure, object latestTime, object schedule)
		{
			object[] paramArray = new object[4];
			paramArray[0] = earliestTime;
			paramArray[1] = procedure;
			paramArray[2] = latestTime;
			paramArray[3] = schedule;
			Invoker.Method(this, "OnTime", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void OnUndo(string text, string procedure)
		{
			object[] paramArray = new object[2];
			paramArray[0] = text;
			paramArray[1] = procedure;
			Invoker.Method(this, "OnUndo", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Quit()
		{
			Invoker.Method(this, "Quit", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void RecordMacro()
		{
			Invoker.Method(this, "RecordMacro", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void RecordMacro(object basicCode, object xlmCode)
		{
			object[] paramArray = new object[2];
			paramArray[0] = basicCode;
			paramArray[1] = xlmCode;
			Invoker.Method(this, "RecordMacro", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool RegisterXLL(string filename)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filename;
			object returnValue = Invoker.MethodReturn(this, "RegisterXLL", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Repeat()
		{
			Invoker.Method(this, "Repeat", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ResetTipWizard()
		{
			Invoker.Method(this, "ResetTipWizard", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Save()
		{
			Invoker.Method(this, "Save", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Save(object filename)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filename;
			Invoker.Method(this, "Save", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SaveWorkspace()
		{
			Invoker.Method(this, "SaveWorkspace", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SaveWorkspace(object filename)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filename;
			Invoker.Method(this, "SaveWorkspace", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SetDefaultChart()
		{
			Invoker.Method(this, "SetDefaultChart", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SetDefaultChart(object formatName, object gallery)
		{
			object[] paramArray = new object[2];
			paramArray[0] = formatName;
			paramArray[1] = gallery;
			Invoker.Method(this, "SetDefaultChart", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Undo()
		{
			Invoker.Method(this, "Undo", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Volatile()
		{
			Invoker.Method(this, "Volatile", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Volatile(object _volatile)
		{
			object[] paramArray = new object[1];
			paramArray[0] = _volatile;
			Invoker.Method(this, "Volatile", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Wait(object time)
		{
			object[] paramArray = new object[1];
			paramArray[0] = time;
			Invoker.Method(this, "_Wait", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _WSFunction()
		{
			object returnValue = Invoker.MethodReturn(this, "_WSFunction", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _WSFunction(object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[30];
			paramArray[0] = arg1;
			paramArray[1] = arg2;
			paramArray[2] = arg3;
			paramArray[3] = arg4;
			paramArray[4] = arg5;
			paramArray[5] = arg6;
			paramArray[6] = arg7;
			paramArray[7] = arg8;
			paramArray[8] = arg9;
			paramArray[9] = arg10;
			paramArray[10] = arg11;
			paramArray[11] = arg12;
			paramArray[12] = arg13;
			paramArray[13] = arg14;
			paramArray[14] = arg15;
			paramArray[15] = arg16;
			paramArray[16] = arg17;
			paramArray[17] = arg18;
			paramArray[18] = arg19;
			paramArray[19] = arg20;
			paramArray[20] = arg21;
			paramArray[21] = arg22;
			paramArray[22] = arg23;
			paramArray[23] = arg24;
			paramArray[24] = arg25;
			paramArray[25] = arg26;
			paramArray[26] = arg27;
			paramArray[27] = arg28;
			paramArray[28] = arg29;
			paramArray[29] = arg30;
			object returnValue = Invoker.MethodReturn(this, "_WSFunction", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Wait(object time)
		{
			object[] paramArray = new object[1];
			paramArray[0] = time;
			object returnValue = Invoker.MethodReturn(this, "Wait", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string GetPhonetic()
		{
			object returnValue = Invoker.MethodReturn(this, "GetPhonetic", null);
			return (string)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string GetPhonetic(object text)
		{
			object[] paramArray = new object[1];
			paramArray[0] = text;
			object returnValue = Invoker.MethodReturn(this, "GetPhonetic", paramArray);
			return (string)returnValue;
		}

		[SupportByLibrary("XL9")]
		public void Dummy12()
		{
			Invoker.Method(this, "Dummy12", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void Dummy12(LateBindingApi.Excel.PivotTable p1, LateBindingApi.Excel.PivotTable p2)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(p1,0);
			paramArray.SetValue(p2,1);
			Invoker.Method(this, "Dummy12", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void CalculateFull()
		{
			Invoker.Method(this, "CalculateFull", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool FindFile()
		{
			object returnValue = Invoker.MethodReturn(this, "FindFile", null);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void Dummy14()
		{
			Invoker.Method(this, "Dummy14", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void CalculateFullRebuild()
		{
			Invoker.Method(this, "CalculateFullRebuild", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void CheckAbort()
		{
			Invoker.Method(this, "CheckAbort", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void CheckAbort(object keepAbort)
		{
			object[] paramArray = new object[1];
			paramArray[0] = keepAbort;
			Invoker.Method(this, "CheckAbort", paramArray);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void DisplayXMLSourcePane()
		{
			Invoker.Method(this, "DisplayXMLSourcePane", null);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public void DisplayXMLSourcePane(object xmlMap)
		{
			object[] paramArray = new object[1];
			paramArray[0] = xmlMap;
			Invoker.Method(this, "DisplayXMLSourcePane", paramArray);
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public COMVariant Support(COMObject _object, Int32 iD)
		{
			object[] paramArray = new object[2];
			paramArray[0] = _object;
			paramArray[1] = iD;
			object returnValue = Invoker.MethodReturn(this, "Support", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL11","XL12","XL14")]
		public COMVariant Support(COMObject _object, Int32 iD, object arg)
		{
			object[] paramArray = new object[3];
			paramArray[0] = _object;
			paramArray[1] = iD;
			paramArray[2] = arg;
			object returnValue = Invoker.MethodReturn(this, "Support", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL12","XL14")]
		public void CalculateUntilAsyncQueriesDone()
		{
			Invoker.Method(this, "CalculateUntilAsyncQueriesDone", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public Int32 SharePointVersion(string bstrUrl)
		{
			object[] paramArray = new object[1];
			paramArray[0] = bstrUrl;
			object returnValue = Invoker.MethodReturn(this, "SharePointVersion", paramArray);
			return (Int32)returnValue;
		}

		[SupportByLibrary("XL14")]
		public void _MacroOptions()
		{
			Invoker.Method(this, "_MacroOptions", null);
		}

		[SupportByLibrary("XL14")]
		public void _MacroOptions(object macro, object description, object hasMenu, object menuText, object hasShortcutKey, object shortcutKey, object category, object statusBar, object helpContextID, object helpFile)
		{
			object[] paramArray = new object[10];
			paramArray[0] = macro;
			paramArray[1] = description;
			paramArray[2] = hasMenu;
			paramArray[3] = menuText;
			paramArray[4] = hasShortcutKey;
			paramArray[5] = shortcutKey;
			paramArray[6] = category;
			paramArray[7] = statusBar;
			paramArray[8] = helpContextID;
			paramArray[9] = helpFile;
			Invoker.Method(this, "_MacroOptions", paramArray);
		}

		#endregion

	}
}
