//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class CubeField : COMObject
	{
		#region Construction

		public CubeField(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public CubeField(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public CubeField(COMObject replacedObject) : base(replacedObject)
		{
		}

		public CubeField()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCubeFieldType CubeFieldType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CubeFieldType");
				return (LateBindingApi.Excel.Enums.XlCubeFieldType)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Caption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Caption");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Caption", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Value
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Value");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlPivotFieldOrientation Orientation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Orientation");
				return (LateBindingApi.Excel.Enums.XlPivotFieldOrientation)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Orientation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Position
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Position");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Position", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.TreeviewControl TreeviewControl
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TreeviewControl");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.TreeviewControl newClass = new LateBindingApi.Excel.TreeviewControl(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToColumn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToColumn");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToColumn", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToHide
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToHide");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToHide", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToPage
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToPage");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToPage", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToRow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToRow");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToRow", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DragToData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DragToData");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DragToData", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 HiddenLevels
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HiddenLevels");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HiddenLevels", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool HasMemberProperties
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasMemberProperties");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlLayoutFormType LayoutForm
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LayoutForm");
				return (LateBindingApi.Excel.Enums.XlLayoutFormType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LayoutForm", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotFields PivotFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotFields");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotFields newClass = new LateBindingApi.Excel.PivotFields(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool EnableMultiplePageItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableMultiplePageItems");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableMultiplePageItems", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlSubtototalLocationType LayoutSubtotalLocation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LayoutSubtotalLocation");
				return (LateBindingApi.Excel.Enums.XlSubtototalLocationType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LayoutSubtotalLocation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool ShowInFieldList
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowInFieldList");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowInFieldList", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public string _Caption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_Caption");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool IncludeNewItemsInFilter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IncludeNewItemsInFilter");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "IncludeNewItemsInFilter", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCubeFieldSubType CubeFieldSubType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CubeFieldSubType");
				return (LateBindingApi.Excel.Enums.XlCubeFieldSubType)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool AllItemsVisible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllItemsVisible");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public string CurrentPageName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CurrentPageName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CurrentPageName", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool IsDate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsDate");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL14")]
		public bool FlattenHierarchies
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FlattenHierarchies");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FlattenHierarchies", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool HierarchizeDistinct
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HierarchizeDistinct");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HierarchizeDistinct", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void AddMemberPropertyField(string property)
		{
			object[] paramArray = new object[1];
			paramArray[0] = property;
			Invoker.Method(this, "AddMemberPropertyField", paramArray);
		}

		[SupportByLibrary("XL10","XL11")]
		public void AddMemberPropertyField(string property, object propertyOrder)
		{
			object[] paramArray = new object[2];
			paramArray[0] = property;
			paramArray[1] = propertyOrder;
			Invoker.Method(this, "AddMemberPropertyField", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void AddMemberPropertyField(string property, object propertyOrder, object propertyDisplayedIn)
		{
			object[] paramArray = new object[3];
			paramArray[0] = property;
			paramArray[1] = propertyOrder;
			paramArray[2] = propertyDisplayedIn;
			Invoker.Method(this, "AddMemberPropertyField", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void _AddMemberPropertyField(string property)
		{
			object[] paramArray = new object[1];
			paramArray[0] = property;
			Invoker.Method(this, "_AddMemberPropertyField", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void _AddMemberPropertyField(string property, object propertyOrder)
		{
			object[] paramArray = new object[2];
			paramArray[0] = property;
			paramArray[1] = propertyOrder;
			Invoker.Method(this, "_AddMemberPropertyField", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ClearManualFilter()
		{
			Invoker.Method(this, "ClearManualFilter", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void CreatePivotFields()
		{
			Invoker.Method(this, "CreatePivotFields", null);
		}

		#endregion

	}
}
