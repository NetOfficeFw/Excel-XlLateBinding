//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL12","XL14")]
	public class Page : COMObject
	{
		#region Construction

		public Page(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Page(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Page(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Page()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.HeaderFooter LeftHeader
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LeftHeader");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.HeaderFooter newClass = new LateBindingApi.Excel.HeaderFooter(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.HeaderFooter CenterHeader
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CenterHeader");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.HeaderFooter newClass = new LateBindingApi.Excel.HeaderFooter(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.HeaderFooter RightHeader
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RightHeader");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.HeaderFooter newClass = new LateBindingApi.Excel.HeaderFooter(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.HeaderFooter LeftFooter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LeftFooter");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.HeaderFooter newClass = new LateBindingApi.Excel.HeaderFooter(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.HeaderFooter CenterFooter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CenterFooter");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.HeaderFooter newClass = new LateBindingApi.Excel.HeaderFooter(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.HeaderFooter RightFooter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RightFooter");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.HeaderFooter newClass = new LateBindingApi.Excel.HeaderFooter(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		#endregion

	}
}
