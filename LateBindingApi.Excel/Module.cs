//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class Module : COMObject
	{
		#region Construction

		public Module(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Module(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Module(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Module()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string CodeName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CodeName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string _CodeName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_CodeName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "_CodeName", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Index
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Index");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Next
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Next");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnDoubleClick
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnDoubleClick");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnDoubleClick", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnSheetActivate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnSheetActivate");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnSheetActivate", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnSheetDeactivate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnSheetDeactivate");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnSheetDeactivate", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.PageSetup PageSetup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PageSetup");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PageSetup newClass = new LateBindingApi.Excel.PageSetup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Previous
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Previous");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ProtectContents
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectContents");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ProtectionMode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ProtectionMode");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlSheetVisibility Visible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Visible");
				return (LateBindingApi.Excel.Enums.XlSheetVisibility)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Visible", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shapes Shapes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Shapes");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Shapes newClass = new LateBindingApi.Excel.Shapes(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Activate()
		{
			Invoker.Method(this, "Activate", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Copy()
		{
			Invoker.Method(this, "Copy", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Copy(object before, object after)
		{
			object[] paramArray = new object[2];
			paramArray[0] = before;
			paramArray[1] = after;
			Invoker.Method(this, "Copy", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Move()
		{
			Invoker.Method(this, "Move", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Move(object before, object after)
		{
			object[] paramArray = new object[2];
			paramArray[0] = before;
			paramArray[1] = after;
			Invoker.Method(this, "Move", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _PrintOut()
		{
			Invoker.Method(this, "_PrintOut", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate)
		{
			object[] paramArray = new object[7];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			Invoker.Method(this, "_PrintOut", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy18()
		{
			Invoker.Method(this, "_Dummy18", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Protect()
		{
			Invoker.Method(this, "Protect", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly)
		{
			object[] paramArray = new object[5];
			paramArray[0] = password;
			paramArray[1] = drawingObjects;
			paramArray[2] = contents;
			paramArray[3] = scenarios;
			paramArray[4] = userInterfaceOnly;
			Invoker.Method(this, "Protect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy21()
		{
			Invoker.Method(this, "_Dummy21", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _Dummy23()
		{
			Invoker.Method(this, "_Dummy23", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SaveAs(string filename)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filename;
			Invoker.Method(this, "SaveAs", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SaveAs(string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout)
		{
			object[] paramArray = new object[9];
			paramArray[0] = filename;
			paramArray[1] = fileFormat;
			paramArray[2] = password;
			paramArray[3] = writeResPassword;
			paramArray[4] = readOnlyRecommended;
			paramArray[5] = createBackup;
			paramArray[6] = addToMru;
			paramArray[7] = textCodepage;
			paramArray[8] = textVisualLayout;
			Invoker.Method(this, "SaveAs", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Select()
		{
			Invoker.Method(this, "Select", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Select(object replace)
		{
			object[] paramArray = new object[1];
			paramArray[0] = replace;
			Invoker.Method(this, "Select", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Unprotect()
		{
			Invoker.Method(this, "Unprotect", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Unprotect(object password)
		{
			object[] paramArray = new object[1];
			paramArray[0] = password;
			Invoker.Method(this, "Unprotect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant InsertFile(object filename)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filename;
			object returnValue = Invoker.MethodReturn(this, "InsertFile", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant InsertFile(object filename, object merge)
		{
			object[] paramArray = new object[2];
			paramArray[0] = filename;
			paramArray[1] = merge;
			object returnValue = Invoker.MethodReturn(this, "InsertFile", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _Protect()
		{
			Invoker.Method(this, "_Protect", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _Protect(object password, object drawingObjects, object contents, object scenarios, object userInterfaceOnly)
		{
			object[] paramArray = new object[5];
			paramArray[0] = password;
			paramArray[1] = drawingObjects;
			paramArray[2] = contents;
			paramArray[3] = scenarios;
			paramArray[4] = userInterfaceOnly;
			Invoker.Method(this, "_Protect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _SaveAs(string filename)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filename;
			Invoker.Method(this, "_SaveAs", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _SaveAs(string filename, object fileFormat, object password, object writeResPassword, object readOnlyRecommended, object createBackup, object addToMru, object textCodepage, object textVisualLayout)
		{
			object[] paramArray = new object[9];
			paramArray[0] = filename;
			paramArray[1] = fileFormat;
			paramArray[2] = password;
			paramArray[3] = writeResPassword;
			paramArray[4] = readOnlyRecommended;
			paramArray[5] = createBackup;
			paramArray[6] = addToMru;
			paramArray[7] = textCodepage;
			paramArray[8] = textVisualLayout;
			Invoker.Method(this, "_SaveAs", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void __PrintOut()
		{
			Invoker.Method(this, "__PrintOut", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void __PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate)
		{
			object[] paramArray = new object[7];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			Invoker.Method(this, "__PrintOut", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void PrintOut()
		{
			Invoker.Method(this, "PrintOut", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate)
		{
			object[] paramArray = new object[7];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			Invoker.Method(this, "PrintOut", paramArray);
		}

		#endregion

	}
}
