//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF10","OF11","OF12","OF14")]
	public class Signature : _IMsoDispObj
	{
		#region Construction

		public Signature(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Signature(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Signature(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Signature()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public string Signer
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Signer");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public string Issuer
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Issuer");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public COMVariant ExpireDate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ExpireDate");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public bool IsValid
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsValid");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public bool AttachCertificate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AttachCertificate");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AttachCertificate", value);
			}						
		}


		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public bool IsCertificateExpired
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsCertificateExpired");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public bool IsCertificateRevoked
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsCertificateRevoked");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public COMVariant SignDate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SignDate");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public bool IsSigned
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsSigned");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.SignatureInfo Details
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Details");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.SignatureInfo newClass = new LateBindingApi.Office.SignatureInfo(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public bool CanSetup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CanSetup");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.SignatureSetup Setup
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Setup");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.SignatureSetup newClass = new LateBindingApi.Office.SignatureSetup(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public bool IsSignatureLine
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsSignatureLine");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public COMObject SignatureLineShape
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SignatureLineShape");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 SortHint
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SortHint");
				return (Int32)returnValue;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("OF10","OF11","OF12","OF14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Sign()
		{
			Invoker.Method(this, "Sign", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Sign(object varSigImg, object varDelSuggSigner, object varDelSuggSignerLine2, object varDelSuggSignerEmail)
		{
			object[] paramArray = new object[4];
			paramArray[0] = varSigImg;
			paramArray[1] = varDelSuggSigner;
			paramArray[2] = varDelSuggSignerLine2;
			paramArray[3] = varDelSuggSignerEmail;
			Invoker.Method(this, "Sign", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void ShowDetails()
		{
			Invoker.Method(this, "ShowDetails", null);
		}

		#endregion

	}
}
