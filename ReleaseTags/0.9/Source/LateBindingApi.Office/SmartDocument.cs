//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF11","OF12","OF14")]
	public class SmartDocument : _IMsoDispObj
	{
		#region Construction

		public SmartDocument(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public SmartDocument(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public SmartDocument(COMObject replacedObject) : base(replacedObject)
		{
		}

		public SmartDocument()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF11","OF12","OF14")]
		public string SolutionID
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SolutionID");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SolutionID", value);
			}						
		}


		[SupportByLibrary("OF11","OF12","OF14")]
		public string SolutionURL
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SolutionURL");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SolutionURL", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("OF11","OF12","OF14")]
		public void PickSolution(bool considerAllSchemas)
		{
			object[] paramArray = new object[1];
			paramArray[0] = considerAllSchemas;
			Invoker.Method(this, "PickSolution", paramArray);
		}

		[SupportByLibrary("OF11","OF12","OF14")]
		public void RefreshPane()
		{
			Invoker.Method(this, "RefreshPane", null);
		}

		#endregion

	}
}
