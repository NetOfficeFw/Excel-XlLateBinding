//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF12","OF14")]
	public class ChartFillFormat : COMObject
	{
		#region Construction

		public ChartFillFormat(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public ChartFillFormat(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public ChartFillFormat(COMObject replacedObject) : base(replacedObject)
		{
		}

		public ChartFillFormat()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.ChartColorFormat BackColor
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BackColor");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.ChartColorFormat newClass = new LateBindingApi.Office.ChartColorFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.ChartColorFormat ForeColor
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ForeColor");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.ChartColorFormat newClass = new LateBindingApi.Office.ChartColorFormat(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 GradientColorType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GradientColorType");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Double GradientDegree
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GradientDegree");
				return (Double)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 GradientStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GradientStyle");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 GradientVariant
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GradientVariant");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 Pattern
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Pattern");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 PresetGradientType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PresetGradientType");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 PresetTexture
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PresetTexture");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string TextureName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TextureName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 TextureType
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TextureType");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 Visible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Visible");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Visible", value);
			}						
		}


		[SupportByLibrary("OF14")]
		public COMObject Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF14")]
		public Int32 Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("OF14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("OF12","OF14")]
		public void OneColorGradient(Int32 style, Int32 variant, Double degree)
		{
			object[] paramArray = new object[3];
			paramArray[0] = style;
			paramArray[1] = variant;
			paramArray[2] = degree;
			Invoker.Method(this, "OneColorGradient", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void TwoColorGradient(Int32 style, Int32 variant)
		{
			object[] paramArray = new object[2];
			paramArray[0] = style;
			paramArray[1] = variant;
			Invoker.Method(this, "TwoColorGradient", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void PresetTextured(Int32 presetTexture)
		{
			object[] paramArray = new object[1];
			paramArray[0] = presetTexture;
			Invoker.Method(this, "PresetTextured", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Solid()
		{
			Invoker.Method(this, "Solid", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Patterned(Int32 pattern)
		{
			object[] paramArray = new object[1];
			paramArray[0] = pattern;
			Invoker.Method(this, "Patterned", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void UserPicture(object pictureFile, object pictureFormat, object pictureStackUnit, object picturePlacement)
		{
			object[] paramArray = new object[4];
			paramArray[0] = pictureFile;
			paramArray[1] = pictureFormat;
			paramArray[2] = pictureStackUnit;
			paramArray[3] = picturePlacement;
			Invoker.Method(this, "UserPicture", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void UserTextured(string textureFile)
		{
			object[] paramArray = new object[1];
			paramArray[0] = textureFile;
			Invoker.Method(this, "UserTextured", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void PresetGradient(Int32 style, Int32 variant, Int32 presetGradientType)
		{
			object[] paramArray = new object[3];
			paramArray[0] = style;
			paramArray[1] = variant;
			paramArray[2] = presetGradientType;
			Invoker.Method(this, "PresetGradient", paramArray);
		}

		#endregion

	}
}
