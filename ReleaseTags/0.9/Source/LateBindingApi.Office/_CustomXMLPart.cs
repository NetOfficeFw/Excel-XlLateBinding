//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF12","OF14")]
	public class _CustomXMLPart : _IMsoDispObj
	{
		#region Construction

		public _CustomXMLPart(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public _CustomXMLPart(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public _CustomXMLPart(COMObject replacedObject) : base(replacedObject)
		{
		}

		public _CustomXMLPart()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF12","OF14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.CustomXMLNode DocumentElement
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DocumentElement");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.CustomXMLNode newClass = new LateBindingApi.Office.CustomXMLNode(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string Id
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Id");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string NamespaceURI
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "NamespaceURI");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.CustomXMLSchemaCollection SchemaCollection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SchemaCollection");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.CustomXMLSchemaCollection newClass = new LateBindingApi.Office.CustomXMLSchemaCollection(this, returnValue);
				return newClass;
			}
			set
			{
				Invoker.PropertySet(this, "SchemaCollection", value);
			}						
		}


		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.CustomXMLPrefixMappings NamespaceManager
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "NamespaceManager");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.CustomXMLPrefixMappings newClass = new LateBindingApi.Office.CustomXMLPrefixMappings(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string XML
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "XML");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.CustomXMLValidationErrors Errors
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Errors");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.CustomXMLValidationErrors newClass = new LateBindingApi.Office.CustomXMLValidationErrors(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public bool BuiltIn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BuiltIn");
				return (bool)returnValue;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("OF12","OF14")]
		public void AddNode(LateBindingApi.Office.CustomXMLNode parent, string name, string namespaceURI, LateBindingApi.Office.CustomXMLNode nextSibling, LateBindingApi.Office.Enums.MsoCustomXMLNodeType nodeType, string nodeValue)
		{
			object[] paramArray = new object[6];
			paramArray.SetValue(parent,0);
			paramArray[1] = name;
			paramArray[2] = namespaceURI;
			paramArray.SetValue(nextSibling,3);
			paramArray[4] = nodeType;
			paramArray[5] = nodeValue;
			Invoker.Method(this, "AddNode", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("OF12","OF14")]
		public bool Load(string filePath)
		{
			object[] paramArray = new object[1];
			paramArray[0] = filePath;
			object returnValue = Invoker.MethodReturn(this, "Load", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("OF12","OF14")]
		public bool LoadXML(string xML)
		{
			object[] paramArray = new object[1];
			paramArray[0] = xML;
			object returnValue = Invoker.MethodReturn(this, "LoadXML", paramArray);
			return (bool)returnValue;
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.CustomXMLNodes SelectNodes(string xPath)
		{
			object[] paramArray = new object[1];
			paramArray[0] = xPath;
			object returnValue = Invoker.MethodReturn(this, "SelectNodes", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Office.CustomXMLNodes newClass = new LateBindingApi.Office.CustomXMLNodes(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.CustomXMLNode SelectSingleNode(string xPath)
		{
			object[] paramArray = new object[1];
			paramArray[0] = xPath;
			object returnValue = Invoker.MethodReturn(this, "SelectSingleNode", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Office.CustomXMLNode newClass = new LateBindingApi.Office.CustomXMLNode(this, returnValue);
			return newClass;
		}

		#endregion

	}
}
