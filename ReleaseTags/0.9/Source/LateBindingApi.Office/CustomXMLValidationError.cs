//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF12","OF14")]
	public class CustomXMLValidationError : _IMsoDispObj
	{
		#region Construction

		public CustomXMLValidationError(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public CustomXMLValidationError(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public CustomXMLValidationError(COMObject replacedObject) : base(replacedObject)
		{
		}

		public CustomXMLValidationError()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("OF12","OF14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.CustomXMLNode Node
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Node");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.CustomXMLNode newClass = new LateBindingApi.Office.CustomXMLNode(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public string Text
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Text");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public LateBindingApi.Office.Enums.MsoCustomXMLValidationErrorType Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (LateBindingApi.Office.Enums.MsoCustomXMLValidationErrorType)returnValue;
			}
		}

		[SupportByLibrary("OF12","OF14")]
		public Int32 ErrorCode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ErrorCode");
				return (Int32)returnValue;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("OF12","OF14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		#endregion

	}
}
