//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Office
{
	[SupportByLibrary("OF12","OF14")]
	public class IBlogExtensibility : COMObject
	{
		#region Construction

		public IBlogExtensibility(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public IBlogExtensibility(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public IBlogExtensibility(COMObject replacedObject) : base(replacedObject)
		{
		}

		public IBlogExtensibility()
		{
		}

		#endregion

		#region Properties

		#endregion

		#region Methods

		[SupportByLibrary("OF12","OF14")]
		public void BlogProviderProperties(string blogProvider, string friendlyName, LateBindingApi.Office.Enums.MsoBlogCategorySupport categorySupport, bool padding)
		{
			object[] paramArray = new object[4];
			paramArray.SetValue(blogProvider,0);
			paramArray.SetValue(friendlyName,1);
			paramArray.SetValue(categorySupport,2);
			paramArray.SetValue(padding,3);
			Invoker.Method(this, "BlogProviderProperties", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void SetupBlogAccount(string account, Int32 parentWindow, COMObject document, bool newAccount, bool showPictureUI)
		{
			object[] paramArray = new object[5];
			paramArray[0] = account;
			paramArray[1] = parentWindow;
			paramArray[2] = document;
			paramArray[3] = newAccount;
			paramArray.SetValue(showPictureUI,4);
			Invoker.Method(this, "SetupBlogAccount", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void GetUserBlogs(string account, Int32 parentWindow, COMObject document, object blogNames, object blogIDs, object blogURLs)
		{
			object[] paramArray = new object[6];
			paramArray[0] = account;
			paramArray[1] = parentWindow;
			paramArray[2] = document;
			paramArray.SetValue(blogNames,3);
			paramArray.SetValue(blogIDs,4);
			paramArray.SetValue(blogURLs,5);
			Invoker.Method(this, "GetUserBlogs", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void GetRecentPosts(string account, Int32 parentWindow, COMObject document, object postTitles, object postDates, object postIDs)
		{
			object[] paramArray = new object[6];
			paramArray[0] = account;
			paramArray[1] = parentWindow;
			paramArray[2] = document;
			paramArray.SetValue(postTitles,3);
			paramArray.SetValue(postDates,4);
			paramArray.SetValue(postIDs,5);
			Invoker.Method(this, "GetRecentPosts", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void Open(string account, string postID, Int32 parentWindow, string xHTML, string title, string datePosted, object categories)
		{
			object[] paramArray = new object[7];
			paramArray[0] = account;
			paramArray[1] = postID;
			paramArray[2] = parentWindow;
			paramArray.SetValue(xHTML,3);
			paramArray.SetValue(title,4);
			paramArray.SetValue(datePosted,5);
			paramArray.SetValue(categories,6);
			Invoker.Method(this, "Open", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void PublishPost(string account, Int32 parentWindow, COMObject document, string xHTML, string title, string dateTime, object categories, bool draft, string postID, string publishMessage)
		{
			object[] paramArray = new object[10];
			paramArray[0] = account;
			paramArray[1] = parentWindow;
			paramArray[2] = document;
			paramArray[3] = xHTML;
			paramArray[4] = title;
			paramArray[5] = dateTime;
			paramArray[6] = categories;
			paramArray[7] = draft;
			paramArray.SetValue(postID,8);
			paramArray.SetValue(publishMessage,9);
			Invoker.Method(this, "PublishPost", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void RepublishPost(string account, Int32 parentWindow, COMObject document, string postID, string xHTML, string title, string dateTime, object categories, bool draft, string publishMessage)
		{
			object[] paramArray = new object[10];
			paramArray[0] = account;
			paramArray[1] = parentWindow;
			paramArray[2] = document;
			paramArray[3] = postID;
			paramArray[4] = xHTML;
			paramArray[5] = title;
			paramArray[6] = dateTime;
			paramArray[7] = categories;
			paramArray[8] = draft;
			paramArray.SetValue(publishMessage,9);
			Invoker.Method(this, "RepublishPost", paramArray);
		}

		[SupportByLibrary("OF12","OF14")]
		public void GetCategories(string account, Int32 parentWindow, COMObject document, object categories)
		{
			object[] paramArray = new object[4];
			paramArray[0] = account;
			paramArray[1] = parentWindow;
			paramArray[2] = document;
			paramArray.SetValue(categories,3);
			Invoker.Method(this, "GetCategories", paramArray);
		}

		#endregion

	}
}
