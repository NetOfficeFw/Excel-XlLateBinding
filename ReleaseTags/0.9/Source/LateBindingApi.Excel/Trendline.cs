//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class Trendline : COMObject
	{
		#region Construction

		public Trendline(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Trendline(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Trendline(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Trendline()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Backward
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Backward");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Backward", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Border Border
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Border");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Border newClass = new LateBindingApi.Excel.Border(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.DataLabel DataLabel
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataLabel");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.DataLabel newClass = new LateBindingApi.Excel.DataLabel(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayEquation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayEquation");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayEquation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayRSquared
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayRSquared");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayRSquared", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Forward
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Forward");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Forward", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Index
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Index");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double Intercept
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Intercept");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Intercept", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool InterceptIsAuto
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "InterceptIsAuto");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "InterceptIsAuto", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool NameIsAuto
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "NameIsAuto");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "NameIsAuto", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Order
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Order");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Order", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Period
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Period");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Period", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlTrendlineType Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (LateBindingApi.Excel.Enums.XlTrendlineType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Type", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public Double Backward2
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Backward2");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Backward2", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public Double Forward2
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Forward2");
				return (Double)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Forward2", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.ChartFormat Format
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Format");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.ChartFormat newClass = new LateBindingApi.Excel.ChartFormat(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ClearFormats()
		{
			object returnValue = Invoker.MethodReturn(this, "ClearFormats", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Delete()
		{
			object returnValue = Invoker.MethodReturn(this, "Delete", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Select()
		{
			object returnValue = Invoker.MethodReturn(this, "Select", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		#endregion

	}
}
