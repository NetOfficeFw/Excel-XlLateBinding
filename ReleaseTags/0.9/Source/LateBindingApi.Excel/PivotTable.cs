//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class PivotTable : COMObject
	{
		#region Construction

		public PivotTable(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public PivotTable(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public PivotTable(COMObject replacedObject) : base(replacedObject)
		{
		}

		public PivotTable()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ColumnFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ColumnFields", null);
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject get_ColumnFields(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "ColumnFields", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ColumnGrand
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ColumnGrand");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ColumnGrand", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range ColumnRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ColumnRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range DataBodyRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataBodyRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject DataFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataFields", null);
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject get_DataFields(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "DataFields", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range DataLabelRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataLabelRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string _Default
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "_Default");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "_Default", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool HasAutoFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasAutoFormat");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HasAutoFormat", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject HiddenFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HiddenFields", null);
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject get_HiddenFields(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "HiddenFields", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string InnerDetail
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "InnerDetail");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "InnerDetail", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject PageFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PageFields", null);
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject get_PageFields(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "PageFields", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range PageRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PageRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range PageRangeCells
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PageRangeCells");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant RefreshDate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RefreshDate");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string RefreshName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RefreshName");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject RowFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RowFields", null);
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject get_RowFields(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "RowFields", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool RowGrand
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RowGrand");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "RowGrand", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range RowRange
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RowRange");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool SaveData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SaveData");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SaveData", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant SourceData
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SourceData");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "SourceData", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range TableRange1
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TableRange1");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range TableRange2
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TableRange2");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Value
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Value");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Value", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject VisibleFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VisibleFields", null);
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject get_VisibleFields(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "VisibleFields", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 CacheIndex
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CacheIndex");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CacheIndex", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayErrorString
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayErrorString");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayErrorString", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool DisplayNullString
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayNullString");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayNullString", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableDrilldown
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableDrilldown");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableDrilldown", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableFieldDialog
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableFieldDialog");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableFieldDialog", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool EnableWizard
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableWizard");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableWizard", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string ErrorString
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ErrorString");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ErrorString", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool ManualUpdate
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ManualUpdate");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ManualUpdate", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool MergeLabels
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MergeLabels");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "MergeLabels", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string NullString
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "NullString");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "NullString", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.PivotFormulas PivotFormulas
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotFormulas");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotFormulas newClass = new LateBindingApi.Excel.PivotFormulas(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool SubtotalHiddenPageItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SubtotalHiddenPageItems");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SubtotalHiddenPageItems", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 PageFieldOrder
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PageFieldOrder");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PageFieldOrder", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string PageFieldStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PageFieldStyle");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PageFieldStyle", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 PageFieldWrapCount
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PageFieldWrapCount");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PageFieldWrapCount", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool PreserveFormatting
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PreserveFormatting");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PreserveFormatting", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string PivotSelection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotSelection");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PivotSelection", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlPTSelectionMode SelectionMode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SelectionMode");
				return (LateBindingApi.Excel.Enums.XlPTSelectionMode)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SelectionMode", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string TableStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TableStyle");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TableStyle", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Tag
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Tag");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Tag", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string VacatedStyle
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VacatedStyle");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "VacatedStyle", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool PrintTitles
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PrintTitles");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PrintTitles", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.CubeFields CubeFields
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CubeFields");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.CubeFields newClass = new LateBindingApi.Excel.CubeFields(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string GrandTotalName
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "GrandTotalName");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "GrandTotalName", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool SmallGrid
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SmallGrid");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SmallGrid", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool RepeatItemsOnEachPrintedPage
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "RepeatItemsOnEachPrintedPage");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "RepeatItemsOnEachPrintedPage", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool TotalsAnnotation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TotalsAnnotation");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TotalsAnnotation", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public string PivotSelectionStandard
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotSelectionStandard");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PivotSelectionStandard", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotField DataPivotField
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataPivotField");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotField newClass = new LateBindingApi.Excel.PivotField(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool EnableDataValueEditing
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableDataValueEditing");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableDataValueEditing", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public string MDX
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MDX");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool ViewCalculatedMembers
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ViewCalculatedMembers");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ViewCalculatedMembers", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.CalculatedMembers CalculatedMembers
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CalculatedMembers");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.CalculatedMembers newClass = new LateBindingApi.Excel.CalculatedMembers(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool DisplayImmediateItems
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayImmediateItems");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayImmediateItems", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool EnableFieldList
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableFieldList");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableFieldList", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool VisualTotals
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VisualTotals");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "VisualTotals", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool ShowPageMultipleItemLabel
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowPageMultipleItemLabel");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowPageMultipleItemLabel", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlPivotTableVersionList Version
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Version");
				return (LateBindingApi.Excel.Enums.XlPivotTableVersionList)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool DisplayEmptyRow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayEmptyRow");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayEmptyRow", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool DisplayEmptyColumn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayEmptyColumn");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayEmptyColumn", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public bool ShowCellBackgroundFromOLAP
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowCellBackgroundFromOLAP");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowCellBackgroundFromOLAP", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.PivotAxis PivotColumnAxis
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotColumnAxis");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotAxis newClass = new LateBindingApi.Excel.PivotAxis(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.PivotAxis PivotRowAxis
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PivotRowAxis");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotAxis newClass = new LateBindingApi.Excel.PivotAxis(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool ShowDrillIndicators
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowDrillIndicators");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowDrillIndicators", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool PrintDrillIndicators
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "PrintDrillIndicators");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "PrintDrillIndicators", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DisplayMemberPropertyTooltips
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayMemberPropertyTooltips");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayMemberPropertyTooltips", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DisplayContextTooltips
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayContextTooltips");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayContextTooltips", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public Int32 CompactRowIndent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CompactRowIndent");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CompactRowIndent", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlLayoutRowType LayoutRowDefault
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "LayoutRowDefault");
				return (LateBindingApi.Excel.Enums.XlLayoutRowType)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "LayoutRowDefault", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool DisplayFieldCaptions
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DisplayFieldCaptions");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DisplayFieldCaptions", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.PivotFilters ActiveFilters
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveFilters");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotFilters newClass = new LateBindingApi.Excel.PivotFilters(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool InGridDropZones
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "InGridDropZones");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "InGridDropZones", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public COMVariant TableStyle2
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TableStyle2");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "TableStyle2", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleLastColumn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleLastColumn");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleLastColumn", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleRowStripes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleRowStripes");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleRowStripes", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleColumnStripes
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleColumnStripes");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleColumnStripes", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleRowHeaders
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleRowHeaders");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleRowHeaders", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool ShowTableStyleColumnHeaders
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowTableStyleColumnHeaders");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowTableStyleColumnHeaders", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool AllowMultipleFilters
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllowMultipleFilters");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AllowMultipleFilters", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public string CompactLayoutRowHeader
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CompactLayoutRowHeader");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CompactLayoutRowHeader", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public string CompactLayoutColumnHeader
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CompactLayoutColumnHeader");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CompactLayoutColumnHeader", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool FieldListSortAscending
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "FieldListSortAscending");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "FieldListSortAscending", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public bool SortUsingCustomLists
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SortUsingCustomLists");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SortUsingCustomLists", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public string Location
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Location");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Location", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool EnableWriteback
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EnableWriteback");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EnableWriteback", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlAllocation Allocation
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Allocation");
				return (LateBindingApi.Excel.Enums.XlAllocation)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Allocation", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlAllocationValue AllocationValue
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllocationValue");
				return (LateBindingApi.Excel.Enums.XlAllocationValue)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AllocationValue", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlAllocationMethod AllocationMethod
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllocationMethod");
				return (LateBindingApi.Excel.Enums.XlAllocationMethod)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AllocationMethod", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public string AllocationWeightExpression
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AllocationWeightExpression");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AllocationWeightExpression", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.PivotTableChangeList ChangeList
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ChangeList");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.PivotTableChangeList newClass = new LateBindingApi.Excel.PivotTableChangeList(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Slicers Slicers
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Slicers");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Slicers newClass = new LateBindingApi.Excel.Slicers(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL14")]
		public string AlternativeText
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AlternativeText");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "AlternativeText", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public string Summary
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Summary");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Summary", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool VisualTotalsForSets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VisualTotalsForSets");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "VisualTotalsForSets", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool ShowValuesRow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ShowValuesRow");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ShowValuesRow", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public bool CalculatedMembersInFilters
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CalculatedMembersInFilters");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "CalculatedMembersInFilters", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant AddFields()
		{
			object returnValue = Invoker.MethodReturn(this, "AddFields", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant AddFields(object rowFields, object columnFields, object pageFields, object addToTable)
		{
			object[] paramArray = new object[4];
			paramArray[0] = rowFields;
			paramArray[1] = columnFields;
			paramArray[2] = pageFields;
			paramArray[3] = addToTable;
			object returnValue = Invoker.MethodReturn(this, "AddFields", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ShowPages()
		{
			object returnValue = Invoker.MethodReturn(this, "ShowPages", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ShowPages(object pageField)
		{
			object[] paramArray = new object[1];
			paramArray[0] = pageField;
			object returnValue = Invoker.MethodReturn(this, "ShowPages", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject PivotFields()
		{
			object returnValue = Invoker.MethodReturn(this, "PivotFields", null);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject PivotFields(object index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.MethodReturn(this, "PivotFields", paramArray);
			COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool RefreshTable()
		{
			object returnValue = Invoker.MethodReturn(this, "RefreshTable", null);
			return (bool)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.CalculatedFields CalculatedFields()
		{
			object returnValue = Invoker.MethodReturn(this, "CalculatedFields", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.CalculatedFields newClass = new LateBindingApi.Excel.CalculatedFields(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Double GetData(string name)
		{
			object[] paramArray = new object[1];
			paramArray[0] = name;
			object returnValue = Invoker.MethodReturn(this, "GetData", paramArray);
			return (Double)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void ListFormulas()
		{
			Invoker.Method(this, "ListFormulas", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.PivotCache PivotCache()
		{
			object returnValue = Invoker.MethodReturn(this, "PivotCache", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.PivotCache newClass = new LateBindingApi.Excel.PivotCache(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PivotTableWizard()
		{
			Invoker.Method(this, "PivotTableWizard", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PivotTableWizard(object sourceType, object sourceData, object tableDestination, object tableName, object rowGrand, object columnGrand, object saveData, object hasAutoFormat, object autoPage, object reserved, object backgroundQuery, object optimizeCache, object pageFieldOrder, object pageFieldWrapCount, object readData, object connection)
		{
			object[] paramArray = new object[16];
			paramArray[0] = sourceType;
			paramArray[1] = sourceData;
			paramArray[2] = tableDestination;
			paramArray[3] = tableName;
			paramArray[4] = rowGrand;
			paramArray[5] = columnGrand;
			paramArray[6] = saveData;
			paramArray[7] = hasAutoFormat;
			paramArray[8] = autoPage;
			paramArray[9] = reserved;
			paramArray[10] = backgroundQuery;
			paramArray[11] = optimizeCache;
			paramArray[12] = pageFieldOrder;
			paramArray[13] = pageFieldWrapCount;
			paramArray[14] = readData;
			paramArray[15] = connection;
			Invoker.Method(this, "PivotTableWizard", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PivotSelect(string name, LateBindingApi.Excel.Enums.XlPTSelectionMode mode)
		{
			object[] paramArray = new object[2];
			paramArray[0] = name;
			paramArray[1] = mode;
			Invoker.Method(this, "PivotSelect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void PivotSelect(string name, LateBindingApi.Excel.Enums.XlPTSelectionMode mode, object useStandardName)
		{
			object[] paramArray = new object[3];
			paramArray[0] = name;
			paramArray[1] = mode;
			paramArray[2] = useStandardName;
			Invoker.Method(this, "PivotSelect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Update()
		{
			Invoker.Method(this, "Update", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Format(LateBindingApi.Excel.Enums.XlPivotFormatType format)
		{
			object[] paramArray = new object[1];
			paramArray[0] = format;
			Invoker.Method(this, "Format", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public void _PivotSelect(string name, LateBindingApi.Excel.Enums.XlPTSelectionMode mode)
		{
			object[] paramArray = new object[2];
			paramArray[0] = name;
			paramArray[1] = mode;
			Invoker.Method(this, "_PivotSelect", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range GetPivotData()
		{
			object returnValue = Invoker.MethodReturn(this, "GetPivotData", null);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.Range GetPivotData(object dataField, object field1, object item1, object field2, object item2, object field3, object item3, object field4, object item4, object field5, object item5, object field6, object item6, object field7, object item7, object field8, object item8, object field9, object item9, object field10, object item10, object field11, object item11, object field12, object item12, object field13, object item13, object field14, object item14)
		{
			object[] paramArray = new object[29];
			paramArray[0] = dataField;
			paramArray[1] = field1;
			paramArray[2] = item1;
			paramArray[3] = field2;
			paramArray[4] = item2;
			paramArray[5] = field3;
			paramArray[6] = item3;
			paramArray[7] = field4;
			paramArray[8] = item4;
			paramArray[9] = field5;
			paramArray[10] = item5;
			paramArray[11] = field6;
			paramArray[12] = item6;
			paramArray[13] = field7;
			paramArray[14] = item7;
			paramArray[15] = field8;
			paramArray[16] = item8;
			paramArray[17] = field9;
			paramArray[18] = item9;
			paramArray[19] = field10;
			paramArray[20] = item10;
			paramArray[21] = field11;
			paramArray[22] = item11;
			paramArray[23] = field12;
			paramArray[24] = item12;
			paramArray[25] = field13;
			paramArray[26] = item13;
			paramArray[27] = field14;
			paramArray[28] = item14;
			object returnValue = Invoker.MethodReturn(this, "GetPivotData", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotField AddDataField(COMObject field)
		{
			object[] paramArray = new object[1];
			paramArray[0] = field;
			object returnValue = Invoker.MethodReturn(this, "AddDataField", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.PivotField newClass = new LateBindingApi.Excel.PivotField(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public LateBindingApi.Excel.PivotField AddDataField(COMObject field, object caption, object function)
		{
			object[] paramArray = new object[3];
			paramArray[0] = field;
			paramArray[1] = caption;
			paramArray[2] = function;
			object returnValue = Invoker.MethodReturn(this, "AddDataField", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.PivotField newClass = new LateBindingApi.Excel.PivotField(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public COMVariant Dummy15(object arg1)
		{
			object[] paramArray = new object[1];
			paramArray[0] = arg1;
			object returnValue = Invoker.MethodReturn(this, "Dummy15", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public COMVariant Dummy15(object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[30];
			paramArray[0] = arg1;
			paramArray[1] = arg2;
			paramArray[2] = arg3;
			paramArray[3] = arg4;
			paramArray[4] = arg5;
			paramArray[5] = arg6;
			paramArray[6] = arg7;
			paramArray[7] = arg8;
			paramArray[8] = arg9;
			paramArray[9] = arg10;
			paramArray[10] = arg11;
			paramArray[11] = arg12;
			paramArray[12] = arg13;
			paramArray[13] = arg14;
			paramArray[14] = arg15;
			paramArray[15] = arg16;
			paramArray[16] = arg17;
			paramArray[17] = arg18;
			paramArray[18] = arg19;
			paramArray[19] = arg20;
			paramArray[20] = arg21;
			paramArray[21] = arg22;
			paramArray[22] = arg23;
			paramArray[23] = arg24;
			paramArray[24] = arg25;
			paramArray[25] = arg26;
			paramArray[26] = arg27;
			paramArray[27] = arg28;
			paramArray[28] = arg29;
			paramArray[29] = arg30;
			object returnValue = Invoker.MethodReturn(this, "Dummy15", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public string CreateCubeFile(string file)
		{
			object[] paramArray = new object[1];
			paramArray[0] = file;
			object returnValue = Invoker.MethodReturn(this, "CreateCubeFile", paramArray);
			return (string)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14")]
		public string CreateCubeFile(string file, object measures, object levels, object members, object properties)
		{
			object[] paramArray = new object[5];
			paramArray[0] = file;
			paramArray[1] = measures;
			paramArray[2] = levels;
			paramArray[3] = members;
			paramArray[4] = properties;
			object returnValue = Invoker.MethodReturn(this, "CreateCubeFile", paramArray);
			return (string)returnValue;
		}

		[SupportByLibrary("XL12","XL14")]
		public void ClearTable()
		{
			Invoker.Method(this, "ClearTable", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void RowAxisLayout(LateBindingApi.Excel.Enums.XlLayoutRowType rowLayout)
		{
			object[] paramArray = new object[1];
			paramArray[0] = rowLayout;
			Invoker.Method(this, "RowAxisLayout", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void SubtotalLocation(LateBindingApi.Excel.Enums.XlSubtototalLocationType location)
		{
			object[] paramArray = new object[1];
			paramArray[0] = location;
			Invoker.Method(this, "SubtotalLocation", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ClearAllFilters()
		{
			Invoker.Method(this, "ClearAllFilters", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ConvertToFormulas(bool convertFilters)
		{
			object[] paramArray = new object[1];
			paramArray[0] = convertFilters;
			Invoker.Method(this, "ConvertToFormulas", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ChangeConnection(LateBindingApi.Excel.WorkbookConnection conn)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(conn,0);
			Invoker.Method(this, "ChangeConnection", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ChangePivotCache(object pivotCache)
		{
			object[] paramArray = new object[1];
			paramArray[0] = pivotCache;
			Invoker.Method(this, "ChangePivotCache", paramArray);
		}

		[SupportByLibrary("XL14")]
		public void AllocateChanges()
		{
			Invoker.Method(this, "AllocateChanges", null);
		}

		[SupportByLibrary("XL14")]
		public void CommitChanges()
		{
			Invoker.Method(this, "CommitChanges", null);
		}

		[SupportByLibrary("XL14")]
		public void DiscardChanges()
		{
			Invoker.Method(this, "DiscardChanges", null);
		}

		[SupportByLibrary("XL14")]
		public void RefreshDataSourceValues()
		{
			Invoker.Method(this, "RefreshDataSourceValues", null);
		}

		[SupportByLibrary("XL14")]
		public void RepeatAllLabels(LateBindingApi.Excel.Enums.XlPivotFieldRepeatLabels repeat)
		{
			object[] paramArray = new object[1];
			paramArray[0] = repeat;
			Invoker.Method(this, "RepeatAllLabels", paramArray);
		}

		#endregion

	}
}
