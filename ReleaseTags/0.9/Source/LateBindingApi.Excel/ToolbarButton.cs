//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class ToolbarButton : COMObject
	{
		#region Construction

		public ToolbarButton(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public ToolbarButton(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public ToolbarButton(COMObject replacedObject) : base(replacedObject)
		{
		}

		public ToolbarButton()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool BuiltIn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BuiltIn");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool BuiltInFace
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "BuiltInFace");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "BuiltInFace", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Enabled
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Enabled");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Enabled", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 HelpContextID
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HelpContextID");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HelpContextID", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string HelpFile
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HelpFile");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "HelpFile", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 ID
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ID");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool IsGap
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "IsGap");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Name", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string OnAction
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "OnAction");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "OnAction", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public bool Pushed
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Pushed");
				return (bool)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Pushed", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string StatusBar
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "StatusBar");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "StatusBar", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Width
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Width");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Width", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Copy(LateBindingApi.Excel.Toolbar toolbar, Int32 before)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(toolbar,0);
			paramArray[1] = before;
			Invoker.Method(this, "Copy", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void CopyFace()
		{
			Invoker.Method(this, "CopyFace", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Edit()
		{
			Invoker.Method(this, "Edit", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Move(LateBindingApi.Excel.Toolbar toolbar, Int32 before)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(toolbar,0);
			paramArray[1] = before;
			Invoker.Method(this, "Move", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PasteFace()
		{
			Invoker.Method(this, "PasteFace", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Reset()
		{
			Invoker.Method(this, "Reset", null);
		}

		#endregion

	}
}
