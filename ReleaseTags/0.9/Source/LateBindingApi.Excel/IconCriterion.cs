//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL12","XL14")]
	public class IconCriterion : COMObject
	{
		#region Construction

		public IconCriterion(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public IconCriterion(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public IconCriterion(COMObject replacedObject) : base(replacedObject)
		{
		}

		public IconCriterion()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL12","XL14")]
		public Int32 Index
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Index");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlConditionValueTypes Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (LateBindingApi.Excel.Enums.XlConditionValueTypes)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Type", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public COMVariant Value
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Value");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "Value", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public Int32 Operator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Operator");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Operator", value);
			}						
		}


		[SupportByLibrary("XL14")]
		public LateBindingApi.Excel.Enums.XlIcon Icon
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Icon");
				return (LateBindingApi.Excel.Enums.XlIcon)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Icon", value);
			}						
		}


		#endregion

		#region Methods

		#endregion

	}
}
