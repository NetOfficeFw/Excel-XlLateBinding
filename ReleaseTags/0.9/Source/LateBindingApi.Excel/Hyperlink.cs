//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class Hyperlink : COMObject
	{
		#region Construction

		public Hyperlink(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Hyperlink(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Hyperlink(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Hyperlink()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Name
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Name");
				return (string)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Range
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Range");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Shape Shape
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Shape");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Shape newClass = new LateBindingApi.Excel.Shape(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string SubAddress
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SubAddress");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SubAddress", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string Address
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Address");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Address", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Type
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Type");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string EmailSubject
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "EmailSubject");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "EmailSubject", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string ScreenTip
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ScreenTip");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ScreenTip", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string TextToDisplay
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "TextToDisplay");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "TextToDisplay", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void AddToFavorites()
		{
			Invoker.Method(this, "AddToFavorites", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Follow()
		{
			Invoker.Method(this, "Follow", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Follow(object newWindow, object addHistory, object extraInfo, object method, object headerInfo)
		{
			object[] paramArray = new object[5];
			paramArray[0] = newWindow;
			paramArray[1] = addHistory;
			paramArray[2] = extraInfo;
			paramArray[3] = method;
			paramArray[4] = headerInfo;
			Invoker.Method(this, "Follow", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void CreateNewDocument(string filename, bool editNow, bool overwrite)
		{
			object[] paramArray = new object[3];
			paramArray[0] = filename;
			paramArray[1] = editNow;
			paramArray[2] = overwrite;
			Invoker.Method(this, "CreateNewDocument", paramArray);
		}

		#endregion

	}
}
