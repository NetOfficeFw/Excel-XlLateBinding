//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL12","XL14")]
	public class SortField : COMObject
	{
		#region Construction

		public SortField(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public SortField(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public SortField(COMObject replacedObject) : base(replacedObject)
		{
		}

		public SortField()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlSortOn SortOn
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SortOn");
				return (LateBindingApi.Excel.Enums.XlSortOn)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "SortOn", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public COMObject SortOnValue
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "SortOnValue");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Range Key
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Key");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlSortOrder Order
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Order");
				return (LateBindingApi.Excel.Enums.XlSortOrder)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Order", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public COMVariant CustomOrder
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CustomOrder");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "CustomOrder", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlSortDataOption DataOption
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DataOption");
				return (LateBindingApi.Excel.Enums.XlSortDataOption)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "DataOption", value);
			}						
		}


		[SupportByLibrary("XL12","XL14")]
		public Int32 Priority
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Priority");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "Priority", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL12","XL14")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void ModifyKey(LateBindingApi.Excel.Range key)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(key,0);
			Invoker.Method(this, "ModifyKey", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void SetIcon(LateBindingApi.Excel.Icon icon)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(icon,0);
			Invoker.Method(this, "SetIcon", paramArray);
		}

		#endregion

	}
}
