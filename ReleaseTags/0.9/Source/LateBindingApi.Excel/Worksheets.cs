//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
using System.Collections;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class Worksheets : COMObject
	{
		#region Construction

		public Worksheets(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public Worksheets(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public Worksheets(COMObject replacedObject) : base(replacedObject)
		{
		}

		public Worksheets()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 Count
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Count");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Worksheet this[object index]
		{
			get
			{
				object[] paramArray = new object[1];
				paramArray[0] = index;		
				object returnValue = Invoker.PropertyGet(this, "Item", paramArray);
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Worksheet newClass = new LateBindingApi.Excel.Worksheet(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public IEnumerator GetEnumerator()
		{
			object enumProxy = Invoker.PropertyGet(this, "_NewEnum");
			COMObject enumerator = new COMObject(this, enumProxy);
			Invoker.Method(enumerator, "Reset", null);
			bool isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
            while (true == isMoveNextTrue)
            {
                object itemProxy = Invoker.PropertyGet(enumerator, "Current", null);
				LateBindingApi.Excel.Worksheet returnClass = new LateBindingApi.Excel.Worksheet (this, itemProxy);
				isMoveNextTrue = (bool)Invoker.MethodReturn(enumerator, "MoveNext", null);
				yield return returnClass;
            }
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.HPageBreaks HPageBreaks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HPageBreaks");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.HPageBreaks newClass = new LateBindingApi.Excel.HPageBreaks(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.VPageBreaks VPageBreaks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "VPageBreaks");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.VPageBreaks newClass = new LateBindingApi.Excel.VPageBreaks(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Visible
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Visible");
				COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
				return returnObject;
			}
			set
			{
				Invoker.PropertySet(this, "Visible", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
        public Excel.Worksheet Add()
		{
			object returnValue = Invoker.MethodReturn(this, "Add", null);
            if (null == returnValue)
                return null;
            LateBindingApi.Excel.Worksheet newClass = new LateBindingApi.Excel.Worksheet(this, returnValue);
            return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
        public Excel.Worksheet Add(object before, object after, object count, object type)
		{
			object[] paramArray = new object[4];
			paramArray[0] = before;
			paramArray[1] = after;
			paramArray[2] = count;
			paramArray[3] = type;
			object returnValue = Invoker.MethodReturn(this, "Add", paramArray);
            if (null == returnValue)
                return null;
            LateBindingApi.Excel.Worksheet newClass = new LateBindingApi.Excel.Worksheet(this, returnValue);
            return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Copy()
		{
			Invoker.Method(this, "Copy", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Copy(object before, object after)
		{
			object[] paramArray = new object[2];
			paramArray[0] = before;
			paramArray[1] = after;
			Invoker.Method(this, "Copy", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Delete()
		{
			Invoker.Method(this, "Delete", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void FillAcrossSheets(LateBindingApi.Excel.Range range, LateBindingApi.Excel.Enums.XlFillWith type)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(range,0);
			paramArray[1] = type;
			Invoker.Method(this, "FillAcrossSheets", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Move()
		{
			Invoker.Method(this, "Move", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Move(object before, object after)
		{
			object[] paramArray = new object[2];
			paramArray[0] = before;
			paramArray[1] = after;
			Invoker.Method(this, "Move", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void _PrintOut()
		{
			Invoker.Method(this, "_PrintOut", null);
		}

		[SupportByLibrary("XL10","XL11","XL9")]
		public void _PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate)
		{
			object[] paramArray = new object[7];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			Invoker.Method(this, "_PrintOut", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void _PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName)
		{
			object[] paramArray = new object[8];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			paramArray[7] = prToFileName;
			Invoker.Method(this, "_PrintOut", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PrintPreview()
		{
			Invoker.Method(this, "PrintPreview", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PrintPreview(object enableChanges)
		{
			object[] paramArray = new object[1];
			paramArray[0] = enableChanges;
			Invoker.Method(this, "PrintPreview", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Select()
		{
			Invoker.Method(this, "Select", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Select(object replace)
		{
			object[] paramArray = new object[1];
			paramArray[0] = replace;
			Invoker.Method(this, "Select", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void PrintOut()
		{
			Invoker.Method(this, "PrintOut", null);
		}

		[SupportByLibrary("XL10","XL11","XL9")]
		public void PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName)
		{
			object[] paramArray = new object[8];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			paramArray[7] = prToFileName;
			Invoker.Method(this, "PrintOut", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate, object prToFileName, object ignorePrintAreas)
		{
			object[] paramArray = new object[9];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			paramArray[7] = prToFileName;
			paramArray[8] = ignorePrintAreas;
			Invoker.Method(this, "PrintOut", paramArray);
		}

		[SupportByLibrary("XL12","XL14")]
		public void __PrintOut()
		{
			Invoker.Method(this, "__PrintOut", null);
		}

		[SupportByLibrary("XL12","XL14")]
		public void __PrintOut(object from, object to, object copies, object preview, object activePrinter, object printToFile, object collate)
		{
			object[] paramArray = new object[7];
			paramArray[0] = from;
			paramArray[1] = to;
			paramArray[2] = copies;
			paramArray[3] = preview;
			paramArray[4] = activePrinter;
			paramArray[5] = printToFile;
			paramArray[6] = collate;
			Invoker.Method(this, "__PrintOut", paramArray);
		}

		#endregion

	}
}
