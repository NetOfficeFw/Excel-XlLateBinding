//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL12","XL14")]
	public class TableStyleElement : COMObject
	{
		#region Construction

		public TableStyleElement(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public TableStyleElement(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public TableStyleElement(COMObject replacedObject) : base(replacedObject)
		{
		}

		public TableStyleElement()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public COMObject Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public bool HasFormat
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "HasFormat");
				return (bool)returnValue;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Interior Interior
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Interior");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Interior newClass = new LateBindingApi.Excel.Interior(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Borders Borders
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Borders");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Borders newClass = new LateBindingApi.Excel.Borders(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public LateBindingApi.Excel.Font Font
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Font");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Font newClass = new LateBindingApi.Excel.Font(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL12","XL14")]
		public Int32 StripeSize
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "StripeSize");
				return (Int32)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "StripeSize", value);
			}						
		}


		#endregion

		#region Methods

		[SupportByLibrary("XL12","XL14")]
		public void Clear()
		{
			Invoker.Method(this, "Clear", null);
		}

		#endregion

	}
}
