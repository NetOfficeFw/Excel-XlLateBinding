//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.Excel
{
	[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
	public class _Global : COMObject
	{
		#region Construction

		public _Global(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public _Global(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public _Global(COMObject replacedObject) : base(replacedObject)
		{
		}

		public _Global()
		{
		}

		#endregion

		#region Properties

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Application
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Application");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Enums.XlCreator Creator
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Creator");
				return (LateBindingApi.Excel.Enums.XlCreator)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Application Parent
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Parent");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Application newClass = new LateBindingApi.Excel.Application(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range ActiveCell
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveCell");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Chart ActiveChart
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveChart");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Chart newClass = new LateBindingApi.Excel.Chart(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.DialogSheet ActiveDialog
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveDialog");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.DialogSheet newClass = new LateBindingApi.Excel.DialogSheet(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.MenuBar ActiveMenuBar
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveMenuBar");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.MenuBar newClass = new LateBindingApi.Excel.MenuBar(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public string ActivePrinter
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActivePrinter");
				return (string)returnValue;
			}
			set
			{
				Invoker.PropertySet(this, "ActivePrinter", value);
			}						
		}


		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject ActiveSheet
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveSheet");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Window ActiveWindow
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveWindow");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Window newClass = new LateBindingApi.Excel.Window(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Workbook ActiveWorkbook
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ActiveWorkbook");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Workbook newClass = new LateBindingApi.Excel.Workbook(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.AddIns AddIns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "AddIns");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.AddIns newClass = new LateBindingApi.Excel.AddIns(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.Assistant Assistant
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Assistant");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.Assistant newClass = new LateBindingApi.Office.Assistant(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Cells
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Cells");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Charts
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Charts");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Columns
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Columns");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Office.CommandBars CommandBars
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "CommandBars");
				if(null == returnValue)
					return null;
				LateBindingApi.Office.CommandBars newClass = new LateBindingApi.Office.CommandBars(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 DDEAppReturnCode
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DDEAppReturnCode");
				return (Int32)returnValue;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets DialogSheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "DialogSheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.MenuBars MenuBars
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "MenuBars");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.MenuBars newClass = new LateBindingApi.Excel.MenuBars(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Modules Modules
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Modules");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Modules newClass = new LateBindingApi.Excel.Modules(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Names Names
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Names");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Names newClass = new LateBindingApi.Excel.Names(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range get_Range(object cell1)
		{
			object[] paramArray = new object[1];
			paramArray[0] = cell1;
			object returnValue = Invoker.PropertyGet(this, "Range", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range get_Range(object cell1, object cell2)
		{
			object[] paramArray = new object[2];
			paramArray[0] = cell1;
			paramArray[1] = cell2;
			object returnValue = Invoker.PropertyGet(this, "Range", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Rows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Rows");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMObject Selection
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Selection");
				COMObject returnObject = LateBindingApi.Core.Factory.CreateObjectFromComProxy(this, returnValue);
				return returnObject;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Sheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Sheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Menu get_ShortcutMenus(Int32 index)
		{
			object[] paramArray = new object[1];
			paramArray[0] = index;
			object returnValue = Invoker.PropertyGet(this, "ShortcutMenus", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Menu newClass = new LateBindingApi.Excel.Menu(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Workbook ThisWorkbook
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "ThisWorkbook");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Workbook newClass = new LateBindingApi.Excel.Workbook(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Toolbars Toolbars
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Toolbars");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Toolbars newClass = new LateBindingApi.Excel.Toolbars(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Windows Windows
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Windows");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Windows newClass = new LateBindingApi.Excel.Windows(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Workbooks Workbooks
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Workbooks");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Workbooks newClass = new LateBindingApi.Excel.Workbooks(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.WorksheetFunction WorksheetFunction
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "WorksheetFunction");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.WorksheetFunction newClass = new LateBindingApi.Excel.WorksheetFunction(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Worksheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Worksheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Excel4IntlMacroSheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Excel4IntlMacroSheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Sheets Excel4MacroSheets
		{
			get
			{
				object returnValue = Invoker.PropertyGet(this, "Excel4MacroSheets");
				if(null == returnValue)
					return null;
				LateBindingApi.Excel.Sheets newClass = new LateBindingApi.Excel.Sheets(this, returnValue);
				return newClass;
			}
		}

		#endregion

		#region Methods

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void Calculate()
		{
			Invoker.Method(this, "Calculate", null);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DDEExecute(Int32 channel, string _string)
		{
			object[] paramArray = new object[2];
			paramArray[0] = channel;
			paramArray[1] = _string;
			Invoker.Method(this, "DDEExecute", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public Int32 DDEInitiate(string app, string topic)
		{
			object[] paramArray = new object[2];
			paramArray[0] = app;
			paramArray[1] = topic;
			object returnValue = Invoker.MethodReturn(this, "DDEInitiate", paramArray);
			return (Int32)returnValue;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DDEPoke(Int32 channel, object item, object data)
		{
			object[] paramArray = new object[3];
			paramArray[0] = channel;
			paramArray[1] = item;
			paramArray[2] = data;
			Invoker.Method(this, "DDEPoke", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant DDERequest(Int32 channel, string item)
		{
			object[] paramArray = new object[2];
			paramArray[0] = channel;
			paramArray[1] = item;
			object returnValue = Invoker.MethodReturn(this, "DDERequest", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void DDETerminate(Int32 channel)
		{
			object[] paramArray = new object[1];
			paramArray[0] = channel;
			Invoker.Method(this, "DDETerminate", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Evaluate(object name)
		{
			object[] paramArray = new object[1];
			paramArray[0] = name;
			object returnValue = Invoker.MethodReturn(this, "Evaluate", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _Evaluate(object name)
		{
			object[] paramArray = new object[1];
			paramArray[0] = name;
			object returnValue = Invoker.MethodReturn(this, "_Evaluate", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant ExecuteExcel4Macro(string _string)
		{
			object[] paramArray = new object[1];
			paramArray[0] = _string;
			object returnValue = Invoker.MethodReturn(this, "ExecuteExcel4Macro", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Intersect(LateBindingApi.Excel.Range arg1, LateBindingApi.Excel.Range arg2)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(arg1,0);
			paramArray.SetValue(arg2,1);
			object returnValue = Invoker.MethodReturn(this, "Intersect", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Intersect(LateBindingApi.Excel.Range arg1, LateBindingApi.Excel.Range arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[30];
			paramArray.SetValue(arg1,0);
			paramArray.SetValue(arg2,1);
			paramArray[2] = arg3;
			paramArray[3] = arg4;
			paramArray[4] = arg5;
			paramArray[5] = arg6;
			paramArray[6] = arg7;
			paramArray[7] = arg8;
			paramArray[8] = arg9;
			paramArray[9] = arg10;
			paramArray[10] = arg11;
			paramArray[11] = arg12;
			paramArray[12] = arg13;
			paramArray[13] = arg14;
			paramArray[14] = arg15;
			paramArray[15] = arg16;
			paramArray[16] = arg17;
			paramArray[17] = arg18;
			paramArray[18] = arg19;
			paramArray[19] = arg20;
			paramArray[20] = arg21;
			paramArray[21] = arg22;
			paramArray[22] = arg23;
			paramArray[23] = arg24;
			paramArray[24] = arg25;
			paramArray[25] = arg26;
			paramArray[26] = arg27;
			paramArray[27] = arg28;
			paramArray[28] = arg29;
			paramArray[29] = arg30;
			object returnValue = Invoker.MethodReturn(this, "Intersect", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Run()
		{
			object returnValue = Invoker.MethodReturn(this, "Run", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant Run(object macro, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[31];
			paramArray[0] = macro;
			paramArray[1] = arg1;
			paramArray[2] = arg2;
			paramArray[3] = arg3;
			paramArray[4] = arg4;
			paramArray[5] = arg5;
			paramArray[6] = arg6;
			paramArray[7] = arg7;
			paramArray[8] = arg8;
			paramArray[9] = arg9;
			paramArray[10] = arg10;
			paramArray[11] = arg11;
			paramArray[12] = arg12;
			paramArray[13] = arg13;
			paramArray[14] = arg14;
			paramArray[15] = arg15;
			paramArray[16] = arg16;
			paramArray[17] = arg17;
			paramArray[18] = arg18;
			paramArray[19] = arg19;
			paramArray[20] = arg20;
			paramArray[21] = arg21;
			paramArray[22] = arg22;
			paramArray[23] = arg23;
			paramArray[24] = arg24;
			paramArray[25] = arg25;
			paramArray[26] = arg26;
			paramArray[27] = arg27;
			paramArray[28] = arg28;
			paramArray[29] = arg29;
			paramArray[30] = arg30;
			object returnValue = Invoker.MethodReturn(this, "Run", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _Run2()
		{
			object returnValue = Invoker.MethodReturn(this, "_Run2", null);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public COMVariant _Run2(object macro, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[31];
			paramArray[0] = macro;
			paramArray[1] = arg1;
			paramArray[2] = arg2;
			paramArray[3] = arg3;
			paramArray[4] = arg4;
			paramArray[5] = arg5;
			paramArray[6] = arg6;
			paramArray[7] = arg7;
			paramArray[8] = arg8;
			paramArray[9] = arg9;
			paramArray[10] = arg10;
			paramArray[11] = arg11;
			paramArray[12] = arg12;
			paramArray[13] = arg13;
			paramArray[14] = arg14;
			paramArray[15] = arg15;
			paramArray[16] = arg16;
			paramArray[17] = arg17;
			paramArray[18] = arg18;
			paramArray[19] = arg19;
			paramArray[20] = arg20;
			paramArray[21] = arg21;
			paramArray[22] = arg22;
			paramArray[23] = arg23;
			paramArray[24] = arg24;
			paramArray[25] = arg25;
			paramArray[26] = arg26;
			paramArray[27] = arg27;
			paramArray[28] = arg28;
			paramArray[29] = arg29;
			paramArray[30] = arg30;
			object returnValue = Invoker.MethodReturn(this, "_Run2", paramArray);
			COMVariant returnObject = LateBindingApi.Core.Factory.CreateVariantFromComProxy(this, returnValue);
			return returnObject;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SendKeys(object keys)
		{
			object[] paramArray = new object[1];
			paramArray[0] = keys;
			Invoker.Method(this, "SendKeys", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public void SendKeys(object keys, object wait)
		{
			object[] paramArray = new object[2];
			paramArray[0] = keys;
			paramArray[1] = wait;
			Invoker.Method(this, "SendKeys", paramArray);
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Union(LateBindingApi.Excel.Range arg1, LateBindingApi.Excel.Range arg2)
		{
			object[] paramArray = new object[2];
			paramArray.SetValue(arg1,0);
			paramArray.SetValue(arg2,1);
			object returnValue = Invoker.MethodReturn(this, "Union", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("XL10","XL11","XL12","XL14","XL9")]
		public LateBindingApi.Excel.Range Union(LateBindingApi.Excel.Range arg1, LateBindingApi.Excel.Range arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			object[] paramArray = new object[30];
			paramArray.SetValue(arg1,0);
			paramArray.SetValue(arg2,1);
			paramArray[2] = arg3;
			paramArray[3] = arg4;
			paramArray[4] = arg5;
			paramArray[5] = arg6;
			paramArray[6] = arg7;
			paramArray[7] = arg8;
			paramArray[8] = arg9;
			paramArray[9] = arg10;
			paramArray[10] = arg11;
			paramArray[11] = arg12;
			paramArray[12] = arg13;
			paramArray[13] = arg14;
			paramArray[14] = arg15;
			paramArray[15] = arg16;
			paramArray[16] = arg17;
			paramArray[17] = arg18;
			paramArray[18] = arg19;
			paramArray[19] = arg20;
			paramArray[20] = arg21;
			paramArray[21] = arg22;
			paramArray[22] = arg23;
			paramArray[23] = arg24;
			paramArray[24] = arg25;
			paramArray[25] = arg26;
			paramArray[26] = arg27;
			paramArray[27] = arg28;
			paramArray[28] = arg29;
			paramArray[29] = arg30;
			object returnValue = Invoker.MethodReturn(this, "Union", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.Excel.Range newClass = new LateBindingApi.Excel.Range(this, returnValue);
			return newClass;
		}

		#endregion

	}
}
