//Generated by LateBindingApi.CodeGenerator
using System;
using System.Reflection;
using System.ComponentModel;
using System.Runtime.InteropServices;
using LateBindingApi.Core;
namespace LateBindingApi.VBIDE
{
	[SupportByLibrary("VBE")]
	public class _VBProjects : _VBProjects_Old
	{
		#region Construction

		public _VBProjects(COMObject parentObject, object comProxy) : base(parentObject, comProxy)
		{
		}

		public _VBProjects(COMObject parentObject, object comProxy, Type comProxyType) : base(parentObject, comProxy, comProxyType)
		{
		}

		public _VBProjects(COMObject replacedObject) : base(replacedObject)
		{
		}

		public _VBProjects()
		{
		}

		#endregion

		#region Properties

		#endregion

		#region Methods

		[SupportByLibrary("VBE")]
		public LateBindingApi.VBIDE.VBProject Add(LateBindingApi.VBIDE.Enums.Vbext_ProjectType type)
		{
			object[] paramArray = new object[1];
			paramArray[0] = type;
			object returnValue = Invoker.MethodReturn(this, "Add", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.VBIDE.VBProject newClass = new LateBindingApi.VBIDE.VBProject(this, returnValue);
			return newClass;
		}

		[SupportByLibrary("VBE")]
		public void Remove(LateBindingApi.VBIDE.VBProject lpc)
		{
			object[] paramArray = new object[1];
			paramArray.SetValue(lpc,0);
			Invoker.Method(this, "Remove", paramArray);
		}

		[SupportByLibrary("VBE")]
		public LateBindingApi.VBIDE.VBProject Open(string bstrPath)
		{
			object[] paramArray = new object[1];
			paramArray[0] = bstrPath;
			object returnValue = Invoker.MethodReturn(this, "Open", paramArray);
			if(null == returnValue)
				return null;
			LateBindingApi.VBIDE.VBProject newClass = new LateBindingApi.VBIDE.VBProject(this, returnValue);
			return newClass;
		}

		#endregion

	}
}
